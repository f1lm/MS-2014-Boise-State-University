(function($) {
	function do_all_client_side_twitter_oembed() {	
		if( typeof twttr === undefined ) {
			$.getScript('//platform.twitter.com/widgets.js', function() { $( '.pending-tweet' ).each( do_client_side_twitter_oembed ); } );
		}
	}

	// handle failed tweets or tweets that haven't been fetched yet
	function do_client_side_twitter_oembed() {
		var $this = $(this),
			text,
			url = 'https://api.twitter.com/1/statuses/oembed.json?omit_script=true&callback=?&';

		// Handle instances where make_clickable gets too friendly and linkifies our Twitter URL 
		if ( $this.has( 'a' ).length ) {
			text = $this.find( 'a' ).first().attr( 'href' );
		} else {
			text = $this.text();
		}
			
		// If we find an exact match, we want to fetch its content from the oembed endpoint and display it
		if ( text.match( /^http(s|):\/\/twitter\.com(\/\#\!\/|\/)([a-zA-Z0-9_]{1,20})\/status(es)*\/(\d+)$/ ) ) {
			url += 'url=' + encodeURIComponent( text );
		} else if ( text.match( /^(\d+)$/ ) ) {
			url += 'id=' + text;
		} else {
			return;
		}

		// Need to make a JSONP call to avoid CORS issues
		$.getJSON( url, function( data ) {
			if ( data.html ) {
				$this.html( data.html );
				$this.show();
				twttr.widgets.load();
			}
		} );
	}

	$( document ).ready( do_all_client_side_twitter_oembed );
	$( document.body ).on('post-load', do_all_client_side_twitter_oembed );
})(jQuery);
;
jQuery( document.body ).on( 'post-load', function() {
	if ( typeof twttr == 'object' && twttr.widgets && twttr.widgets.load )
		twttr.widgets.load();
});;
gigaom.nav = {
	animating: false,
	swipe_x_start: null,
	swipe_x_latest: null,
	window_width: 0
};

( function( $ ) {
	"use strict";

	gigaom.nav.init = function() {
		gigaom.nav.panels = {
			primary: {
				name: 'primary',
				direction: 'left',
				control: '#nav-toggle'
			},
			follow: {
				name: 'follow',
				direction: 'right',
				control: 'body:not(.go-device-full) .nav-plus a'
			}
		};

		gigaom.nav.$search = $('.nav-search');
		gigaom.nav.$search_field = gigaom.nav.$search.find('input');
		gigaom.nav.$sidepanels = $('.sidepanel');
		gigaom.nav.$sidepanel = $('.sidepanel');
		gigaom.nav.$sidepanel_links = gigaom.nav.$sidepanels.find('a');
		gigaom.nav.drag_distance = 0;
		gigaom.nav.direction = null;
		gigaom.nav.val = 0;

		// initialize the sidepanel toggle behaviors
		for ( var panel in gigaom.nav.panels ) {
			gigaom.nav.init_sidepanel( panel );
		}//end for

		$(document).on( 'click tap MSPointerDown', '.go-device-full .nav-search, .go-device-tablet.show-search .nav-search', function( e ) {
			e.preventDefault();
			gigaom.nav.$search_field.focus();
		});

		$(document).on( 'click tap MSPointerDown', '.go-device-phone .nav-search, .go-device-tablet .nav-search', function( e ) {
			e.preventDefault();
			gigaom.nav.search_show();
		});

		$(document).on( 'blur', '.go-device-phone .nav-search input, .go-device-tablet .nav-search input', function( e ) {
			gigaom.nav.search_hide();
		});

		$(document).on('click', '.sidepanel .expandable > h5', function(e) {
			e.preventDefault();
			gigaom.nav.expandable(this);
		});

		// hover intent on the icons in the full nav
		$(document).on('mouseenter', '.icons.right', function() {
			if ( true !== $(this).data('prevent-hover') ) {
				$(this).addClass('hovering');
			}//end else
		});

		$(document).on('mouseleave', '.icons.right', function() {
			$(this).removeClass('hovering');
		});

		$(document).on('mouseenter', '.icons.right > li', function() {
			$(this).doTimeout( 250, function() {
				if ( ! this.hasClass('nav-hover') ) {
					if ( true !== $(this).data('prevent-hover') ) {
						this.addClass('nav-hover');

						var $controller = this.children('a');

						// if we are in full-width mode and this controller has a panel,
						// publish a control open event on hover
						if ( gigaom.$html_body.hasClass('go-device-full') && $controller.data('panel') ) {
							amplify.publish( 'go-nav-control-open', $controller.data('panel').name );
						}//end if
					}//end if
				}//end if
			});
		});

		$(document).on('mouseleave', '.icons.right > li', function() {
			$(this).doTimeout( 300, function() {
				if ( ! this.hasClass('nav-tap') ) {
					this.removeClass('nav-hover');
					this.data('prevent-hover', false);
				}//end if
			});
		});

		$(document).on('tap MSPointerDown', '.icons.right > li > a', function( e ) {
			e.preventDefault();
			e.stopPropagation();

			var $container = $(this).closest('li'); 

			if ( $container.hasClass('nav-tap') ) {
				$container.removeClass('nav-hover nav-tap');
			} else {
				$container.addClass('nav-hover nav-tap');
				$container.closest('.icons').find('li').not( $container ).removeClass('nav-tap nav-hover');
			}//end else

			$container.data('prevent-hover', true);
		});

		// make sure the icons are still clickable
		$(document).on('click tap', '.icons.right > li div a', function( e ) {
			e.stopPropagation();
		});
		
		// we only want to toggle the sidepanels when the width changes...not the height
		gigaom.nav.window_width = $( window ).width();

		$(window).resize( 'resize', function() {
			var window_width = $( window ).width();

			if ( ! gigaom.nav.$sidepanels.find('input:focus').length && window_width != gigaom.nav.window_width ) {
				gigaom.nav.toggle_reset();
				gigaom.$html_body.removeClass( 'show-search' );

				// the width has changed. Let's track the new width
				gigaom.nav.window_width = window_width;
			}
		});

		amplify.publish( 'go-nav-init' );
	};

	gigaom.nav.init_sidepanel = function( panel ) {
		$( gigaom.nav.panels[ panel ].control ).data( 'panel', gigaom.nav.panels[ panel ] );

		$(document).on('click', gigaom.nav.panels[ panel ].control, function(e) {
			if ( ! $( this ).data( 'panel' ) ) {
				return;
			}//end if

			e.preventDefault();
			gigaom.nav.toggle( $(this).data('panel').name, $(this).data('panel').direction );
		});
	};

	gigaom.nav.search_show = function() {
		if ( ! gigaom.$html_body.hasClass( 'show-search' ) ) {
			gigaom.$html_body.addClass( 'show-search' );
			gigaom.nav.$search_field.focus();
		}//end else
	};

	gigaom.nav.search_hide = function() {
		var value = $.trim( gigaom.nav.$search_field.val() );

		if ( '' === value ) {
			gigaom.$html_body.removeClass( 'show-search' );
		}//end if
	};

	gigaom.nav.toggle = function( panel, direction ) {
		// direction should only ever contain 'left' or 'right'
		gigaom.nav.val = gigaom.$wrapper.css( direction );
		gigaom.nav.direction = direction;
		gigaom.nav.$sidepanel = $('.sidepanel.' + panel);
		gigaom.$html_body.addClass( 'show-sidepanel' );
		gigaom.$html_body.addClass( 'show-sidepanel-' + panel );
		var max_width = null;
		var max_height = null;

		if ( "auto" === gigaom.nav.val || "0px" === gigaom.nav.val || ! gigaom.nav.val ) {
			gigaom.nav.swipe_init();

			gigaom.nav.val = 270;
			max_width = gigaom.$html_body.width();
			max_height = gigaom.nav.$sidepanel.height();

			if ( $(window).height() > max_height ) {
				max_height = $(window).height();
			}//end if

			// no horizontal scrollbar while the menu is out
			gigaom.$html_body.addClass('no-overflow');
			gigaom.$html_body.height( max_height );
			gigaom.nav.$sidepanel.addClass('exposed');

			gigaom.nav.animate_sidepanel( gigaom.nav.direction, gigaom.nav.val, function() {
				gigaom.$html_body.width( max_width );	
				
				gigaom.$wrapper.css( 'overflow', 'hidden' );
				gigaom.$wrapper.css( 'overflow-y', 'hidden' );
				gigaom.$wrapper.height( max_height );
				gigaom.$inner_wrapper.width( gigaom.$inner_wrapper.width() );
				gigaom.$inner_wrapper.css( gigaom.nav.direction, 0);
				gigaom.$inner_wrapper.css('position', 'absolute');
				gigaom.$nav.width( gigaom.$nav.width() );
				gigaom.$nav.height( gigaom.$nav.height() );
				gigaom.$wrapper.css('position', 'absolute');
				gigaom.$wrapper.width( $(window).width() - gigaom.nav.$sidepanel.width() );

				// Sometimes timing is off.  We don't know how.  Whe dhon't khnow where.  But it is happening
				// and the next if block MAKES SURE that the sidepanel is visible at the end of the opening
				// animation.
				if ( ! gigaom.nav.$sidepanel.is('.exposed') ) {
					gigaom.nav.$sidepanel.addClass('exposed');
				}

				amplify.publish( 'go-nav-control-open', panel );
			});
		} else {
			gigaom.nav.toggle_reset();
		}// end else
	};

	gigaom.nav.animate_sidepanel = function( direction, val, callback ) {
		var changed = {};
		changed[ direction ] = val;

		gigaom.$wrapper.animate( changed, 300, callback );
	};

	/**
	 * Resets the pagebody and viewport (untested)
	 */
	gigaom.nav.toggle_reset = function() {
		gigaom.nav.val = 0;

		gigaom.$wrapper.css('position', 'relative');
		gigaom.$wrapper.css('width', 'auto');
		gigaom.$inner_wrapper.removeAttr('style');
		gigaom.$nav.removeAttr('style');

		// animating on close results in some f'ed up stuff
		// So...just reset everything
		gigaom.$html_body.removeClass('no-overflow');

		for ( var panel in gigaom.nav.panels ) {
			gigaom.$html_body.removeClass( 'show-sidepanel-' + panel );
		}//end for

		gigaom.$html_body.removeClass( 'show-sidepanel' );

		gigaom.$html_body.removeAttr('style');
		gigaom.nav.$sidepanels.removeClass('exposed');
		gigaom.$wrapper.removeAttr('style');
		gigaom.nav.animating = false;
	};

	/**
	 * builds the expandable/collapsible elements in the sidepanel
	 */
	gigaom.nav.expandable = function (el) {
		var $p = $(el).parent();
		var $p2 = $p.parent();
		var expandable = $p.children('.content').first();

		if ( $p.is( '.active ') ) {
			expandable.hide();
			$p.removeClass('active');
		} // end if
		else {
			jQuery( '.content', $p2 ).not( expandable ).hide().parent('li').removeClass('active');
			expandable.show(0, function () {
				expandable.parent('li').addClass('active');
			});
		}// end else
	};

	/**
	 * setup events for swipe action when sidepanel is exposed
	 */
	gigaom.nav.swipe_init = function() {
		gigaom.$html_body.on( 'touchstart.nav-swipe', gigaom.nav.swipe_start );
		gigaom.$html_body.on( 'touchmove.nav-swipe', gigaom.nav.swipe_move );
		gigaom.$html_body.on( 'touchend.nav-swipe', gigaom.nav.swipe_end );
		gigaom.$html_body.on( 'touchcancel.nav-swipe', gigaom.nav.swipe_cancel );
	};

	/**
	 * Swipe is starting.  Capture starting x coords
	 */
	gigaom.nav.swipe_start =  function( e ) {
		gigaom.nav.swipe_x_start = e.originalEvent.pageX;
		gigaom.nav.swipe_x_latest = e.originalEvent.pageX;
	};

	/**
	 * Capture the current x coords when move event fires
	 */
	gigaom.nav.swipe_move = function( e ) {
		gigaom.nav.swipe_x_latest = e.originalEvent.pageX;
	};

	/**
	 * Swiping has ended.  Determine if we need to do anything.
	 */
	gigaom.nav.swipe_end = function(e) {
		var distance = gigaom.nav.swipe_x_start - gigaom.nav.swipe_x_latest;

		if (
				 ( distance > 100 && 'left' === gigaom.nav.direction )
			|| ( distance < -100 && 'right' === gigaom.nav.direction )
		) {
			gigaom.nav.toggle_reset();
			gigaom.nav.swipe_cancel( e );
		}
	};

	/**
	 * Cancel the swipe.  Unbind the events
	 */
	gigaom.nav.swipe_cancel = function( ) {
		gigaom.$html_body.off( 'touchstart.nav-swipe' );
		gigaom.$html_body.off( 'touchmove.nav-swipe' );
		gigaom.$html_body.off( 'touchend.nav-swipe' );
		gigaom.$html_body.off( 'touchcancel.nav-swipe' );
	};
})( jQuery );
;
gigaom.resize = {};

( function( $ ) {
	"use strict";

	gigaom.resize.$reset  = null;
	gigaom.resize.prefix  = 'go-device-';
	gigaom.resize.states  = [ 'full', 'phone', 'tablet' ];
	gigaom.resize.initial = true;

	/**
	 * clear resize classes
	 */
	gigaom.resize.clear_classes = function() {
		for( var i in gigaom.resize.states ) {
			gigaom.$html_body.removeClass( gigaom.resize.prefix + gigaom.resize.states[ i ] );
		}//end for
	};//end gigaom.resize.clear_classes

	/**
	 * Execute a resize action
	 */
	gigaom.resize.execute = function() {
		//Changing because, scrollbars...
		var page_width = Math.max( $(window).width(), window.innerWidth);

		if ( page_width >= 960 ) {
			gigaom.resize.set( 'full' );
		} else if ( page_width <= 640 ) {
			gigaom.resize.set( 'phone' );
		} else if ( page_width < 960 ) {
			gigaom.resize.set( 'tablet' );
		}//end elseif

		amplify.publish( 'go-resize-execute' );
		$( document ).trigger( 'go-resize-execute' );

		if ( gigaom.resize.timer ) {
			clearTimeout( gigaom.resize.timer );
		}//end if
	};//end gigaom.resize.execute

	/**
	 * call the child object init methods
	 */
	gigaom.resize.init = function() {
		gigaom.resize.dynamic.init();

		amplify.publish( 'go-resize-init' );
		$( document ).trigger( 'go-resize-init' );

		// only bind to resize if we're not in IE
		if ( gigaom.is_old_ie ) {
			// if we are on IE versions less than 9, always report
			// that we're on full width
			gigaom.resize.set( 'full' );
		} else {
			// when the window has resized, notify the core library that it may
			// need to do something.
			$( window ).resize( gigaom.resize.prep );

			// execute the first resize to force the proper layout on page load
			gigaom.resize.execute();
		}//end else
		
		if ( true === gigaom.resize.initial ) {
			amplify.publish( 'go-resize-initial' );
			$( document ).trigger( 'go-resize-initial' );
			gigaom.resize.initial = false;
		}//end if
	};//end gigaom.resize.init

	/**
	 * Get ready to do a resize action, which fires off after 100 miliseconds
	 * to avoid continuous calling.
	 *
	 * This method is called using $.proxy so the context is the gigaom object
	 */
	gigaom.resize.prep = function() {
		clearTimeout( gigaom.resize.timer );
		gigaom.resize.timer = setTimeout( gigaom.resize.execute, 100 );
	};//end gigaom.resize.prep

	/**
	 * Returns DOM elements to their original position before resize
	 */
	gigaom.resize.reset = function( states ) {
		gigaom.resize.clear_classes();
		amplify.publish( 'go-resize-reset', states );
		$( document ).trigger( 'go-resize-reset', states );
	};//end gigaom.resize.reset

	/**
	 * Determines if the from state has a special reset function.  If so,
	 * that reset method is executed.
	 *
	 * NOTE: this function is executed in the context of its calling subscription
	 *
	 * @param states Object Contains to and from states as a reset occurs
	 */
	gigaom.resize.reset_handler = function( states ) {
		if ( this.reset[ states.from ] !== undefined ) {
			this.reset[ states.from ]();
		}//end else
	};//end gigaom.resize.reset_handler

	/**
	 * does the work to set the resize state
	 */
	gigaom.resize.set = function( state ) {
		// don't bother attempting to set the resize state if we're
		// already at that state
		if ( ! gigaom.$html_body.hasClass( gigaom.resize.prefix + state ) ) {
			// We're changing states.  Let's get the current state
			var states = {
				from: gigaom.resize.state().replace( gigaom.resize.prefix, '' ),
				to: state
			};

			// clear the state
			gigaom.resize.reset( states );

			// set the new state
			gigaom.$html_body.addClass( gigaom.resize.prefix + states.to );

			amplify.publish( 'go-resize', states );
			$( document ).trigger( 'go-resize', states );

			// publish the change in resize state
			amplify.publish( 'go-resize-' + state, states );
			$( document ).trigger( 'go-resize-' + state, states );
		}//end if
	};//gigaom.resize.set

	/**
	 * get the current state of the page
	 */
	gigaom.resize.state = function() {
		var state = null;

		for( var i in gigaom.resize.states ) {
			state = $.trim( gigaom.resize.prefix + gigaom.resize.states[ i ] );

			if ( gigaom.$html_body.hasClass( state ) ) {
				return $.trim( state );
			}//end if
		}//end for

		return gigaom.resize.prefix + 'phone';
	};//end gigaom.resize.state

	/**
	 * Stores the currently pending resize timer
	 */
	gigaom.resize.timer = null;
})( jQuery );
;
gigaom.resize.dynamic = {};

( function( $ ) {
	'use strict';

	gigaom.resize.dynamic.widgets = {};
	gigaom.resize.dynamic.injection_areas = {};

	/**
	 * position elements for the desktop
	 */
	gigaom.resize.dynamic.full = function() {
		gigaom.resize.dynamic.device( 'full' );
	};//end gigaom.resize.dynamic.full

	/**
	 * initializes the dynamic resize stuff
	 */
	gigaom.resize.dynamic.init = function() {
		var injection_area = {};
		var widget = {};

		for ( var device in go_responsive ) {
			for ( var injection in go_responsive[ device ] ) {
				if ( ! go_responsive[ device ][ injection ].widget ) {
					continue;
				}//end if

				if ( ! gigaom.resize.dynamic.injection_areas[ injection ] ) {
					injection_area          = {};
					injection_area.el_class = injection;
					injection_area.$el      = $( document.getElementById( injection_area.el_class ) );
				} else {
					injection_area = gigaom.resize.dynamic.injection_areas[ injection ];
				}//end else

				widget = {};
				widget.el_class       = go_responsive[ device ][ injection ].widget;
				widget.$el            = $( '.' + widget.el_class );
				if ( ! widget.$el.length )
				{
					widget.$el = $( document.getElementById(  widget.el_class ) );
				}//end if
				widget.bookmark_class = widget.el_class + '_bookmark';

				// if both the injection area and the widget area exist on the page,
				// save those areas off for 
				if ( injection_area.$el.length === 0 && widget.$el.length === 0 ) {
					continue;
				}//end if

				gigaom.resize.dynamic.injection_areas[ injection_area.el_class ] = gigaom.resize.dynamic.injection_areas[ injection_area.el_class ] || injection_area;
				gigaom.resize.dynamic.widgets[ widget.el_class ]       = gigaom.resize.dynamic.widgets[ widget.el_class ] || widget;
			}//end for
		}//end for

		amplify.subscribe( 'go-resize-full', gigaom.resize.dynamic.full );
		amplify.subscribe( 'go-resize-phone', gigaom.resize.dynamic.phone );
		amplify.subscribe( 'go-resize-reset', gigaom.resize.dynamic, gigaom.resize.reset_handler );
		amplify.subscribe( 'go-resize-tablet', gigaom.resize.dynamic.tablet );
	};

	/**
	 * fires off device actions on resize
	 */
	gigaom.resize.dynamic.device = function( device ) {
		var the_class = '';
		var injection_area = null;
		var widget = null;

		// we don't need to do anything with injection widgets on single pages
		if ( $( 'body.single' ).length && $( 'body.property-gigaom' ).length ) {
			return;
		}//end if

		for ( var injection in go_responsive[ device ] ) {
			the_class = go_responsive[ device ][ injection ].widget;

			if ( gigaom.resize.dynamic.injection_areas[ injection ] && gigaom.resize.dynamic.widgets[ the_class ] ) {
				injection_area = gigaom.resize.dynamic.injection_areas[ injection ];
				widget = gigaom.resize.dynamic.widgets[ the_class ];

				var inject_classes = widget.$el.data('remove-on-inject-classes') || '';

				widget.$el.after( '<div class="bookmarked-widget ' + widget.bookmark_class + ' ' + inject_classes + '"></div>' );
				widget.$el.prependTo( injection_area.$el );

				var remove_classes = inject_classes.split( ' ' );
				var add_classes = go_responsive[ device ][ injection ]['class'].split( ' ' );
				
				for ( var remove in remove_classes ) {
					if ( -1 === $.inArray( remove_classes[ remove ], add_classes ) ) {
						widget.$el.removeClass( remove_classes[ remove ] );
					}//end if
				}//end for

				injection_area.$el.data( 'responsive_classes', add_classes.join( ' ' ) );
				injection_area.$el.addClass( add_classes.join( ' ' ) );
			}//end if
		}//end for
	};

	/**
	 * position elements for the phone
	 */
	gigaom.resize.dynamic.phone = function() {
		gigaom.resize.dynamic.device( 'phone' );
	};//end gigaom.resize.dynamic.phone

	/**
	 * reset object for the waterfall
	 */
	gigaom.resize.dynamic.reset = {};

	gigaom.resize.dynamic.reset.device = function( device ) {
		var the_class = '';
		var injection_area = null;
		var widget = null;
		var $bookmark = null;

		for ( var injection in go_responsive[ device ] ) {
			the_class = go_responsive[ device ][ injection ].widget;

			if ( gigaom.resize.dynamic.injection_areas[ injection ] && gigaom.resize.dynamic.widgets[ the_class ] ) {
				injection_area = gigaom.resize.dynamic.injection_areas[ injection ];
				widget = gigaom.resize.dynamic.widgets[ the_class ];

				$bookmark = $( '.' + widget.bookmark_class );

				widget.$el.insertBefore( $bookmark );
				injection_area.$el.html('');

				var inject_classes = widget.$el.data('remove-on-inject-classes') || '';
				var add_classes = inject_classes.split( ' ' );
				
				for ( var add in add_classes ) {
					if ( ! widget.$el.hasClass( add_classes[ add ] ) ) {
						widget.$el.addClass( add_classes[ add ] );
					}//end if
				}//end for

				injection_area.$el.removeClass( injection_area.$el.data( 'responsive_classes' ) );
				injection_area.$el.data( 'responsive_classes', '' );
				$bookmark.remove();
			}//end if
		}//end for
	};

	/**
	 * Reset from a full sized page
	 */
	gigaom.resize.dynamic.reset.full = function() {
		gigaom.resize.dynamic.reset.device( 'full' );
	};//end gigaom.resize.dynamic.reset.full

	/**
	 * Reset from a phone sized page
	 */
	gigaom.resize.dynamic.reset.phone = function() {
		gigaom.resize.dynamic.reset.device( 'phone' );
	};//end gigaom.resize.dynamic.reset.phone

	/**
	 * Reset from a tablet sized page
	 */
	gigaom.resize.dynamic.reset.tablet = function() {
		gigaom.resize.dynamic.reset.device( 'tablet' );
	};//end gigaom.resize.dynamic.reset.tablet

	/**
	 * position elements for the tablet
	 */
	gigaom.resize.dynamic.tablet = function() {
		gigaom.resize.dynamic.device( 'tablet' );
	};//end gigaom.resize.dynamic.tablet
})( jQuery );
;
gigaom.text_scale = {};

( function( $ ) {
	"use strict";

	gigaom.text_scale.size_huge   = 'text-size-huge';
	gigaom.text_scale.size_large  = 'text-size-large';
	gigaom.text_scale.size_normal = 'text-size-normal';

	/**
	 * initializes the text scale element on story pages
	 */
	gigaom.text_scale.init = function() {
		$(document).on( 'click', '.text-scale .larger a', function( e ) {
			e.preventDefault();
			gigaom.text_scale.increase();
		});

		$(document).on( 'click', '.text-scale .smaller a', function( e ) {
			e.preventDefault();
			gigaom.text_scale.decrease();
		});

		gigaom.$html_body.addClass( gigaom.text_scale.size_normal );
	};

	/**
	 * assigns an appropriate class to the body based on the number of times
	 * that the decrease action has been clicked in the text scale element
	 */
	gigaom.text_scale.decrease = function() {
		if ( gigaom.$html_body.hasClass( gigaom.text_scale.size_normal ) ) {
			return;
		}//end if

		if ( gigaom.$html_body.hasClass( gigaom.text_scale.size_large ) ) {
			gigaom.$html_body.addClass( gigaom.text_scale.size_normal ).removeClass( gigaom.text_scale.size_large );
			return;
		}//end if

		gigaom.$html_body.addClass( gigaom.text_scale.size_large ).removeClass( gigaom.text_scale.size_huge );
	};

	/**
	 * assigns an appropriate class to the body based on the number of times
	 * that the increase action has been clicked in the text scale element
	 */
	gigaom.text_scale.increase = function() {
		if ( gigaom.$html_body.hasClass( gigaom.text_scale.size_huge ) ) {
			return;
		}//end if

		if ( gigaom.$html_body.hasClass( gigaom.text_scale.size_large ) ) {
			gigaom.$html_body.addClass( gigaom.text_scale.size_huge ).removeClass( gigaom.text_scale.size_large );
			return;
		}//end if

		gigaom.$html_body.addClass( gigaom.text_scale.size_large ).removeClass( gigaom.text_scale.size_normal );
	};
})( jQuery );
;
gigaom.single = {};

( function( $ ) {
	'use strict';

	/**
	 * initializes the single page stuff
	 */
	gigaom.single.init = function() {
		if ( ! gigaom.$html_body.hasClass('single') ) {
			return;
		}//end if

		gigaom.single.$subhead = $('.sub-head');
		gigaom.single.$thumbnail = $('.thumbnail-container');
		gigaom.single.$thumbnail_inject = $('.inject-thumb');
		gigaom.single.$comments = $( document.getElementById( 'comments' ) );
		gigaom.single.$comment_form_top = $( document.getElementById( 'comment-form-top' ) );
		gigaom.single.$comment_form_bot = $( document.getElementById( 'comment-form-bottom' ) );
		gigaom.single.$comment_list_inner = $( document.getElementById( 'comment-list-inner' ) );
		gigaom.single.pause_comment_waypoints = false;

		$(document).on( 'change', '#go-page-select', gigaom.single.nav_change );

		amplify.subscribe( 'go-resize', function() {
			gigaom.single.adjust_cta_ad();
		});

		$(window).resize( $.throttle( 100, gigaom.single.adjust_cta_ad ) );

		$(window).resize( $.throttle( 100, gigaom.single.add_ellipses_to_some_headings ) );

		if ( 'undefined' !== typeof gigaom_resize_post_head ) {
			// make sure we attempt to resize the featured image any time we resize
			// NOTE: that function comes from js/lib/early.js
			$(window).resize( $.throttle( 100, gigaom_resize_post_head ) );

			amplify.subscribe( 'go-resize', function() {
				gigaom_resize_post_head();
			});
		}//end if

		$( document ).on( 'click touchstart', '.social .more a', function( e ) {
			e.preventDefault();

			$( this ).closest( '.social' ).addClass( 'show-more' );
		});

		$( document ).on( 'scroll', function() {
			$( '.social.show-more' ).removeClass( 'show-more' );
		});

		$( document ).on( 'go-contentwidgets-complete', gigaom.single.relocate_ctas );
		$( document ).on( 'go-local-bsocial-auth-processed', gigaom.single.maybe_remove_newsletter_cta );

		gigaom.single.add_ellipses_to_some_headings();
		gigaom.single.wrap_breakout_images();
		gigaom.single.colorbox_init();
		gigaom.single.comment_waypoint();
		gigaom.single.legacy_twitter();
		gigaom.single.init_sticky_social();
		gigaom.single.init_responsive_tables();

		$( document ).on( 'go-socialcomments-initial-load', function() {
			gigaom.single.comment_ads();
		} );
	};//end gigaom.single.init

	/**
	 * Wrap aligncenter size-full images with an element so they can break beyond the bounds of the page
	 */
	gigaom.single.wrap_breakout_images = function() {
		// first, let's wrap size-full images with captions
		$( '.wp-caption.aligncenter' ).each( function() {
			var $el = $( this );
			var $img = $el.find( 'img' );

			if ( ! $img.hasClass( 'size-full' ) ) {
				return;
			}//end if

			$el.wrap( '<div class="breakout-wrapper"/>' );
		});

		// for size-full images that don't have captions, we need to wrap them too
		$( 'img.aligncenter.size-full' ).each( function() {
			var $el = $( this );
			if ( $el.closest( '.wp-caption' ).length ) {
				return;
			}//end if

			if ( $el.closest( 'picture' ).length ) {
				$el.closest( 'picture' ).wrap( '<span class="breakout-wrapper"/>' );
				return;
			}//end if

			$el.wrap( '<span class="breakout-wrapper"/>' );
		});
	};

	gigaom.single.add_ellipses_to_some_headings = function() {
		var number_of_lines_to_show = 3;
		var $links;
		var line_height;

		var selectors = [
			'.widget-go-featured li > a',
			'.go-related-container .related-post > a'
		];

		for ( var i in selectors ) {
			$links = $( selectors[ i ] );

			if ( ! $links.length ) {
				continue;
			}//end if

			// determine the first link's line height
			line_height = $.trim( $links.eq( 0 ).css( 'line-height' ).replace( 'px', '' ) );
			line_height = Math.ceil( parseFloat( line_height ) );

			$links.dotdotdot({
				height: line_height * number_of_lines_to_show,
				tolerance: 5
			});
		}//end for
	};

	/**
	 * adds comment waypoints to move the comment box around
	 * based on where the user is on the page
	 */
	gigaom.single.comment_waypoint = function() {
		var viewport_height = $.waypoints('viewportHeight');
		var comments_height = gigaom.single.$comment_list_inner.find( '.comments-list').height();

		gigaom.single.$comment_form_top.waypoint( function( direction ) {
			if ( gigaom.single.pause_comment_waypoints ) {
				return;
			}//end if

			if ( 'up' !== direction ) {
				return;
			}//end if

			if ( 0 !== $(this).children( '#commentform' ).length ) {
				return;
			}//end if

			if ( viewport_height > comments_height ) {
				return;
			}//end if

			$( document.getElementById( 'commentform-bookmark' ) ).remove();
			gigaom.single.$comment_form_bot.children().prependTo( $(this) );
		}, {
			offset: function() {
				return -1 *  gigaom.single.$comment_form_top.height();
			}
		});

		gigaom.single.$comment_form_bot.waypoint( function( direction ) {
			if ( gigaom.single.pause_comment_waypoints ) {
				return;
			}//end if

			if ( 'down' !== direction ) {
				return;
			}//end if

			if ( $(this).html() && $(this).html().trim() ) {
				return;
			}//end if

			if ( viewport_height > comments_height ) {
				return;
			}//end if

			var $bookmark = $( document.createElement( 'div' ) );
			$bookmark.attr( 'id', 'commentform-bookmark' );
			$bookmark.css({
				height: gigaom.single.$comment_form_top.children( '#commentform' ).outerHeight()
			});
			gigaom.single.$comment_form_top.children( '#commentform' ).appendTo( $(this) );
			gigaom.single.$comment_form_top.append( $bookmark );
		}, {
			offset: function() {
				return $.waypoints('viewportHeight') - $(this).outerHeight();
			}
		});
	};

	/**
	 * initialize colorbox behaviors
	 */
	gigaom.single.colorbox_init = function() {
		var $images = gigaom.$body.find('article.post .body').find('img');
		var $image_anchors = $images.closest('a');

		$image_anchors.attr( 'rel', 'gallery');
		$image_anchors.each( function() {
			var href = $(this).attr('href') || '';

			if ( ! href.match( /\.(jpg|jpeg|gif|png)(\?.*)?$/i ) ) {
				return;
			}//end if

			var $caption_container = $(this).closest('.wp-caption');
			var caption = '';

			if ( $caption_container.length > 0 ) {
				caption = $caption_container.find('.wp-caption-text').html();
			}//end if

			$(document).on('mouseover', '.cboxPhoto', function() {
				$(this).closest('#cboxContent').addClass('cbox-hover');
			});

			$(document).on('mouseout cbox_closed cbox_complete', '.cboxPhoto', function() {
				$(this).closest('#cboxContent').removeClass('cbox-hover');
			});

			$(this).colorbox({
				title: caption,
				maxHeight: '90%',
				maxWidth: '90%',
				onComplete: function() {
					$( document.getElementById( 'colorbox' ) ).width( $( document.getElementById( 'cboxWrapper' ) ).width() ).height( $( document.getElementById( 'cboxWrapper' ) ).height() );
				}
			});
		});
	};

	/**
	 * initialize the legacy twitter share link for posts that have an old twitter share link
	 * in place.
	 */
	gigaom.single.legacy_twitter = function() {
		$('.twitter-share-button').each( function() {
			if ( $(this).find('.icon-twitter').length > 0 ) {
				return;
			}//end if

			var url = 'https://twitter.com/intent/tweet';
			url += '?text=' + escape( $(this).data('text') );
			url += '&url=' + $(this).data('url');

			$(this).attr('href', url).addClass('tweet-this').text('tweet this').prepend('<i class="goicon icon-twitter"></i> ');
		});
	};

	/**
	 * navigate to a new page on change of the nav dropdown
	 */
	gigaom.single.nav_change = function() {
		window.location = $(this).val();
	};

	/**
	 * shifts the CTA ad down so it aligns with the newsletter box
	 */
	gigaom.single.adjust_cta_ad = function() {
		var $newsletter = $('#go-newsletter-email:visible,.cta-section .subscribed:visible');

		if ( ! $newsletter.length ) {
			return;
		}//end if

		var $ad = $('.go-bsocial-cta').next();

		var newsletter_bottom_edge = $newsletter.offset().top + $newsletter.height();
		var ad_bottom_edge = $ad.offset().top + $ad.height();

		var shift = newsletter_bottom_edge - ad_bottom_edge - 3;

		if ( shift < 0 ) {
			shift = 0;
		}//end if

		$ad.css( 'margin-top', shift );
	};

	gigaom.single.comment_ads = function() {
		var $comments = gigaom.single.$comment_list_inner.find( '.comment .div-comment' );

		if ( $comments.length > 4 ) {
			var $comment_ad1 = $( document.getElementById( 'ad-comment1' ) );
			$comments.eq( 4 ).after( $comment_ad1.closest( '.widget-go-ads' ) );
			$comment_ad1.closest( '#ad-comment1-container' ).show();
		}

		if ( $comments.length > 29 ) {
			var $comment_ad2 = $( document.getElementById( 'ad-comment2' ) );
			$comments.eq( 19 ).after( $comment_ad2.closest( '.widget-go-ads' ) );
			$comment_ad2.closest( '#ad-comment1-container' ).show();
		}

		go_ads.find_and_define( $( document.getElementById( 'comment-list-inner' ) ), true );
	};

	/**
	 * Remove the newsletter widget if the user is subscribed
	 */
	gigaom.single.maybe_remove_newsletter_cta = function() {
		// if go_remote_identity isn't anywhere to be found, bail
		if ( 'undefined' === typeof go_remote_identity ) {
			return;
		}//end if

		// if identity hasn't been checked, bail.
		if ( false === go_remote_identity.identity_checked ) {
			return;
		}//end if

		var $newsletter = $( '.go-bsocial-cta' );

		if ( $newsletter.find( '.subscribed' ).is( ':visible' ) )
		{
			$newsletter.closest( '.go-thisorthat-widget' ).remove();
			$newsletter.remove();
		}//end if
	};

	/**
	 * Moves house CTAs into the right location after inserting into the content
	 */
	gigaom.single.relocate_ctas = function() {
		var $sidebar = $( document.getElementById( 'hidden-sidebar' ) );
		var $post_tags = $( '.post-page-tags:first' );
		var $thisorthat = $sidebar.find( '.go-thisorthat-widget' );

		// ***********************
		// First: support the configuration where the newsletter widget and autoE are configured in the thisorthat widget
		// ***********************
		if ( $thisorthat.length ) {
			// let's remove the div wrapper from the thisorthat widget
			$thisorthat = $thisorthat.children( 'div' );
			$thisorthat.unwrap();
			$thisorthat.find( '.injected-size-half' ).removeClass( 'injected-size-half' );

			// if thisorthat IS the bsocial cta, place it after the post_tags. If it isn't, place it after the bsocial cta
			if ( $thisorthat.is( '.go-bsocial-cta' ) ) {
				$post_tags.after( $thisorthat );
			} else {
				$post_tags.closest( '.main' ).find( '.post-page-tags' ).after( $thisorthat );
			}//end else
		}//end if

		// ***********************
		// Next: support the configuration where the newsletter widget and autoE are individual widgets within the injection sidebar
		// ***********************
		var $autoe = $sidebar.find( '.go-event-navigation-relatedevent' );
		var $newsletter = $sidebar.find( '.go-bsocial-cta' );

		var classes_to_remove = 'layout-box-insert layout-box-insert-right layout-box-insert-left';

		if ( $autoe.length ) {
			$autoe.removeClass( classes_to_remove );
			$post_tags.after( $autoe );
		}//end if

		if ( $newsletter.length ) {
			$newsletter.removeClass( classes_to_remove );
			$post_tags.after( $newsletter );
		}//end if
	};

	/**
	 * initializes responsive tables
	 */
	gigaom.single.init_responsive_tables = function() {
		if (
			! gigaom.$html_body.hasClass( 'property-gigaom' )
			&& ! gigaom.$html_body.hasClass( 'property-research' )
		) {
			return;
		}//end if

		var $tables = $('.single .post, .single .page').find('table').not('.sidebar');

		$tables.addClass('responsive');
		$tables.wrap( '<div class="table-wrapper"/>' );
	};

	/**
	 * sets up the sticky social icons behaviors
	 */
	gigaom.single.init_sticky_social = function() {
		gigaom.single.$sticky_social = $( '.single-post .post-social:not(.above-featured)' );

		if ( ! gigaom.single.$sticky_social.length ) {
			return;
		}//end if

		gigaom.single.$sticky_social.waypoint( {
			offset: 0,
			handler: function( direction ) {
				if ( 'down' === direction ) {
					$( this ).addClass( 'sticky' );
				} else if ( 'up' === direction ) {
					$( this ).removeClass( 'sticky' );
				}
			}
		});

		$( document ).on( 'scroll', this.track_sticky_social );
	};

	/**
	 * handles the scroll event for the sticky social icons
	 */
	gigaom.single.track_sticky_social = function() {
		var scroll_top = $( window ).scrollTop();
		var $article = gigaom.single.$sticky_social.closest( 'article' );

		var foot_offset = gigaom.$foot.offset().top;
		var article_offset = $article.offset().top;
		var social_offset = gigaom.single.$sticky_social.offset().top;

		var article_height = $article.height();
		var social_height = gigaom.single.$sticky_social.find( 'ul' ).height();

		if (
			( social_offset + social_height >= ( foot_offset - 16 ) )
			&& ! gigaom.single.$sticky_social.hasClass( 'sticky-stop' )
		) {
			gigaom.single.$sticky_social.addClass( 'sticky-stop' );

			gigaom.single.$sticky_social.css({
				position: 'absolute',
				bottom: ( -1 * ( foot_offset - article_offset - article_height - social_height ) ) + 'px',
				top: 'auto'
			});
		}//end if
		else if ( scroll_top < social_offset )
		{
			gigaom.single.$sticky_social.removeClass( 'sticky-stop' );

			gigaom.single.$sticky_social.css({
				position: '',
				bottom: '',
				top: ''
			});
		} else if ( scroll_top > social_offset && ! gigaom.single.$sticky_social.is( 'sticky' ) ) {
			gigaom.single.$sticky_social.addClass( 'sticky' );
		}//end else
	};
} )( jQuery );
;
gigaom.gallery = {};

( function( $ ) {
	"use strict";

	gigaom.gallery.activated = false;

	gigaom.gallery.init = function() {
		gigaom.gallery.$gallery = $('.gallery');
		gigaom.gallery.$nav = gigaom.gallery.$gallery.find('.gallery-nav');
		gigaom.gallery.$image_list = gigaom.gallery.$gallery.find('.image-list');

		amplify.subscribe( 'go-resize', gigaom.gallery.resize );

		gigaom.gallery.resize();
	};

	/**
	 * activates the gigaom gallery animation
	 */
	gigaom.gallery.activate = function() {
		var thumb_width = false;

		gigaom.gallery.$image_list.each( function() {
			var gallery_id = $( this ).closest( '.gallery' ).data( 'gallery-id' );

			$( this ).cycle({
				timeout: 5000,
				speed: 500,
				easing: 'easeOutExpo',
				before: function( currSlideElement, nextSlideElement, options, forwardFlag ) {
					var slide_number = $( nextSlideElement ).prevAll().length;
					var $current_gallery = $( currSlideElement ).closest( '.gallery' );
					var $current_list = $current_gallery.find( '.image-list' );
					var $current_nav = $current_gallery.find('.gallery-nav');

					$current_list.find('li').eq( slide_number ).find('.image-info .count').text( ( slide_number + 1 ) + ' / ' + options.slideCount );
					$current_list.find('li').eq( slide_number ).find('.image-info .title').text( $.trim( go_gallery_data[ gallery_id ][ slide_number ].title ) );

					// Establish our thumbnail total width
					if ( ! thumb_width ) {
						var $thumb = $current_nav.find('a').eq(0);

						if ( $thumb.length > 0 ) {
							thumb_width = parseInt( $thumb.outerWidth(), 10 )+ parseInt( $thumb.css('margin-right'), 10 ) + parseInt( $thumb.css('margin-left'), 10 );
						}//end if
					}//end if

					// Move the bottom thumbnails appropriately
					var offset = $current_nav.find('a').eq( slide_number ).position();

					if ( ! offset ) {
						return;
					}//end if

					var total_items     = $current_list.children().length;
					var total_width     = total_items * thumb_width;
					var parent_width    = $current_gallery.find( '.gallery-nav-inner' ).width();
					var items_per_width = parent_width / thumb_width;
					var left            = offset.left - ( items_per_width / 2 * thumb_width );
					var max_left        = - ( parent_width - total_width );

					// Set a maximum so that we stop moving once we hit the last thumb
					if ( left > max_left ) {
						left = max_left;
					}//end if

					if ( left > 0 && total_width > parent_width ) {
						$current_nav.animate( {left: -left}, 150, 'easeInOutExpo');
					}//end if
					else {
						if ( left < 0 ) {
							$current_nav.animate( {left: 0}, 150, 'easeInOutExpo');
						}//end if
					}//end else
				},
				pager: '#gallery-' + gallery_id + ' .gallery-nav',
				pagerAnchorBuilder: function( idx, slide ) {
					var current_gallery_id = $( slide ).closest( '.gallery' ).data( 'gallery-id' );

					return '<a href="#' + idx + '" class="image"><img src="' + go_gallery_data[ current_gallery_id ][ idx ].thumbnail + '" width="48" height="48"/></a>';
				},
				next: '#gallery-' + gallery_id + ' .gallery-next',
				prev: '#gallery-' + gallery_id + ' .gallery-prev'
			});
		});

		amplify.publish('go-gallery-init');
	};

	gigaom.gallery.resize = function( states ) {
		if ( gigaom.$html_body.is('.go-device-phone') ) {
			gigaom.gallery.activated = false;
			gigaom.gallery.$image_list.cycle('destroy');
			gigaom.gallery.$image_list.find('li').attr( 'style', '' );
			gigaom.gallery.$image_list.attr( 'style', '' );
		} else if ( ! gigaom.gallery.activated ) {
			gigaom.gallery.activated = true;
			gigaom.gallery.activate();

			var width = gigaom.$body.width();

			gigaom.gallery.$image_list.width( width );
			gigaom.gallery.$image_list.find('li').width( width );
		}//end else
	};
} )( jQuery );
;
gigaom.waterfall = {};

( function( $ ) {
	'use strict';

	/**
	 * Initialization of waterfall
	 */
	gigaom.waterfall.init = function() {
		if ( ! gigaom.$html_body.hasClass( 'waterfall' ) ) {
			return;
		}

		gigaom.waterfall.$daybreak = $('.daybreak');
		gigaom.waterfall.$wijax = $('.widget_postloop.go-wijax-aware-default-excerpt');

		$.waypoints.settings.scrollThrottle = 500;

		$( window ).on( 'resize', $.throttle( 100, gigaom.waterfall.relocate_ads ) );
		gigaom.waterfall.relocate_ads();
		amplify.subscribe( 'go-resize', function() {
			gigaom.waterfall.relocate_ads();
		});

		if ( 'undefined' !== typeof gigaom_resize_featured ) {
			$( window ).on( 'resize', $.throttle( 100, gigaom_resize_featured ) );
			amplify.subscribe( 'go-resize', function() {
				gigaom_resize_featured();
			});

			gigaom_resize_featured();
		}//end if

		var timestamp_now = moment().utc().format( 'X' );

		// update timestamps to human time diff format if they are less than an hour old
		$( '.waterfall-posts .post' ).each( function() {
			var $el = $( this );
			var $date = $el.find( '.time.published' );

			if ( ! $date.length ) {
				return;
			}//end if

			var timestamp = moment( $date.attr( 'datetime' ) ).utc();
			var diff = timestamp_now - timestamp.format( 'X' );

			if ( diff < 3600 ) {
				$date.html( timestamp.fromNow() );
			}//end else
		});
	};

	gigaom.waterfall.relocate_ads = function() {
		if ( $( '.widget-go-featured .featured-container' ).length > 1 ) {
			return;
		}//end if

		var window_width = $( window ).width();

		// we need to find them fresh every time
		var $ads = $( '.go-ad' );

		var $first_ad = $ads.eq( 0 );
		var $third_ad = $ads.eq( 2 );
		var $first_ad_wrapper = $first_ad.closest( '.widget-go-ads' );
		var $third_ad_wrapper = $third_ad.closest( '.widget-go-ads' );

		if ( window_width < 960 ) {
			if ( $first_ad.is( '.ad-300x600' ) ) {
				return;
			}//end if
		} else {
			if ( $first_ad.is( '.ad-300x250' ) ) {
				return;
			}//end if
		}//end else

		$first_ad_wrapper.append( $third_ad );
		$third_ad_wrapper.append( $first_ad );

		// if googletag doesn't exist, go-ads hasn't loaded and we don't need to worry about refreshing ads because
		// they haven't been loaded in the first place
		if ( 'undefined' !== typeof googletag && 'undefined' !== typeof googletag.pubads ) {
			googletag.pubads().refresh();
		}//end if
	};

	/**
	 * soft reset the waypoints for full width
	 */
	gigaom.waterfall.full = function() {
		gigaom.waterfall.remove_waypoints();
		gigaom.waterfall.add_waypoints();
	};

	/**
	 * phone mode doesn't lazy load in stories
	 */
	gigaom.waterfall.phone = function() {
		gigaom.waterfall.remove_waypoints();
	};

	/**
	 * soft reset the waypoints for tablet
	 */
	gigaom.waterfall.tablet = function() {
		gigaom.waterfall.remove_waypoints();
		gigaom.waterfall.add_waypoints();
	};

	/**
	 * soft remove waypoints (by soft, we mean removes the waypoint triggers
	 * but keeps a record of which waypoints have been reached)
	 */
	gigaom.waterfall.remove_waypoints = function() {
		gigaom.waterfall.$wijax.waypoint('remove');
	};
})( jQuery );
;
go_theme.account_nav = (function( $ ) {
	'use strict';

	var my = {
		nav_loaded: false
	};

	my.init = function() {
		amplify.subscribe( 'go-auth-success', my.reload_nav );
		amplify.subscribe( 'go-auth-fail', my.load_nav );
		amplify.subscribe( 'go-auth-not-authenticated', my.load_nav );
		amplify.subscribe( 'go-auth-reauth', my.reload_nav );

		if ( 'undefined' !== typeof go_remote_identity && go_remote_identity.identity_checked ) {
			my.load_nav();
		}//end if
	};

	my.reload_nav = function() {
		my.nav_loaded = false;
		$('.nav-account').remove();
		$('.sidepanel-nav-account').remove();
		my.load_nav();
	},

	my.load_nav = function() {
		if ( my.nav_loaded ) {
			return;
		}

		var $injection_area = $( document.getElementById( 'go-theme-nav' ) ).find( '.primary .icons.right');
		var logged_in = null !== go_remote_identity.user;
		var $account_item = $( document.createElement( 'li' ) );
		$account_item.addClass( 'nav-account' );

		if ( logged_in ) {
			$account_item.addClass( 'sub-nav' );
			$account_item.prepend( '<a href="#">My Account</a>' );
			$account_item.append( '<div class="container"><ul/></div>' );

			var $ul = $account_item.find( 'ul' );

			my.add_nav_links( $ul, go_remote_identity.user.nav );
		} else {
			$account_item.addClass( 'sign-in' );
			var $login_link = $( document.createElement( 'a' ) ).attr( {
				class: 'sign-in-link',
				href: go_remote_identity.login.nav.url
			} );
			$login_link.html( go_remote_identity.login.nav.title );
			$account_item.prepend( $login_link );
		}//end if

		// add to nav
		$injection_area.prepend( $account_item );

		var $sidepanel_item = $account_item.clone();

		if ( logged_in ) {
			$sidepanel_item.addClass( 'sidepanel-nav-account' );
			$sidepanel_item.removeClass( 'sub-nav' );
			var $main_anchor = $sidepanel_item.find( 'a:first' );
			var title = $main_anchor.html();
			$main_anchor.replaceWith( '<h5>' + title + '</h5>' );
			$sidepanel_item.find( 'ul:first' ).unwrap().addClass( 'content' );
		}

		// add to sidepanel
		$('.sidepanel.primary .links > .topics').after( $sidepanel_item );

		var $medium_sidepanel_item = $sidepanel_item.clone();
		$medium_sidepanel_item.find( '.content' ).show();

		// add to sidepanel
		$('.sidepanel.account .links').append( $medium_sidepanel_item );

		my.nav_loaded = true;

		if ( ! logged_in ) {
			return;
		}
		// register a new sidepanel
		gigaom.nav.panels.account = {
			name: 'account',
			direction: 'right',
			control: 'body:not(.go-device-full) .nav-account > a'
		};

		gigaom.nav.init_sidepanel( 'account' );
	};

	my.add_nav_links = function( $container, links ) {
		for ( var i in links ) {
			my.add_nav_link( $container, i, links[ i ] );

			if ( 'undefined' !== typeof links[ i ].nav ) {
				var $sub_container = $container.find( '.' + i );

				if ( ! $sub_container.length ) {
					continue;
				}//end if

				var ul = document.createElement( 'ul' );
				$sub_container[0].appendChild( ul );
				my.add_nav_links( $( ul ), links[ i ].nav );
			}//end if
		}//end for
	};

	my.add_nav_link = function( $container, item_id,  link ) {
		var list_link = document.createElement( 'a' );
		list_link.href = link.url;
		list_link.appendChild( document.createTextNode( link.title ) );

		var list_item = document.createElement( 'li' );
		list_item.className = item_id;
		list_item.appendChild( list_link );

		$container[0].appendChild( list_item );
	};

	return my;
}( jQuery ));
;
/*!
 * skrollr core
 *
 * Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr
 *
 * Free to use under terms of MIT license
 */
(function(window, document, undefined) {
	'use strict';

	/*
	 * Global api.
	 */
	var skrollr = {
		get: function() {
			return _instance;
		},
		//Main entry point.
		init: function(options) {
			return _instance || new Skrollr(options);
		},
		VERSION: '0.6.26'
	};

	//Minify optimization.
	var hasProp = Object.prototype.hasOwnProperty;
	var Math = window.Math;
	var getStyle = window.getComputedStyle;

	//They will be filled when skrollr gets initialized.
	var documentElement;
	var body;

	var EVENT_TOUCHSTART = 'touchstart';
	var EVENT_TOUCHMOVE = 'touchmove';
	var EVENT_TOUCHCANCEL = 'touchcancel';
	var EVENT_TOUCHEND = 'touchend';

	var SKROLLABLE_CLASS = 'skrollable';
	var SKROLLABLE_BEFORE_CLASS = SKROLLABLE_CLASS + '-before';
	var SKROLLABLE_BETWEEN_CLASS = SKROLLABLE_CLASS + '-between';
	var SKROLLABLE_AFTER_CLASS = SKROLLABLE_CLASS + '-after';

	var SKROLLR_CLASS = 'skrollr';
	var NO_SKROLLR_CLASS = 'no-' + SKROLLR_CLASS;
	var SKROLLR_DESKTOP_CLASS = SKROLLR_CLASS + '-desktop';
	var SKROLLR_MOBILE_CLASS = SKROLLR_CLASS + '-mobile';

	var DEFAULT_EASING = 'linear';
	var DEFAULT_DURATION = 1000;//ms
	var DEFAULT_MOBILE_DECELERATION = 0.004;//pixel/ms²

	var DEFAULT_SMOOTH_SCROLLING_DURATION = 200;//ms

	var ANCHOR_START = 'start';
	var ANCHOR_END = 'end';
	var ANCHOR_CENTER = 'center';
	var ANCHOR_BOTTOM = 'bottom';

	//The property which will be added to the DOM element to hold the ID of the skrollable.
	var SKROLLABLE_ID_DOM_PROPERTY = '___skrollable_id';

	var rxTouchIgnoreTags = /^(?:input|textarea|button|select)$/i;

	var rxTrim = /^\s+|\s+$/g;

	//Find all data-attributes. data-[_constant]-[offset]-[anchor]-[anchor].
	var rxKeyframeAttribute = /^data(?:-(_\w+))?(?:-?(-?\d*\.?\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/;

	var rxPropValue = /\s*(@?[\w\-\[\]]+)\s*:\s*(.+?)\s*(?:;|$)/gi;

	//Easing function names follow the property in square brackets.
	var rxPropEasing = /^(@?[a-z\-]+)\[(\w+)\]$/;

	var rxCamelCase = /-([a-z0-9_])/g;
	var rxCamelCaseFn = function(str, letter) {
		return letter.toUpperCase();
	};

	//Numeric values with optional sign.
	var rxNumericValue = /[\-+]?[\d]*\.?[\d]+/g;

	//Used to replace occurences of {?} with a number.
	var rxInterpolateString = /\{\?\}/g;

	//Finds rgb(a) colors, which don't use the percentage notation.
	var rxRGBAIntegerColor = /rgba?\(\s*-?\d+\s*,\s*-?\d+\s*,\s*-?\d+/g;

	//Finds all gradients.
	var rxGradient = /[a-z\-]+-gradient/g;

	//Vendor prefix. Will be set once skrollr gets initialized.
	var theCSSPrefix = '';
	var theDashedCSSPrefix = '';

	//Will be called once (when skrollr gets initialized).
	var detectCSSPrefix = function() {
		//Only relevant prefixes. May be extended.
		//Could be dangerous if there will ever be a CSS property which actually starts with "ms". Don't hope so.
		var rxPrefixes = /^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;

		//Detect prefix for current browser by finding the first property using a prefix.
		if(!getStyle) {
			return;
		}

		var style = getStyle(body, null);

		for(var k in style) {
			//We check the key and if the key is a number, we check the value as well, because safari's getComputedStyle returns some weird array-like thingy.
			theCSSPrefix = (k.match(rxPrefixes) || (+k == k && style[k].match(rxPrefixes)));

			if(theCSSPrefix) {
				break;
			}
		}

		//Did we even detect a prefix?
		if(!theCSSPrefix) {
			theCSSPrefix = theDashedCSSPrefix = '';

			return;
		}

		theCSSPrefix = theCSSPrefix[0];

		//We could have detected either a dashed prefix or this camelCaseish-inconsistent stuff.
		if(theCSSPrefix.slice(0,1) === '-') {
			theDashedCSSPrefix = theCSSPrefix;

			//There's no logic behind these. Need a look up.
			theCSSPrefix = ({
				'-webkit-': 'webkit',
				'-moz-': 'Moz',
				'-ms-': 'ms',
				'-o-': 'O'
			})[theCSSPrefix];
		} else {
			theDashedCSSPrefix = '-' + theCSSPrefix.toLowerCase() + '-';
		}
	};

	var polyfillRAF = function() {
		var requestAnimFrame = window.requestAnimationFrame || window[theCSSPrefix.toLowerCase() + 'RequestAnimationFrame'];

		var lastTime = _now();

		if(_isMobile || !requestAnimFrame) {
			requestAnimFrame = function(callback) {
				//How long did it take to render?
				var deltaTime = _now() - lastTime;
				var delay = Math.max(0, 1000 / 60 - deltaTime);

				return window.setTimeout(function() {
					lastTime = _now();
					callback();
				}, delay);
			};
		}

		return requestAnimFrame;
	};

	var polyfillCAF = function() {
		var cancelAnimFrame = window.cancelAnimationFrame || window[theCSSPrefix.toLowerCase() + 'CancelAnimationFrame'];

		if(_isMobile || !cancelAnimFrame) {
			cancelAnimFrame = function(timeout) {
				return window.clearTimeout(timeout);
			};
		}

		return cancelAnimFrame;
	};

	//Built-in easing functions.
	var easings = {
		begin: function() {
			return 0;
		},
		end: function() {
			return 1;
		},
		linear: function(p) {
			return p;
		},
		quadratic: function(p) {
			return p * p;
		},
		cubic: function(p) {
			return p * p * p;
		},
		swing: function(p) {
			return (-Math.cos(p * Math.PI) / 2) + 0.5;
		},
		sqrt: function(p) {
			return Math.sqrt(p);
		},
		outCubic: function(p) {
			return (Math.pow((p - 1), 3) + 1);
		},
		//see https://www.desmos.com/calculator/tbr20s8vd2 for how I did this
		bounce: function(p) {
			var a;

			if(p <= 0.5083) {
				a = 3;
			} else if(p <= 0.8489) {
				a = 9;
			} else if(p <= 0.96208) {
				a = 27;
			} else if(p <= 0.99981) {
				a = 91;
			} else {
				return 1;
			}

			return 1 - Math.abs(3 * Math.cos(p * a * 1.028) / a);
		}
	};

	/**
	 * Constructor.
	 */
	function Skrollr(options) {
		documentElement = document.documentElement;
		body = document.body;

		detectCSSPrefix();

		_instance = this;

		options = options || {};

		_constants = options.constants || {};

		//We allow defining custom easings or overwrite existing.
		if(options.easing) {
			for(var e in options.easing) {
				easings[e] = options.easing[e];
			}
		}

		_edgeStrategy = options.edgeStrategy || 'set';

		_listeners = {
			//Function to be called right before rendering.
			beforerender: options.beforerender,

			//Function to be called right after finishing rendering.
			render: options.render,

			//Function to be called whenever an element with the `data-emit-events` attribute passes a keyframe.
			keyframe: options.keyframe
		};

		//forceHeight is true by default
		_forceHeight = options.forceHeight !== false;

		if(_forceHeight) {
			_scale = options.scale || 1;
		}

		_mobileDeceleration = options.mobileDeceleration || DEFAULT_MOBILE_DECELERATION;

		_smoothScrollingEnabled = options.smoothScrolling !== false;
		_smoothScrollingDuration = options.smoothScrollingDuration || DEFAULT_SMOOTH_SCROLLING_DURATION;

		//Dummy object. Will be overwritten in the _render method when smooth scrolling is calculated.
		_smoothScrolling = {
			targetTop: _instance.getScrollTop()
		};

		//A custom check function may be passed.
		_isMobile = ((options.mobileCheck || function() {
			return (/Android|iPhone|iPad|iPod|BlackBerry/i).test(navigator.userAgent || navigator.vendor || window.opera);
		})());

		if(_isMobile) {
			_skrollrBody = document.getElementById('skrollr-body');

			//Detect 3d transform if there's a skrollr-body (only needed for #skrollr-body).
			if(_skrollrBody) {
				_detect3DTransforms();
			}

			_initMobile();
			_updateClass(documentElement, [SKROLLR_CLASS, SKROLLR_MOBILE_CLASS], [NO_SKROLLR_CLASS]);
		} else {
			_updateClass(documentElement, [SKROLLR_CLASS, SKROLLR_DESKTOP_CLASS], [NO_SKROLLR_CLASS]);
		}

		//Triggers parsing of elements and a first reflow.
		_instance.refresh();

		_addEvent(window, 'resize orientationchange', function() {
			var width = documentElement.clientWidth;
			var height = documentElement.clientHeight;

			//Only reflow if the size actually changed (#271).
			if(height !== _lastViewportHeight || width !== _lastViewportWidth) {
				_lastViewportHeight = height;
				_lastViewportWidth = width;

				_requestReflow = true;
			}
		});

		var requestAnimFrame = polyfillRAF();

		//Let's go.
		(function animloop(){
			_render();
			_animFrame = requestAnimFrame(animloop);
		}());

		return _instance;
	}

	/**
	 * (Re)parses some or all elements.
	 */
	Skrollr.prototype.refresh = function(elements) {
		var elementIndex;
		var elementsLength;
		var ignoreID = false;

		//Completely reparse anything without argument.
		if(elements === undefined) {
			//Ignore that some elements may already have a skrollable ID.
			ignoreID = true;

			_skrollables = [];
			_skrollableIdCounter = 0;

			elements = document.getElementsByTagName('*');
		} else if(elements.length === undefined) {
			//We also accept a single element as parameter.
			elements = [elements];
		}

		elementIndex = 0;
		elementsLength = elements.length;

		for(; elementIndex < elementsLength; elementIndex++) {
			var el = elements[elementIndex];
			var anchorTarget = el;
			var keyFrames = [];

			//If this particular element should be smooth scrolled.
			var smoothScrollThis = _smoothScrollingEnabled;

			//The edge strategy for this particular element.
			var edgeStrategy = _edgeStrategy;

			//If this particular element should emit keyframe events.
			var emitEvents = false;

			//If we're reseting the counter, remove any old element ids that may be hanging around.
			if(ignoreID && SKROLLABLE_ID_DOM_PROPERTY in el) {
				delete el[SKROLLABLE_ID_DOM_PROPERTY];
			}

			if(!el.attributes) {
				continue;
			}

			//Iterate over all attributes and search for key frame attributes.
			var attributeIndex = 0;
			var attributesLength = el.attributes.length;

			for (; attributeIndex < attributesLength; attributeIndex++) {
				var attr = el.attributes[attributeIndex];

				if(attr.name === 'data-anchor-target') {
					anchorTarget = document.querySelector(attr.value);

					if(anchorTarget === null) {
						throw 'Unable to find anchor target "' + attr.value + '"';
					}

					continue;
				}

				//Global smooth scrolling can be overridden by the element attribute.
				if(attr.name === 'data-smooth-scrolling') {
					smoothScrollThis = attr.value !== 'off';

					continue;
				}

				//Global edge strategy can be overridden by the element attribute.
				if(attr.name === 'data-edge-strategy') {
					edgeStrategy = attr.value;

					continue;
				}

				//Is this element tagged with the `data-emit-events` attribute?
				if(attr.name === 'data-emit-events') {
					emitEvents = true;

					continue;
				}

				var match = attr.name.match(rxKeyframeAttribute);

				if(match === null) {
					continue;
				}

				var kf = {
					props: attr.value,
					//Point back to the element as well.
					element: el,
					//The name of the event which this keyframe will fire, if emitEvents is
					eventType: attr.name.replace(rxCamelCase, rxCamelCaseFn)
				};

				keyFrames.push(kf);

				var constant = match[1];

				if(constant) {
					//Strip the underscore prefix.
					kf.constant = constant.substr(1);
				}

				//Get the key frame offset.
				var offset = match[2];

				//Is it a percentage offset?
				if(/p$/.test(offset)) {
					kf.isPercentage = true;
					kf.offset = (offset.slice(0, -1) | 0) / 100;
				} else {
					kf.offset = (offset | 0);
				}

				var anchor1 = match[3];

				//If second anchor is not set, the first will be taken for both.
				var anchor2 = match[4] || anchor1;

				//"absolute" (or "classic") mode, where numbers mean absolute scroll offset.
				if(!anchor1 || anchor1 === ANCHOR_START || anchor1 === ANCHOR_END) {
					kf.mode = 'absolute';

					//data-end needs to be calculated after all key frames are known.
					if(anchor1 === ANCHOR_END) {
						kf.isEnd = true;
					} else if(!kf.isPercentage) {
						//For data-start we can already set the key frame w/o calculations.
						//#59: "scale" options should only affect absolute mode.
						kf.offset = kf.offset * _scale;
					}
				}
				//"relative" mode, where numbers are relative to anchors.
				else {
					kf.mode = 'relative';
					kf.anchors = [anchor1, anchor2];
				}
			}

			//Does this element have key frames?
			if(!keyFrames.length) {
				continue;
			}

			//Will hold the original style and class attributes before we controlled the element (see #80).
			var styleAttr, classAttr;

			var id;

			if(!ignoreID && SKROLLABLE_ID_DOM_PROPERTY in el) {
				//We already have this element under control. Grab the corresponding skrollable id.
				id = el[SKROLLABLE_ID_DOM_PROPERTY];
				styleAttr = _skrollables[id].styleAttr;
				classAttr = _skrollables[id].classAttr;
			} else {
				//It's an unknown element. Asign it a new skrollable id.
				id = (el[SKROLLABLE_ID_DOM_PROPERTY] = _skrollableIdCounter++);
				styleAttr = el.style.cssText;
				classAttr = _getClass(el);
			}

			_skrollables[id] = {
				element: el,
				styleAttr: styleAttr,
				classAttr: classAttr,
				anchorTarget: anchorTarget,
				keyFrames: keyFrames,
				smoothScrolling: smoothScrollThis,
				edgeStrategy: edgeStrategy,
				emitEvents: emitEvents,
				lastFrameIndex: -1
			};

			_updateClass(el, [SKROLLABLE_CLASS], []);
		}

		//Reflow for the first time.
		_reflow();

		//Now that we got all key frame numbers right, actually parse the properties.
		elementIndex = 0;
		elementsLength = elements.length;

		for(; elementIndex < elementsLength; elementIndex++) {
			var sk = _skrollables[elements[elementIndex][SKROLLABLE_ID_DOM_PROPERTY]];

			if(sk === undefined) {
				continue;
			}

			//Parse the property string to objects
			_parseProps(sk);

			//Fill key frames with missing properties from left and right
			_fillProps(sk);
		}

		return _instance;
	};

	/**
	 * Transform "relative" mode to "absolute" mode.
	 * That is, calculate anchor position and offset of element.
	 */
	Skrollr.prototype.relativeToAbsolute = function(element, viewportAnchor, elementAnchor) {
		var viewportHeight = documentElement.clientHeight;
		var box = element.getBoundingClientRect();
		var absolute = box.top;

		//#100: IE doesn't supply "height" with getBoundingClientRect.
		var boxHeight = box.bottom - box.top;

		if(viewportAnchor === ANCHOR_BOTTOM) {
			absolute -= viewportHeight;
		} else if(viewportAnchor === ANCHOR_CENTER) {
			absolute -= viewportHeight / 2;
		}

		if(elementAnchor === ANCHOR_BOTTOM) {
			absolute += boxHeight;
		} else if(elementAnchor === ANCHOR_CENTER) {
			absolute += boxHeight / 2;
		}

		//Compensate scrolling since getBoundingClientRect is relative to viewport.
		absolute += _instance.getScrollTop();

		return (absolute + 0.5) | 0;
	};

	/**
	 * Animates scroll top to new position.
	 */
	Skrollr.prototype.animateTo = function(top, options) {
		options = options || {};

		var now = _now();
		var scrollTop = _instance.getScrollTop();

		//Setting this to a new value will automatically cause the current animation to stop, if any.
		_scrollAnimation = {
			startTop: scrollTop,
			topDiff: top - scrollTop,
			targetTop: top,
			duration: options.duration || DEFAULT_DURATION,
			startTime: now,
			endTime: now + (options.duration || DEFAULT_DURATION),
			easing: easings[options.easing || DEFAULT_EASING],
			done: options.done
		};

		//Don't queue the animation if there's nothing to animate.
		if(!_scrollAnimation.topDiff) {
			if(_scrollAnimation.done) {
				_scrollAnimation.done.call(_instance, false);
			}

			_scrollAnimation = undefined;
		}

		return _instance;
	};

	/**
	 * Stops animateTo animation.
	 */
	Skrollr.prototype.stopAnimateTo = function() {
		if(_scrollAnimation && _scrollAnimation.done) {
			_scrollAnimation.done.call(_instance, true);
		}

		_scrollAnimation = undefined;
	};

	/**
	 * Returns if an animation caused by animateTo is currently running.
	 */
	Skrollr.prototype.isAnimatingTo = function() {
		return !!_scrollAnimation;
	};

	Skrollr.prototype.isMobile = function() {
		return _isMobile;
	};

	Skrollr.prototype.setScrollTop = function(top, force) {
		_forceRender = (force === true);

		if(_isMobile) {
			_mobileOffset = Math.min(Math.max(top, 0), _maxKeyFrame);
		} else {
			window.scrollTo(0, top);
		}

		return _instance;
	};

	Skrollr.prototype.getScrollTop = function() {
		if(_isMobile) {
			return _mobileOffset;
		} else {
			return window.pageYOffset || documentElement.scrollTop || body.scrollTop || 0;
		}
	};

	Skrollr.prototype.getMaxScrollTop = function() {
		return _maxKeyFrame;
	};

	Skrollr.prototype.on = function(name, fn) {
		_listeners[name] = fn;

		return _instance;
	};

	Skrollr.prototype.off = function(name) {
		delete _listeners[name];

		return _instance;
	};

	Skrollr.prototype.destroy = function() {
		var cancelAnimFrame = polyfillCAF();
		cancelAnimFrame(_animFrame);
		_removeAllEvents();

		_updateClass(documentElement, [NO_SKROLLR_CLASS], [SKROLLR_CLASS, SKROLLR_DESKTOP_CLASS, SKROLLR_MOBILE_CLASS]);

		var skrollableIndex = 0;
		var skrollablesLength = _skrollables.length;

		for(; skrollableIndex < skrollablesLength; skrollableIndex++) {
			_reset(_skrollables[skrollableIndex].element);
		}

		documentElement.style.overflow = body.style.overflow = '';
		documentElement.style.height = body.style.height = '';

		if(_skrollrBody) {
			skrollr.setStyle(_skrollrBody, 'transform', 'none');
		}

		_instance = undefined;
		_skrollrBody = undefined;
		_listeners = undefined;
		_forceHeight = undefined;
		_maxKeyFrame = 0;
		_scale = 1;
		_constants = undefined;
		_mobileDeceleration = undefined;
		_direction = 'down';
		_lastTop = -1;
		_lastViewportWidth = 0;
		_lastViewportHeight = 0;
		_requestReflow = false;
		_scrollAnimation = undefined;
		_smoothScrollingEnabled = undefined;
		_smoothScrollingDuration = undefined;
		_smoothScrolling = undefined;
		_forceRender = undefined;
		_skrollableIdCounter = 0;
		_edgeStrategy = undefined;
		_isMobile = false;
		_mobileOffset = 0;
		_translateZ = undefined;
	};

	/*
		Private methods.
	*/

	var _initMobile = function() {
		var initialElement;
		var initialTouchY;
		var initialTouchX;
		var currentElement;
		var currentTouchY;
		var currentTouchX;
		var lastTouchY;
		var deltaY;

		var initialTouchTime;
		var currentTouchTime;
		var lastTouchTime;
		var deltaTime;

		_addEvent(documentElement, [EVENT_TOUCHSTART, EVENT_TOUCHMOVE, EVENT_TOUCHCANCEL, EVENT_TOUCHEND].join(' '), function(e) {
			var touch = e.changedTouches[0];

			currentElement = e.target;

			//We don't want text nodes.
			while(currentElement.nodeType === 3) {
				currentElement = currentElement.parentNode;
			}

			currentTouchY = touch.clientY;
			currentTouchX = touch.clientX;
			currentTouchTime = e.timeStamp;

			if(!rxTouchIgnoreTags.test(currentElement.tagName)) {
				e.preventDefault();
			}

			switch(e.type) {
				case EVENT_TOUCHSTART:
					//The last element we tapped on.
					if(initialElement) {
						initialElement.blur();
					}

					_instance.stopAnimateTo();

					initialElement = currentElement;

					initialTouchY = lastTouchY = currentTouchY;
					initialTouchX = currentTouchX;
					initialTouchTime = currentTouchTime;

					break;
				case EVENT_TOUCHMOVE:
					//Prevent default event on touchIgnore elements in case they don't have focus yet.
					if(rxTouchIgnoreTags.test(currentElement.tagName) && document.activeElement !== currentElement) {
						e.preventDefault();
					}

					deltaY = currentTouchY - lastTouchY;
					deltaTime = currentTouchTime - lastTouchTime;

					_instance.setScrollTop(_mobileOffset - deltaY, true);

					lastTouchY = currentTouchY;
					lastTouchTime = currentTouchTime;
					break;
				default:
				case EVENT_TOUCHCANCEL:
				case EVENT_TOUCHEND:
					var distanceY = initialTouchY - currentTouchY;
					var distanceX = initialTouchX - currentTouchX;
					var distance2 = distanceX * distanceX + distanceY * distanceY;

					//Check if it was more like a tap (moved less than 7px).
					if(distance2 < 49) {
						if(!rxTouchIgnoreTags.test(initialElement.tagName)) {
							initialElement.focus();

							//It was a tap, click the element.
							var clickEvent = document.createEvent('MouseEvents');
							clickEvent.initMouseEvent('click', true, true, e.view, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);
							initialElement.dispatchEvent(clickEvent);
						}

						return;
					}

					initialElement = undefined;

					var speed = deltaY / deltaTime;

					//Cap speed at 3 pixel/ms.
					speed = Math.max(Math.min(speed, 3), -3);

					var duration = Math.abs(speed / _mobileDeceleration);
					var targetOffset = speed * duration + 0.5 * _mobileDeceleration * duration * duration;
					var targetTop = _instance.getScrollTop() - targetOffset;

					//Relative duration change for when scrolling above bounds.
					var targetRatio = 0;

					//Change duration proportionally when scrolling would leave bounds.
					if(targetTop > _maxKeyFrame) {
						targetRatio = (_maxKeyFrame - targetTop) / targetOffset;

						targetTop = _maxKeyFrame;
					} else if(targetTop < 0) {
						targetRatio = -targetTop / targetOffset;

						targetTop = 0;
					}

					duration = duration * (1 - targetRatio);

					_instance.animateTo((targetTop + 0.5) | 0, {easing: 'outCubic', duration: duration});
					break;
			}
		});

		//Just in case there has already been some native scrolling, reset it.
		window.scrollTo(0, 0);
		documentElement.style.overflow = body.style.overflow = 'hidden';
	};

	/**
	 * Updates key frames which depend on others / need to be updated on resize.
	 * That is "end" in "absolute" mode and all key frames in "relative" mode.
	 * Also handles constants, because they may change on resize.
	 */
	var _updateDependentKeyFrames = function() {
		var viewportHeight = documentElement.clientHeight;
		var processedConstants = _processConstants();
		var skrollable;
		var element;
		var anchorTarget;
		var keyFrames;
		var keyFrameIndex;
		var keyFramesLength;
		var kf;
		var skrollableIndex;
		var skrollablesLength;
		var offset;
		var constantValue;

		//First process all relative-mode elements and find the max key frame.
		skrollableIndex = 0;
		skrollablesLength = _skrollables.length;

		for(; skrollableIndex < skrollablesLength; skrollableIndex++) {
			skrollable = _skrollables[skrollableIndex];
			element = skrollable.element;
			anchorTarget = skrollable.anchorTarget;
			keyFrames = skrollable.keyFrames;

			keyFrameIndex = 0;
			keyFramesLength = keyFrames.length;

			for(; keyFrameIndex < keyFramesLength; keyFrameIndex++) {
				kf = keyFrames[keyFrameIndex];

				offset = kf.offset;
				constantValue = processedConstants[kf.constant] || 0;

				kf.frame = offset;

				if(kf.isPercentage) {
					//Convert the offset to percentage of the viewport height.
					offset = offset * viewportHeight;

					//Absolute + percentage mode.
					kf.frame = offset;
				}

				if(kf.mode === 'relative') {
					_reset(element);

					kf.frame = _instance.relativeToAbsolute(anchorTarget, kf.anchors[0], kf.anchors[1]) - offset;

					_reset(element, true);
				}

				kf.frame += constantValue;

				//Only search for max key frame when forceHeight is enabled.
				if(_forceHeight) {
					//Find the max key frame, but don't use one of the data-end ones for comparison.
					if(!kf.isEnd && kf.frame > _maxKeyFrame) {
						_maxKeyFrame = kf.frame;
					}
				}
			}
		}

		//#133: The document can be larger than the maxKeyFrame we found.
		_maxKeyFrame = Math.max(_maxKeyFrame, _getDocumentHeight());

		//Now process all data-end keyframes.
		skrollableIndex = 0;
		skrollablesLength = _skrollables.length;

		for(; skrollableIndex < skrollablesLength; skrollableIndex++) {
			skrollable = _skrollables[skrollableIndex];
			keyFrames = skrollable.keyFrames;

			keyFrameIndex = 0;
			keyFramesLength = keyFrames.length;

			for(; keyFrameIndex < keyFramesLength; keyFrameIndex++) {
				kf = keyFrames[keyFrameIndex];

				constantValue = processedConstants[kf.constant] || 0;

				if(kf.isEnd) {
					kf.frame = _maxKeyFrame - kf.offset + constantValue;
				}
			}

			skrollable.keyFrames.sort(_keyFrameComparator);
		}
	};

	/**
	 * Calculates and sets the style properties for the element at the given frame.
	 * @param fakeFrame The frame to render at when smooth scrolling is enabled.
	 * @param actualFrame The actual frame we are at.
	 */
	var _calcSteps = function(fakeFrame, actualFrame) {
		//Iterate over all skrollables.
		var skrollableIndex = 0;
		var skrollablesLength = _skrollables.length;

		for(; skrollableIndex < skrollablesLength; skrollableIndex++) {
			var skrollable = _skrollables[skrollableIndex];
			var element = skrollable.element;
			var frame = skrollable.smoothScrolling ? fakeFrame : actualFrame;
			var frames = skrollable.keyFrames;
			var framesLength = frames.length;
			var firstFrame = frames[0];
			var lastFrame = frames[frames.length - 1];
			var beforeFirst = frame < firstFrame.frame;
			var afterLast = frame > lastFrame.frame;
			var firstOrLastFrame = beforeFirst ? firstFrame : lastFrame;
			var emitEvents = skrollable.emitEvents;
			var lastFrameIndex = skrollable.lastFrameIndex;
			var key;
			var value;

			//If we are before/after the first/last frame, set the styles according to the given edge strategy.
			if(beforeFirst || afterLast) {
				//Check if we already handled this edge case last time.
				//Note: using setScrollTop it's possible that we jumped from one edge to the other.
				if(beforeFirst && skrollable.edge === -1 || afterLast && skrollable.edge === 1) {
					continue;
				}

				//Add the skrollr-before or -after class.
				if(beforeFirst) {
					_updateClass(element, [SKROLLABLE_BEFORE_CLASS], [SKROLLABLE_AFTER_CLASS, SKROLLABLE_BETWEEN_CLASS]);

					//This handles the special case where we exit the first keyframe.
					if(emitEvents && lastFrameIndex > -1) {
						_emitEvent(element, firstFrame.eventType, _direction);
						skrollable.lastFrameIndex = -1;
					}
				} else {
					_updateClass(element, [SKROLLABLE_AFTER_CLASS], [SKROLLABLE_BEFORE_CLASS, SKROLLABLE_BETWEEN_CLASS]);

					//This handles the special case where we exit the last keyframe.
					if(emitEvents && lastFrameIndex < framesLength) {
						_emitEvent(element, lastFrame.eventType, _direction);
						skrollable.lastFrameIndex = framesLength;
					}
				}

				//Remember that we handled the edge case (before/after the first/last keyframe).
				skrollable.edge = beforeFirst ? -1 : 1;

				switch(skrollable.edgeStrategy) {
					case 'reset':
						_reset(element);
						continue;
					case 'ease':
						//Handle this case like it would be exactly at first/last keyframe and just pass it on.
						frame = firstOrLastFrame.frame;
						break;
					default:
					case 'set':
						var props = firstOrLastFrame.props;

						for(key in props) {
							if(hasProp.call(props, key)) {
								value = _interpolateString(props[key].value);

								//Set style or attribute.
								if(key.indexOf('@') === 0) {
									element.setAttribute(key.substr(1), value);
								} else {
									skrollr.setStyle(element, key, value);
								}
							}
						}

						continue;
				}
			} else {
				//Did we handle an edge last time?
				if(skrollable.edge !== 0) {
					_updateClass(element, [SKROLLABLE_CLASS, SKROLLABLE_BETWEEN_CLASS], [SKROLLABLE_BEFORE_CLASS, SKROLLABLE_AFTER_CLASS]);
					skrollable.edge = 0;
				}
			}

			//Find out between which two key frames we are right now.
			var keyFrameIndex = 0;

			for(; keyFrameIndex < framesLength - 1; keyFrameIndex++) {
				if(frame >= frames[keyFrameIndex].frame && frame <= frames[keyFrameIndex + 1].frame) {
					var left = frames[keyFrameIndex];
					var right = frames[keyFrameIndex + 1];

					for(key in left.props) {
						if(hasProp.call(left.props, key)) {
							var progress = (frame - left.frame) / (right.frame - left.frame);

							//Transform the current progress using the given easing function.
							progress = left.props[key].easing(progress);

							//Interpolate between the two values
							value = _calcInterpolation(left.props[key].value, right.props[key].value, progress);

							value = _interpolateString(value);

							//Set style or attribute.
							if(key.indexOf('@') === 0) {
								element.setAttribute(key.substr(1), value);
							} else {
								skrollr.setStyle(element, key, value);
							}
						}
					}

					//Are events enabled on this element?
					//This code handles the usual cases of scrolling through different keyframes.
					//The special cases of before first and after last keyframe are handled above.
					if(emitEvents) {
						//Did we pass a new keyframe?
						if(lastFrameIndex !== keyFrameIndex) {
							if(_direction === 'down') {
								_emitEvent(element, left.eventType, _direction);
							} else {
								_emitEvent(element, right.eventType, _direction);
							}

							skrollable.lastFrameIndex = keyFrameIndex;
						}
					}

					break;
				}
			}
		}
	};

	/**
	 * Renders all elements.
	 */
	var _render = function() {
		if(_requestReflow) {
			_requestReflow = false;
			_reflow();
		}

		//We may render something else than the actual scrollbar position.
		var renderTop = _instance.getScrollTop();

		//If there's an animation, which ends in current render call, call the callback after rendering.
		var afterAnimationCallback;
		var now = _now();
		var progress;

		//Before actually rendering handle the scroll animation, if any.
		if(_scrollAnimation) {
			//It's over
			if(now >= _scrollAnimation.endTime) {
				renderTop = _scrollAnimation.targetTop;
				afterAnimationCallback = _scrollAnimation.done;
				_scrollAnimation = undefined;
			} else {
				//Map the current progress to the new progress using given easing function.
				progress = _scrollAnimation.easing((now - _scrollAnimation.startTime) / _scrollAnimation.duration);

				renderTop = (_scrollAnimation.startTop + progress * _scrollAnimation.topDiff) | 0;
			}

			_instance.setScrollTop(renderTop, true);
		}
		//Smooth scrolling only if there's no animation running and if we're not forcing the rendering.
		else if(!_forceRender) {
			var smoothScrollingDiff = _smoothScrolling.targetTop - renderTop;

			//The user scrolled, start new smooth scrolling.
			if(smoothScrollingDiff) {
				_smoothScrolling = {
					startTop: _lastTop,
					topDiff: renderTop - _lastTop,
					targetTop: renderTop,
					startTime: _lastRenderCall,
					endTime: _lastRenderCall + _smoothScrollingDuration
				};
			}

			//Interpolate the internal scroll position (not the actual scrollbar).
			if(now <= _smoothScrolling.endTime) {
				//Map the current progress to the new progress using easing function.
				progress = easings.sqrt((now - _smoothScrolling.startTime) / _smoothScrollingDuration);

				renderTop = (_smoothScrolling.startTop + progress * _smoothScrolling.topDiff) | 0;
			}
		}

		//That's were we actually "scroll" on mobile.
		if(_isMobile && _skrollrBody) {
			//Set the transform ("scroll it").
			skrollr.setStyle(_skrollrBody, 'transform', 'translate(0, ' + -(_mobileOffset) + 'px) ' + _translateZ);
		}

		//Did the scroll position even change?
		if(_forceRender || _lastTop !== renderTop) {
			//Remember in which direction are we scrolling?
			_direction = (renderTop > _lastTop) ? 'down' : (renderTop < _lastTop ? 'up' : _direction);

			_forceRender = false;

			var listenerParams = {
				curTop: renderTop,
				lastTop: _lastTop,
				maxTop: _maxKeyFrame,
				direction: _direction
			};

			//Tell the listener we are about to render.
			var continueRendering = _listeners.beforerender && _listeners.beforerender.call(_instance, listenerParams);

			//The beforerender listener function is able the cancel rendering.
			if(continueRendering !== false) {
				//Now actually interpolate all the styles.
				_calcSteps(renderTop, _instance.getScrollTop());

				//Remember when we last rendered.
				_lastTop = renderTop;

				if(_listeners.render) {
					_listeners.render.call(_instance, listenerParams);
				}
			}

			if(afterAnimationCallback) {
				afterAnimationCallback.call(_instance, false);
			}
		}

		_lastRenderCall = now;
	};

	/**
	 * Parses the properties for each key frame of the given skrollable.
	 */
	var _parseProps = function(skrollable) {
		//Iterate over all key frames
		var keyFrameIndex = 0;
		var keyFramesLength = skrollable.keyFrames.length;

		for(; keyFrameIndex < keyFramesLength; keyFrameIndex++) {
			var frame = skrollable.keyFrames[keyFrameIndex];
			var easing;
			var value;
			var prop;
			var props = {};

			var match;

			while((match = rxPropValue.exec(frame.props)) !== null) {
				prop = match[1];
				value = match[2];

				easing = prop.match(rxPropEasing);

				//Is there an easing specified for this prop?
				if(easing !== null) {
					prop = easing[1];
					easing = easing[2];
				} else {
					easing = DEFAULT_EASING;
				}

				//Exclamation point at first position forces the value to be taken literal.
				value = value.indexOf('!') ? _parseProp(value) : [value.slice(1)];

				//Save the prop for this key frame with his value and easing function
				props[prop] = {
					value: value,
					easing: easings[easing]
				};
			}

			frame.props = props;
		}
	};

	/**
	 * Parses a value extracting numeric values and generating a format string
	 * for later interpolation of the new values in old string.
	 *
	 * @param val The CSS value to be parsed.
	 * @return Something like ["rgba(?%,?%, ?%,?)", 100, 50, 0, .7]
	 * where the first element is the format string later used
	 * and all following elements are the numeric value.
	 */
	var _parseProp = function(val) {
		var numbers = [];

		//One special case, where floats don't work.
		//We replace all occurences of rgba colors
		//which don't use percentage notation with the percentage notation.
		rxRGBAIntegerColor.lastIndex = 0;
		val = val.replace(rxRGBAIntegerColor, function(rgba) {
			return rgba.replace(rxNumericValue, function(n) {
				return n / 255 * 100 + '%';
			});
		});

		//Handle prefixing of "gradient" values.
		//For now only the prefixed value will be set. Unprefixed isn't supported anyway.
		if(theDashedCSSPrefix) {
			rxGradient.lastIndex = 0;
			val = val.replace(rxGradient, function(s) {
				return theDashedCSSPrefix + s;
			});
		}

		//Now parse ANY number inside this string and create a format string.
		val = val.replace(rxNumericValue, function(n) {
			numbers.push(+n);
			return '{?}';
		});

		//Add the formatstring as first value.
		numbers.unshift(val);

		return numbers;
	};

	/**
	 * Fills the key frames with missing left and right hand properties.
	 * If key frame 1 has property X and key frame 2 is missing X,
	 * but key frame 3 has X again, then we need to assign X to key frame 2 too.
	 *
	 * @param sk A skrollable.
	 */
	var _fillProps = function(sk) {
		//Will collect the properties key frame by key frame
		var propList = {};
		var keyFrameIndex;
		var keyFramesLength;

		//Iterate over all key frames from left to right
		keyFrameIndex = 0;
		keyFramesLength = sk.keyFrames.length;

		for(; keyFrameIndex < keyFramesLength; keyFrameIndex++) {
			_fillPropForFrame(sk.keyFrames[keyFrameIndex], propList);
		}

		//Now do the same from right to fill the last gaps

		propList = {};

		//Iterate over all key frames from right to left
		keyFrameIndex = sk.keyFrames.length - 1;

		for(; keyFrameIndex >= 0; keyFrameIndex--) {
			_fillPropForFrame(sk.keyFrames[keyFrameIndex], propList);
		}
	};

	var _fillPropForFrame = function(frame, propList) {
		var key;

		//For each key frame iterate over all right hand properties and assign them,
		//but only if the current key frame doesn't have the property by itself
		for(key in propList) {
			//The current frame misses this property, so assign it.
			if(!hasProp.call(frame.props, key)) {
				frame.props[key] = propList[key];
			}
		}

		//Iterate over all props of the current frame and collect them
		for(key in frame.props) {
			propList[key] = frame.props[key];
		}
	};

	/**
	 * Calculates the new values for two given values array.
	 */
	var _calcInterpolation = function(val1, val2, progress) {
		var valueIndex;
		var val1Length = val1.length;

		//They both need to have the same length
		if(val1Length !== val2.length) {
			throw 'Can\'t interpolate between "' + val1[0] + '" and "' + val2[0] + '"';
		}

		//Add the format string as first element.
		var interpolated = [val1[0]];

		valueIndex = 1;

		for(; valueIndex < val1Length; valueIndex++) {
			//That's the line where the two numbers are actually interpolated.
			interpolated[valueIndex] = val1[valueIndex] + ((val2[valueIndex] - val1[valueIndex]) * progress);
		}

		return interpolated;
	};

	/**
	 * Interpolates the numeric values into the format string.
	 */
	var _interpolateString = function(val) {
		var valueIndex = 1;

		rxInterpolateString.lastIndex = 0;

		return val[0].replace(rxInterpolateString, function() {
			return val[valueIndex++];
		});
	};

	/**
	 * Resets the class and style attribute to what it was before skrollr manipulated the element.
	 * Also remembers the values it had before reseting, in order to undo the reset.
	 */
	var _reset = function(elements, undo) {
		//We accept a single element or an array of elements.
		elements = [].concat(elements);

		var skrollable;
		var element;
		var elementsIndex = 0;
		var elementsLength = elements.length;

		for(; elementsIndex < elementsLength; elementsIndex++) {
			element = elements[elementsIndex];
			skrollable = _skrollables[element[SKROLLABLE_ID_DOM_PROPERTY]];

			//Couldn't find the skrollable for this DOM element.
			if(!skrollable) {
				continue;
			}

			if(undo) {
				//Reset class and style to the "dirty" (set by skrollr) values.
				element.style.cssText = skrollable.dirtyStyleAttr;
				_updateClass(element, skrollable.dirtyClassAttr);
			} else {
				//Remember the "dirty" (set by skrollr) class and style.
				skrollable.dirtyStyleAttr = element.style.cssText;
				skrollable.dirtyClassAttr = _getClass(element);

				//Reset class and style to what it originally was.
				element.style.cssText = skrollable.styleAttr;
				_updateClass(element, skrollable.classAttr);
			}
		}
	};

	/**
	 * Detects support for 3d transforms by applying it to the skrollr-body.
	 */
	var _detect3DTransforms = function() {
		_translateZ = 'translateZ(0)';
		skrollr.setStyle(_skrollrBody, 'transform', _translateZ);

		var computedStyle = getStyle(_skrollrBody);
		var computedTransform = computedStyle.getPropertyValue('transform');
		var computedTransformWithPrefix = computedStyle.getPropertyValue(theDashedCSSPrefix + 'transform');
		var has3D = (computedTransform && computedTransform !== 'none') || (computedTransformWithPrefix && computedTransformWithPrefix !== 'none');

		if(!has3D) {
			_translateZ = '';
		}
	};

	/**
	 * Set the CSS property on the given element. Sets prefixed properties as well.
	 */
	skrollr.setStyle = function(el, prop, val) {
		var style = el.style;

		//Camel case.
		prop = prop.replace(rxCamelCase, rxCamelCaseFn).replace('-', '');

		//Make sure z-index gets a <integer>.
		//This is the only <integer> case we need to handle.
		if(prop === 'zIndex') {
			if(isNaN(val)) {
				//If it's not a number, don't touch it.
				//It could for example be "auto" (#351).
				style[prop] = val;
			} else {
				//Floor the number.
				style[prop] = '' + (val | 0);
			}
		}
		//#64: "float" can't be set across browsers. Needs to use "cssFloat" for all except IE.
		else if(prop === 'float') {
			style.styleFloat = style.cssFloat = val;
		}
		else {
			//Need try-catch for old IE.
			try {
				//Set prefixed property if there's a prefix.
				if(theCSSPrefix) {
					style[theCSSPrefix + prop.slice(0,1).toUpperCase() + prop.slice(1)] = val;
				}

				//Set unprefixed.
				style[prop] = val;
			} catch(ignore) {}
		}
	};

	/**
	 * Cross browser event handling.
	 */
	var _addEvent = skrollr.addEvent = function(element, names, callback) {
		var intermediate = function(e) {
			//Normalize IE event stuff.
			e = e || window.event;

			if(!e.target) {
				e.target = e.srcElement;
			}

			if(!e.preventDefault) {
				e.preventDefault = function() {
					e.returnValue = false;
					e.defaultPrevented = true;
				};
			}

			return callback.call(this, e);
		};

		names = names.split(' ');

		var name;
		var nameCounter = 0;
		var namesLength = names.length;

		for(; nameCounter < namesLength; nameCounter++) {
			name = names[nameCounter];

			if(element.addEventListener) {
				element.addEventListener(name, callback, false);
			} else {
				element.attachEvent('on' + name, intermediate);
			}

			//Remember the events to be able to flush them later.
			_registeredEvents.push({
				element: element,
				name: name,
				listener: callback
			});
		}
	};

	var _removeEvent = skrollr.removeEvent = function(element, names, callback) {
		names = names.split(' ');

		var nameCounter = 0;
		var namesLength = names.length;

		for(; nameCounter < namesLength; nameCounter++) {
			if(element.removeEventListener) {
				element.removeEventListener(names[nameCounter], callback, false);
			} else {
				element.detachEvent('on' + names[nameCounter], callback);
			}
		}
	};

	var _removeAllEvents = function() {
		var eventData;
		var eventCounter = 0;
		var eventsLength = _registeredEvents.length;

		for(; eventCounter < eventsLength; eventCounter++) {
			eventData = _registeredEvents[eventCounter];

			_removeEvent(eventData.element, eventData.name, eventData.listener);
		}

		_registeredEvents = [];
	};

	var _emitEvent = function(element, name, direction) {
		if(_listeners.keyframe) {
			_listeners.keyframe.call(_instance, element, name, direction);
		}
	};

	var _reflow = function() {
		var pos = _instance.getScrollTop();

		//Will be recalculated by _updateDependentKeyFrames.
		_maxKeyFrame = 0;

		if(_forceHeight && !_isMobile) {
			//un-"force" the height to not mess with the calculations in _updateDependentKeyFrames (#216).
			body.style.height = '';
		}

		_updateDependentKeyFrames();

		if(_forceHeight && !_isMobile) {
			//"force" the height.
			body.style.height = (_maxKeyFrame + documentElement.clientHeight) + 'px';
		}

		//The scroll offset may now be larger than needed (on desktop the browser/os prevents scrolling farther than the bottom).
		if(_isMobile) {
			_instance.setScrollTop(Math.min(_instance.getScrollTop(), _maxKeyFrame));
		} else {
			//Remember and reset the scroll pos (#217).
			_instance.setScrollTop(pos, true);
		}

		_forceRender = true;
	};

	/*
	 * Returns a copy of the constants object where all functions and strings have been evaluated.
	 */
	var _processConstants = function() {
		var viewportHeight = documentElement.clientHeight;
		var copy = {};
		var prop;
		var value;

		for(prop in _constants) {
			value = _constants[prop];

			if(typeof value === 'function') {
				value = value.call(_instance);
			}
			//Percentage offset.
			else if((/p$/).test(value)) {
				value = (value.slice(0, -1) / 100) * viewportHeight;
			}

			copy[prop] = value;
		}

		return copy;
	};

	/*
	 * Returns the height of the document.
	 */
	var _getDocumentHeight = function() {
		var skrollrBodyHeight = (_skrollrBody && _skrollrBody.offsetHeight || 0);
		var bodyHeight = Math.max(skrollrBodyHeight, body.scrollHeight, body.offsetHeight, documentElement.scrollHeight, documentElement.offsetHeight, documentElement.clientHeight);

		return bodyHeight - documentElement.clientHeight;
	};

	/**
	 * Returns a string of space separated classnames for the current element.
	 * Works with SVG as well.
	 */
	var _getClass = function(element) {
		var prop = 'className';

		//SVG support by using className.baseVal instead of just className.
		if(window.SVGElement && element instanceof window.SVGElement) {
			element = element[prop];
			prop = 'baseVal';
		}

		return element[prop];
	};

	/**
	 * Adds and removes a CSS classes.
	 * Works with SVG as well.
	 * add and remove are arrays of strings,
	 * or if remove is ommited add is a string and overwrites all classes.
	 */
	var _updateClass = function(element, add, remove) {
		var prop = 'className';

		//SVG support by using className.baseVal instead of just className.
		if(window.SVGElement && element instanceof window.SVGElement) {
			element = element[prop];
			prop = 'baseVal';
		}

		//When remove is ommited, we want to overwrite/set the classes.
		if(remove === undefined) {
			element[prop] = add;
			return;
		}

		//Cache current classes. We will work on a string before passing back to DOM.
		var val = element[prop];

		//All classes to be removed.
		var classRemoveIndex = 0;
		var removeLength = remove.length;

		for(; classRemoveIndex < removeLength; classRemoveIndex++) {
			val = _untrim(val).replace(_untrim(remove[classRemoveIndex]), ' ');
		}

		val = _trim(val);

		//All classes to be added.
		var classAddIndex = 0;
		var addLength = add.length;

		for(; classAddIndex < addLength; classAddIndex++) {
			//Only add if el not already has class.
			if(_untrim(val).indexOf(_untrim(add[classAddIndex])) === -1) {
				val += ' ' + add[classAddIndex];
			}
		}

		element[prop] = _trim(val);
	};

	var _trim = function(a) {
		return a.replace(rxTrim, '');
	};

	/**
	 * Adds a space before and after the string.
	 */
	var _untrim = function(a) {
		return ' ' + a + ' ';
	};

	var _now = Date.now || function() {
		return +new Date();
	};

	var _keyFrameComparator = function(a, b) {
		return a.frame - b.frame;
	};

	/*
	 * Private variables.
	 */

	//Singleton
	var _instance;

	/*
		A list of all elements which should be animated associated with their the metadata.
		Exmaple skrollable with two key frames animating from 100px width to 20px:

		skrollable = {
			element: <the DOM element>,
			styleAttr: <style attribute of the element before skrollr>,
			classAttr: <class attribute of the element before skrollr>,
			keyFrames: [
				{
					frame: 100,
					props: {
						width: {
							value: ['{?}px', 100],
							easing: <reference to easing function>
						}
					},
					mode: "absolute"
				},
				{
					frame: 200,
					props: {
						width: {
							value: ['{?}px', 20],
							easing: <reference to easing function>
						}
					},
					mode: "absolute"
				}
			]
		};
	*/
	var _skrollables;

	var _skrollrBody;

	var _listeners;
	var _forceHeight;
	var _maxKeyFrame = 0;

	var _scale = 1;
	var _constants;

	var _mobileDeceleration;

	//Current direction (up/down).
	var _direction = 'down';

	//The last top offset value. Needed to determine direction.
	var _lastTop = -1;

	//The last time we called the render method (doesn't mean we rendered!).
	var _lastRenderCall = _now();

	//For detecting if it actually resized (#271).
	var _lastViewportWidth = 0;
	var _lastViewportHeight = 0;

	var _requestReflow = false;

	//Will contain data about a running scrollbar animation, if any.
	var _scrollAnimation;

	var _smoothScrollingEnabled;

	var _smoothScrollingDuration;

	//Will contain settins for smooth scrolling if enabled.
	var _smoothScrolling;

	//Can be set by any operation/event to force rendering even if the scrollbar didn't move.
	var _forceRender;

	//Each skrollable gets an unique ID incremented for each skrollable.
	//The ID is the index in the _skrollables array.
	var _skrollableIdCounter = 0;

	var _edgeStrategy;


	//Mobile specific vars. Will be stripped by UglifyJS when not in use.
	var _isMobile = false;

	//The virtual scroll offset when using mobile scrolling.
	var _mobileOffset = 0;

	//If the browser supports 3d transforms, this will be filled with 'translateZ(0)' (empty string otherwise).
	var _translateZ;

	//Will contain data about registered events by skrollr.
	var _registeredEvents = [];

	//Animation frame id returned by RequestAnimationFrame (or timeout when RAF is not supported).
	var _animFrame;

	//Expose skrollr as either a global variable or a require.js module
	if(typeof define === 'function' && define.amd) {
		define('skrollr', function () {
			return skrollr;
		});
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = skrollr;
	} else {
		window.skrollr = skrollr;
	}

}(window, document));
;
// let's define console.log if it doesn't exist
if ( 'undefined' === typeof console ) {
	window.console = {
		dir: function (){},
		error: function (){},
		info: function (){},
		log: function (){}
	};
}

// load the calc polyfill if the browser doesn't support it: https://github.com/closingtag/calc-polyfill
Modernizr.load({
	test: Modernizr.csscalc,
	nope: go_theme.template_url + '/js/min/external/calc.js'
});

go_theme.child = {};

( function( $ ) {
	'use strict';

	$(document).foundation();

	go_theme.child.init = function() {
		amplify.subscribe( 'go-resize-execute', go_theme.child.resize );
		amplify.subscribe( 'go-resize-phone', go_theme.child.resize );

		go_theme.child.resize();

		// make sure the height of the page is at least the height of the window
		amplify.subscribe( 'go-resize-execute', go_theme.child.resize_html );

		// if there is a ribbon-cta, add a class to the body
		if ( $( '#research-ribbon-cta' ).length ) {
			$( 'body' ).addClass( 'has-ribbon-cta' );
		}//end if
	};

	go_theme.child.resize = function() {
		$(document).foundation('section','reflow');
		$('.widget.go-report-featured').each( function() {
			var $el = $(this);
			var $article = $el.find( '.go-report-featured.quarterly-wrap-up' );

			if ( $('body').hasClass( 'go-device-phone' ) ) {
				$article.css( 'height', 'auto' );
				return;
			}//end if

			if ( 0 === $article.length ) {
				return;
			}//end if

			if ( $article.height() === $el.innerHeight() ) {
				return;
			}//end if

			// set the height based on the widget, ignoring article padding
			$article.height( $el.innerHeight() - ( $article.outerHeight() - $article.height() ) );
		});

		$('.widget.go-event-waterfall article').each( function() {
			var $el = $(this);
			var $info = $el.find( '.info' );
			var $article = $el.find( 'section.body' );

			if ( $('body').hasClass( 'go-device-phone' ) ) {
				$info.css( 'height', 'auto' );
				return;
			}//end if

			if ( 0 === $info.length ) {
				return;
			}//end if

			if ( $info.height() === $el.innerHeight() ) {
				return;
			}//end if

			// set the height based on the widget, ignoring article padding
			$info.height( $el.innerHeight() - ( $info.outerHeight() - $info.height() ) );

			if ( $('body').hasClass( 'go-device-phone' ) ) {
				$article.css( 'height', 'auto' );
				return;
			}//end if

			if ( 0 === $article.length ) {
				return;
			}//end if

			if ( $article.height() === $el.innerHeight() ) {
				return;
			}//end if

			// set the height based on the widget, ignoring article padding
			$article.height( $el.innerHeight() - ( $article.outerHeight() - $article.height() ) );

			if ( ! $el.hasClass( 'resized' ) ) {
				$el.addClass('resized');
			}//end if
		});
	};

	go_theme.child.resize_html = function() {
		var window_height = $(window).height();
		var wrap_height = gigaom.$wrapper.height();

		var height_diff = window_height - wrap_height;
		var main_padding_bottom = gigaom.$main.css('padding-bottom');

		if ( 'undefined' === typeof main_padding_bottom ) {
			main_padding_bottom = '0';
		}//end if

		main_padding_bottom = parseInt( main_padding_bottom.replace('px', ''), 10 );

		if ( height_diff < 0 ) {
			gigaom.$main.css('padding-bottom', '');

			main_padding_bottom = gigaom.$main.css('padding-bottom');

			if ( 'undefined' === typeof main_padding_bottom ) {
				main_padding_bottom = '0';
			}//end if

			main_padding_bottom = parseInt( main_padding_bottom.replace('px', ''), 10 );

			wrap_height = gigaom.$wrapper.height();
			height_diff = window_height - wrap_height;
		}//end if

		var $foot = $( document.getElementById( 'foot' ) );

		// the footer is hidden by default to avoid jumpiness.  If it is hidden, let's show it
		if ( 'hidden' === $foot.css( 'visibility' ) ) {

			// first, we'll want to resize the #main content area
			if ( height_diff > 0 ) {
				gigaom.$main.css('padding-bottom', main_padding_bottom + height_diff );
			}//end if

			// display the footer
			$foot.css( 'visibility', 'visible' );
			//adding to prevent skrollr messing up the footer
			$( document ).trigger( 'go-theme-child-footer-shown' );
		} else if ( height_diff > 0 ) {
			// now that the footer is visible, let's add an animation if we're resizing the main content area
			gigaom.$main.animate( { paddingBottom: main_padding_bottom + height_diff } );
		}//end else if

		$( '.single-post .post-social:not(.above-featured)' ).removeClass( 'sticky' );
	};//end go_theme.child.resize_html
})( jQuery );

jQuery( function( $ ) {
	'use strict';

	gigaom.init();

	$(document).foundation( 'tooltips' );

	$( 'img[usemap]' ).rwdImageMaps();

	go_theme.account_nav.init();

	$( document.getElementById( 'related-research-target' ) ).bumpdown();

	// Support for search hover stuff
	$(document).on( 'mouseover touchstart tap MSPointerDown', '.property-search #sidebar .widget_scriblio_facets .term-link', function() {
		$(this).closest('li').addClass('hover');
	});

	$(document).on( 'mouseout touchend tap MSPointerOut', '.property-search #sidebar .widget_scriblio_facets .term-link', function() {
		$(this).closest('li').removeClass('hover');
	});

	go_theme.child.init();
});
;
if("undefined"==typeof gigaom)var gigaom={};!function(a){amplify.subscribe("go-pre-init",function(){var b=gigaom.$html_body.attr("class").split(" "),c=a.grep(b,function(a){return"go-channel-"===a.substring(0,11)});gigaom.channel="undefined"==typeof c[0]?"":c[0].replace("go-channel-","")})}(jQuery);;
window.PushUpNotifications=function(e,t){"use strict";function i(){var e="pushup_pv=";var t=n.cookie.split(";");for(var r=0;r<t.length;r++){var i=t[r].trim();if(i.indexOf(e)===0){return parseInt(i.substring(e.length,i.length))}}return 0}function s(e){var t=new Date;t.setTime(t.getTime()+60*24*60*60*1e3);var r=t.toUTCString();n.cookie="pushup_pv="+e+";"+"expires="+r+";"+"path=/;"}function o(t){if(u()){if(!t&&r.prompt>1){var a=i()+1;if(r.prompt>a){s(a);return}}if(r.button!==null){r.button.style.display="none"}n.cookie="pushup_pv=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;";var f={userID:r.userID,domain:r.domain};try{e.safari.pushNotification.requestPermission(r.webServiceURL,r.websitePushID,f,o)}catch(l){r.permissionData.permission="denied"}}}function u(){return typeof r.permissionData.permission!=="undefined"&&r.permissionData.permission==="default"}function a(){if("safari"in e&&"pushNotification"in e.safari){r.userID=t.userID;r.domain=t.domain;r.websitePushID=t.websitePushID;r.webServiceURL=t.webServiceURL;r.prompt=t.prompt;r.permissionData=e.safari.pushNotification.permission(r.websitePushID);if(r.prompt>0){o(false)}}if(n.querySelector){r.button=n.querySelector(".pushup_button");if(r.button!==null){if(u()){r.button.style.display="block";r.button.addEventListener("click",function(e){e.preventDefault();o(true)},false)}else{r.button.style.display="none"}}}}var n=e.document;var r={websitePushID:"",webServiceURL:"",userID:-1,domain:"",prompt:1,permissionData:"",button:null};a();return{offerNotifications:o,canOfferNotifications:u}}(window,PushUpNotificationSettings);window.PushUpNotifications.version="1.2.1"
;
var go_remote_identity={user:null,auth_type:null,logged_in_as:null,identity_checked:!1,login:{}};!function(a){"use strict";var b=a('div[id^="post-content-"]'),c={init:function(b){return go_remote_identity.logged_in_as=a("body").data("logged-in-as"),null===b||void 0===b?!1:void 0},get_identity_server:function(){var a=go_remote_identity_data.identity_server;return a=a.replace(/https?:/,""),a=document.location.protocol+a},get_sign_in_url:function(){var a=go_remote_identity_data.sign_in;return a=a.replace(/https?:/,""),a=document.location.protocol+a},get_current_url:function(a){return document.location.href+a},get_gravatar:function(a,b){var c=function(a){function b(a,b){return a<<b|a>>>32-b}function c(a,b){var c,d,e,f,g;return e=2147483648&a,f=2147483648&b,c=1073741824&a,d=1073741824&b,g=(1073741823&a)+(1073741823&b),c&d?2147483648^g^e^f:c|d?1073741824&g?3221225472^g^e^f:1073741824^g^e^f:g^e^f}function d(a,b,c){return a&b|~a&c}function e(a,b,c){return a&c|b&~c}function f(a,b,c){return a^b^c}function g(a,b,c){return b^(a|~c)}function h(a,e,f,g,h,i,j){return a=c(a,c(c(d(e,f,g),h),j)),c(b(a,i),e)}function i(a,d,f,g,h,i,j){return a=c(a,c(c(e(d,f,g),h),j)),c(b(a,i),d)}function j(a,d,e,g,h,i,j){return a=c(a,c(c(f(d,e,g),h),j)),c(b(a,i),d)}function k(a,d,e,f,h,i,j){return a=c(a,c(c(g(d,e,f),h),j)),c(b(a,i),d)}function l(a){for(var b,c=a.length,d=c+8,e=(d-d%64)/64,f=16*(e+1),g=Array(f-1),h=0,i=0;c>i;)b=(i-i%4)/4,h=i%4*8,g[b]=g[b]|a.charCodeAt(i)<<h,i++;return b=(i-i%4)/4,h=i%4*8,g[b]=g[b]|128<<h,g[f-2]=c<<3,g[f-1]=c>>>29,g}function m(a){var b,c,d="",e="";for(c=0;3>=c;c++)b=a>>>8*c&255,e="0"+b.toString(16),d+=e.substr(e.length-2,2);return d}function n(a){a=a.replace(/\r\n/g,"\n");for(var b="",c=0;c<a.length;c++){var d=a.charCodeAt(c);128>d?b+=String.fromCharCode(d):d>127&&2048>d?(b+=String.fromCharCode(d>>6|192),b+=String.fromCharCode(63&d|128)):(b+=String.fromCharCode(d>>12|224),b+=String.fromCharCode(d>>6&63|128),b+=String.fromCharCode(63&d|128))}return b}var o,p,q,r,s,t,u,v,w,x=Array(),y=7,z=12,A=17,B=22,C=5,D=9,E=14,F=20,G=4,H=11,I=16,J=23,K=6,L=10,M=15,N=21;for(a=n(a),x=l(a),t=1732584193,u=4023233417,v=2562383102,w=271733878,o=0;o<x.length;o+=16)p=t,q=u,r=v,s=w,t=h(t,u,v,w,x[o+0],y,3614090360),w=h(w,t,u,v,x[o+1],z,3905402710),v=h(v,w,t,u,x[o+2],A,606105819),u=h(u,v,w,t,x[o+3],B,3250441966),t=h(t,u,v,w,x[o+4],y,4118548399),w=h(w,t,u,v,x[o+5],z,1200080426),v=h(v,w,t,u,x[o+6],A,2821735955),u=h(u,v,w,t,x[o+7],B,4249261313),t=h(t,u,v,w,x[o+8],y,1770035416),w=h(w,t,u,v,x[o+9],z,2336552879),v=h(v,w,t,u,x[o+10],A,4294925233),u=h(u,v,w,t,x[o+11],B,2304563134),t=h(t,u,v,w,x[o+12],y,1804603682),w=h(w,t,u,v,x[o+13],z,4254626195),v=h(v,w,t,u,x[o+14],A,2792965006),u=h(u,v,w,t,x[o+15],B,1236535329),t=i(t,u,v,w,x[o+1],C,4129170786),w=i(w,t,u,v,x[o+6],D,3225465664),v=i(v,w,t,u,x[o+11],E,643717713),u=i(u,v,w,t,x[o+0],F,3921069994),t=i(t,u,v,w,x[o+5],C,3593408605),w=i(w,t,u,v,x[o+10],D,38016083),v=i(v,w,t,u,x[o+15],E,3634488961),u=i(u,v,w,t,x[o+4],F,3889429448),t=i(t,u,v,w,x[o+9],C,568446438),w=i(w,t,u,v,x[o+14],D,3275163606),v=i(v,w,t,u,x[o+3],E,4107603335),u=i(u,v,w,t,x[o+8],F,1163531501),t=i(t,u,v,w,x[o+13],C,2850285829),w=i(w,t,u,v,x[o+2],D,4243563512),v=i(v,w,t,u,x[o+7],E,1735328473),u=i(u,v,w,t,x[o+12],F,2368359562),t=j(t,u,v,w,x[o+5],G,4294588738),w=j(w,t,u,v,x[o+8],H,2272392833),v=j(v,w,t,u,x[o+11],I,1839030562),u=j(u,v,w,t,x[o+14],J,4259657740),t=j(t,u,v,w,x[o+1],G,2763975236),w=j(w,t,u,v,x[o+4],H,1272893353),v=j(v,w,t,u,x[o+7],I,4139469664),u=j(u,v,w,t,x[o+10],J,3200236656),t=j(t,u,v,w,x[o+13],G,681279174),w=j(w,t,u,v,x[o+0],H,3936430074),v=j(v,w,t,u,x[o+3],I,3572445317),u=j(u,v,w,t,x[o+6],J,76029189),t=j(t,u,v,w,x[o+9],G,3654602809),w=j(w,t,u,v,x[o+12],H,3873151461),v=j(v,w,t,u,x[o+15],I,530742520),u=j(u,v,w,t,x[o+2],J,3299628645),t=k(t,u,v,w,x[o+0],K,4096336452),w=k(w,t,u,v,x[o+7],L,1126891415),v=k(v,w,t,u,x[o+14],M,2878612391),u=k(u,v,w,t,x[o+5],N,4237533241),t=k(t,u,v,w,x[o+12],K,1700485571),w=k(w,t,u,v,x[o+3],L,2399980690),v=k(v,w,t,u,x[o+10],M,4293915773),u=k(u,v,w,t,x[o+1],N,2240044497),t=k(t,u,v,w,x[o+8],K,1873313359),w=k(w,t,u,v,x[o+15],L,4264355552),v=k(v,w,t,u,x[o+6],M,2734768916),u=k(u,v,w,t,x[o+13],N,1309151649),t=k(t,u,v,w,x[o+4],K,4149444226),w=k(w,t,u,v,x[o+11],L,3174756917),v=k(v,w,t,u,x[o+2],M,718787259),u=k(u,v,w,t,x[o+9],N,3951481745),t=c(t,p),u=c(u,q),v=c(v,r),w=c(w,s);var O=m(t)+m(u)+m(v)+m(w);return O.toLowerCase()},b=b||80;return"http://www.gravatar.com/avatar/"+c(a)+".jpg?s="+b},create_cookie:function(a,c,d){var e=null,f=b.attr("id").split("-");if(a+="_"+f[2],d){var g=new Date;g.setTime(g.getTime()+1e3*d),e="; expires="+g.toGMTString()}else e="";document.cookie=a+"="+c+e+"; path=/"},create_global_cookie:function(a,b,c){if(c){var d=new Date;d.setTime(d.getTime()+1e3*c);var e="; expires="+d.toGMTString()}else var e="";document.cookie=a+"="+b+e+"; path=/"},read_cookie:function(a,c){if(c){var d=b.attr("id")?b.attr("id").split("-"):"";a+="_"+d[2]}for(var e=a+"=",f=document.cookie.split(";"),g=0;g<f.length;g++){for(var h=f[g];" "==h.charAt(0);)h=h.substring(1,h.length);if(0==h.indexOf(e))return h.substring(e.length,h.length)}return null},delete_cookie:function(a,d){if(d)return void c.create_global_cookie(a,"",-1);var e=b.attr("id").split("-");a+="_"+e[2],c.create_cookie(a,"",-1)},check_identity:function(b,d){var e=d?d:null;if(null===c.read_cookie("pro-is-logged-in")&&null===e)return go_remote_identity.login={nav:{url:c.get_sign_in_url(),title:"Sign in"}},go_remote_identity.identity_checked=!0,amplify.publish("go-auth-not-authenticated"),a(document).trigger("go-auth-not-authenticated"),a(this);var f=c.get_identity_server()+"/wp-admin/admin-ajax.php?action=go_identity&callback=?",g=a.ajax({url:f,cache:!0,dataType:"jsonp"});return g.fail(function(){return amplify.publish("go-auth-fail"),a(document).trigger("go-auth-fail"),!1}),g.done(function(d){if(go_remote_identity.identity_checked=!0,!d||"undefined"==typeof d.display_name||!d.display_name)return amplify.publish("go-auth-fail"),a(document).trigger("go-auth-fail"),!1;if(go_remote_identity.auth_type=c.auth_type(d),go_remote_identity.user=d,go_remote_identity.logged_in_as=d.username,amplify.publish("go-auth-success",d),a(document).trigger("go-auth-success",d),"undefined"==typeof b)return!0;if("undefined"!=typeof c[b])a(document).GoIdentity(b,d);else{var e=b.indexOf(".");-1==e?b(d):(b=b.split("."),window[b[0]][b[1]](d))}return!0}),a(this)},auth_type:function(a){var b=null;return"undefined"==typeof a.go_oauth_identity?b:("undefined"!=typeof a.go_oauth_identity.twitter?b="twitter":"undefined"!=typeof a.go_oauth_identity.linkedin?b="linkedin":"undefined"!=typeof a.go_oauth_identity.facebook?b="facebook":"undefined"!=typeof a.go_oauth_identity.gigaom&&(b="gigaom"),b)},reauth_notify:function(b){amplify.publish("go-auth-reauth",b),a(document).trigger("go-auth-reauth",b)}};a.fn.GoIdentity=function(b){return c[b]?c[b].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof b&&b?void a.error("Method "+b+" does not exist on jQuery.GoIdentity"):c.init.apply(this,arguments)}}(jQuery);;
!function(a){a(document).GoIdentity(),a(document).GoIdentity("check_identity")}(jQuery);;
var go_remote_identity_service=null,go_remote_identity_redirect=null,go_remote_identity_login={credential_check_url:null,lightbox_class:"go-remote-identity-sign-in-lightbox",redirect_url:null,event:{},popup:null};!function(a){go_remote_identity_login.init=function(){amplify.subscribe("go-auth-reauth",function(){window.location.reload()}),this.credential_check_url=this.get_identity_server()+"/wp-admin/admin-ajax.php",a(document).on("click",".sign-in-link",this.event.sign_in),a(document).on("click","."+this.lightbox_class+" a.forgot-password",this.event.forgot_password),a(document).on("click","."+this.lightbox_class+" a.why",this.event.why),a(document).on("click","."+this.lightbox_class+" a.sign-up",this.event.sign_up),a(document).on("click","."+this.lightbox_class+" .social li a",this.event.social),"#sign-in"==window.location.hash&&go_remote_identity_login.init_sign_in()},go_remote_identity_login.get_identity_server=function(){var a=go_remote_identity_data.identity_server;return a=a.replace(/https?:/,""),a=document.location.protocol+a},go_remote_identity_login.show_forgot_password=function(){var b=a("#colorbox");b.addClass("forgot-password"),a.colorbox.resize(),b.find("input:visible:first").focus()},go_remote_identity_login.show_sign_up=function(){var b=a("#colorbox");b.removeClass(this.lightbox_class),b.removeClass("forgot-password"),b.removeClass("logging-in")},go_remote_identity_login.show_sign_in=function(){var b=a("#colorbox");b.addClass(this.lightbox_class),b.removeClass("forgot-password"),b.removeClass("logging-in"),a.colorbox.resize()},go_remote_identity_login.init_sign_in=function(){var b=a(window).width();b=390>=b?b:390,a.colorbox({html:a("#go-remote-identity-login-form").html(),close:"x",maxWidth:390,width:b,open:!0,overlayClose:!0,scrolling:!1,title:" ",onLoad:function(){var b=a("#colorbox");b.addClass(go_remote_identity_login.lightbox_class),a("#cboxClose").html('<i class="goicon icon-x"></i>')},onClosed:function(){var b=a("#colorbox");b.removeClass(go_remote_identity_login.lightbox_class),b.removeClass("forgot-password"),b.removeClass("logging-in")},onComplete:function(){a("#colorbox").find("input:visible:first").focus(),a("."+go_remote_identity_login.lightbox_class).find("label").each(function(){var b=a(this).closest("li"),c=b.find("input");if(c.length){var d=c.attr("id");d+="-lightbox",c.attr("id",d),a(this).attr("for",d)}}),a(this).colorbox.resize()}})},go_remote_identity_login.toggle_why_details=function(){var b=a(".why-details");b.is(":visible")?b.hide():b.show(),a(this).colorbox.resize()},go_remote_identity_login.react_to_credential_check=function(a){return go_remote_identity_login.popup.closed?"undefined"!=typeof a.authed&&a.authed?void(window.location=this.redirect_url):void this.show_sign_in():void 0},go_remote_identity_login.event.forgot_password=function(a){a.preventDefault(),go_remote_identity_login.show_forgot_password()},go_remote_identity_login.event.why=function(a){a.preventDefault(),go_remote_identity_login.toggle_why_details()},go_remote_identity_login.event.sign_up=function(a){a.preventDefault(),go_remote_identity_login.show_sign_up()},go_remote_identity_login.event.sign_in=function(a){a.preventDefault(),go_remote_identity_login.init_sign_in()},go_remote_identity_login.event.social=function(b){b.preventDefault();var c=a("#colorbox");c.addClass("logging-in"),a(this).colorbox.resize();var d=a(this),e=d.attr("href"),f=d.closest("li"),g=800,h=f.attr("class");go_remote_identity_service=h,go_remote_identity_login.popup=window.open(e,h,"resizeable=1,width="+g+",height=480");var i=setInterval(function(){var b=[],c=null;if(null!==go_remote_identity_login.popup){if(go_remote_identity_login.popup.location&&!go_remote_identity_login.popup.closed)for(var d=go_remote_identity_login.popup.location.search.slice(go_remote_identity_login.popup.location.search.indexOf("?")+1).split("&"),e=0,f=d.length;f>e;e++)c=d[e].split("="),b.push(c[0]),b[c[0]]=c[1];var g=go_remote_identity_data.identity_server.replace(/https?:\/\//,"");if(go_remote_identity_login.redirect_url="https://"+g+"/subscription/sign-in/?goauth_message=1&goauth_service="+go_remote_identity_service+"&goauth_action=login_connect&redirect_to="+encodeURIComponent("/subscription/sign-in/?goauth_service="+go_remote_identity_service+"&goauth_action=login_connect&loc="+encodeURIComponent(window.location.href)),go_remote_identity_login.popup.closed){window.focus(),clearInterval(i);{a.ajax({url:go_remote_identity_login.credential_check_url,dataType:"jsonp",data:{action:"go_identity_social_credentials",callback:"go_remote_identity_login.react_to_credential_check",goauth_service:go_remote_identity_service}})}}}},250)}}(jQuery),jQuery(function(){go_remote_identity_login.init()});;
function RecurringTimer(a,b){var c,d=!1,e=b;this.pause=function(){d&&(window.clearTimeout(d),d=!1,e-=new Date-c)};var f=function(){d||(c=new Date,d=window.setTimeout(function(){e=b,d=!1,f(),a()},e))};this.resume=f};
/**
 * author Remy Sharp
 * url http://remysharp.com/2009/01/26/element-in-view-event-plugin/
 */
(function ($) {
    function getViewportHeight() {
        var height = window.innerHeight; // Safari, Opera
        var mode = document.compatMode;

        if ( (mode || !$.support.boxModel) ) { // IE, Gecko
            height = (mode == 'CSS1Compat') ?
            document.documentElement.clientHeight : // Standards
            document.body.clientHeight; // Quirks
        }

        return height;
    }

    $(window).scroll(function () {
        var vpH = getViewportHeight(),
            scrolltop = (document.documentElement.scrollTop ?
                document.documentElement.scrollTop :
                document.body.scrollTop),
            elems = [];
        
        // naughty, but this is how it knows which elements to check for
        $.each($.cache, function () {
            if (this.events && this.events.inview) {
                elems.push(this.handle.elem);
            }
        });

        if (elems.length) {
            $(elems).each(function () {
                var $el = $(this),
                    top = $el.offset().top,
                    height = $el.height(),
                    inview = $el.data('inview') || false;

                if (scrolltop > (top + height) || scrolltop + vpH < top) {
                    if (inview) {
                        $el.data('inview', false);
                        $el.trigger('inview', [ false ]);                        
                    }
                } else if (scrolltop < (top + height)) {
                    if (!inview) {
                        $el.data('inview', true);
                        $el.trigger('inview', [ true ]);
                    }
                }
            });
        }
    });
    
    // kick the event to pick up any elements already in view.
    // note however, this only works if the plugin is included after the elements are bound to 'inview'
    $(function () {
        $(window).scroll();
    });
})(jQuery);
;
if("undefined"==typeof gigaom)var gigaom={};gigaom.events={articles:{},notify_posts:[],data:{}},function(a){"use strict";gigaom.events.notify_cookie_id="go_events_navigation",gigaom.events.init=function(){gigaom.nav.panels.events={name:"events",direction:"right",control:"body:not(.go-device-full) .nav-events a"},gigaom.nav.init_sidepanel("events"),gigaom.events.$nav_events=gigaom.$nav.find(".nav-events"),gigaom.events.$control=gigaom.$nav.find(".control-events"),gigaom.events.$notification=gigaom.events.$control.find(".notification"),gigaom.events.cookie=gigaom.events.get_cookie(gigaom.events.notify_cookie_id);var b=new Date,c=new Date(b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate(),b.getUTCHours(),b.getUTCMinutes(),b.getUTCSeconds());gigaom.events.utc_timestamp=Math.floor(c.getTime()/1e3),amplify.request.define("load_articles","ajax",{url:go_events_endpoint_url,dataType:"jsonp",type:"GET",cache:15e3}),amplify.subscribe("go-nav-control-open",gigaom.events.go_nav_control_open),amplify.request("load_articles",gigaom.events.load_articles),a(document).on("click",".e-to-top",function(b){b.preventDefault(),a("html,body").animate({scrollTop:0},600,function(){gigaom.$html_body.hasClass("go-device-full")?a("#go-theme-nav .nav-events").mouseover():gigaom.nav.toggle("events","right")})})},gigaom.events.load_articles=function(b){var c=a("#event-post-tpl").html(),d=a(".nav-events"),e=a(".sidepanel.events"),f={source:gigaom.channel,medium:"nav",campaign:"events-nav"};gigaom.events.sections={conference:{$container:d.find(".conferences"),$side_container:e.find(".conferences")},webinar:{$container:d.find(".webinars"),$side_container:e.find(".webinars")},editorial:{$container:d.find(".editorial"),$side_container:e.find(".editorial")},meetup:{$container:d.find(".meetups"),$side_container:e.find(".meetups")}},gigaom.events.data=b;for(var g in b)f.content=b[g].title.replace('"',""),b[g].tracking=f,b[g].compiled=a.mustache(c,b[g]),gigaom.events.sections[b[g].event_type].$container.append(b[g].compiled),gigaom.events.sections[b[g].event_type].$side_container.append(b[g].compiled),gigaom.events.maybe_queue_notify(b,g);for(var h in gigaom.events.sections)gigaom.events.sections[h].$container.find(".event").length&&(d.addClass("has-"+h),e.addClass("has-"+h));amplify.publish("go-event-navigation-events-loaded"),gigaom.events.notify()},gigaom.events.maybe_queue_notify=function(b,c){var d=b[c].state.timestamp+432e3>=gigaom.events.utc_timestamp,e=!1,f=!1;"new"===b[c].state.type&&d&&(e=gigaom.events.cookie.hasOwnProperty(c),(!e||e&&gigaom.events.cookie[c].timestamp<b[c].state.timestamp)&&(gigaom.events.notify_posts.push(b[c]),f=!0)),f||a("."+c).removeClass("new")},gigaom.events.notify=function(){gigaom.events.notify_posts.length&&(gigaom.events.$notification.html(gigaom.events.notify_posts.length),gigaom.events.$nav_events.addClass("notify"))},gigaom.events.set_cookie=function(b,c){a.cookie(b,JSON.stringify(c),{expires:365,path:"/"})},gigaom.events.get_cookie=function(b){var c=a.cookie(b);return c?JSON.parse(c):{}},gigaom.events.go_nav_control_open=function(a){"events"===a&&(gigaom.events.$nav_events.removeClass("notify"),gigaom.events.set_all_notifications_seen())},gigaom.events.set_all_notifications_seen=function(){var a={};for(var b in gigaom.events.data)a[b]=gigaom.events.data[b].state;gigaom.events.set_cookie(gigaom.events.notify_cookie_id,a)}}(jQuery),amplify.subscribe("go-nav-init",gigaom.events.init);;
if("undefined"==typeof gigaom)var gigaom={};"undefined"==typeof gigaom.events&&(gigaom.events={}),gigaom.events.balloon={},function(a){"use strict";gigaom.events.balloon.cookie_id="go_events_balloon",gigaom.events.balloon.count=0,gigaom.events.balloon.max_count=3,gigaom.events.balloon.init=function(){gigaom.events.balloon.show()?(gigaom.events.balloon.inflate(),gigaom.events.balloon.timer=new RecurringTimer(function(){gigaom.events.balloon.count++,gigaom.events.balloon.count>=gigaom.events.balloon.max_count&&gigaom.events.balloon.finish()},1e3),gigaom.events.balloon.timer.resume(),gigaom.events.$balloon.bind("inview",function(a,b){!0===b?gigaom.events.balloon.timer.resume():gigaom.events.balloon.timer.pause()}),a(document).on("mouseover",".event-balloon",function(){gigaom.events.balloon.timer.pause()}),a(document).on("mouseout",".event-balloon",function(){gigaom.events.balloon.timer.resume()})):gigaom.events.notify()},gigaom.events.balloon.inflate=function(){if(gigaom.events.$balloon=gigaom.events.balloon.find_event().clone(!0),gigaom.events.$balloon.length){amplify.subscribe("go-resize-execute",gigaom.events.balloon.resize);var b=a("#go-theme-nav .header.primary .nav-events");gigaom.events.$balloon.addClass("event-balloon").css({visibility:"hidden"}),gigaom.events.$balloon.prependTo(b);var c=gigaom.events.$balloon.find("header a");c.attr("data-tracking-campaign","events-nav-balloon");var d=gigaom.events.$balloon.clone();d.css({bottom:0,display:"block",left:0,margin:0,padding:0,position:"absolute",right:0,top:0,visibility:"hidden",width:960}),d.appendTo(b);var e=gigaom.events.balloon.element_max_width(d.find("header")),f=gigaom.events.balloon.element_max_width(d.find(".body")),g=e+f+36;d.remove(),g>960&&(g=960),gigaom.events.$balloon.data("title-width",e),gigaom.events.$balloon.data("body-width",f),gigaom.events.$balloon.data("max-width",g),gigaom.events.balloon.resize(),gigaom.events.$control.append('<span class="arrow"></span>'),gigaom.events.$balloon.on("click",function(b){b.preventDefault();var c=a(this).find("header a").attr("href");document.location=c}),gigaom.events.$balloon.css({visibility:"visible"}),amplify.publish("go-event-navigation-balloon-inflate")}},gigaom.events.balloon.element_max_width=function(a){a.css({display:"block",position:"absolute",width:960});var b=a.html(),c="<span>"+b+"</span>";a.html(c);var d=a.find("span:first").outerWidth();return d},gigaom.events.balloon.resize=function(){var b=960;if(!gigaom.$html_body.is(".go-device-full")){var c=gigaom.events.$control.offset(),d=a("#nav-toggle").offset(),e=a("#nav-toggle").outerWidth();b=c.left-d.left-e}var f=gigaom.events.$balloon.data("max-width"),g=b>f?f:b;gigaom.events.$balloon.css({width:g})},gigaom.events.balloon.find_event=function(){var b=gigaom.events.get_cookie(gigaom.events.balloon.cookie_id),c=a();return gigaom.events.sections.conference.$container.find(".event.new").each(function(){var d=a(this);c.length||"undefined"!=typeof b["conference-"+d.data("id")]||(c=d)}),c},gigaom.events.balloon.pop=function(){var b=gigaom.events.$control.find(".arrow");b.fadeOut("fast"),gigaom.events.$balloon.fadeOut("fast"),b.promise().done(function(){a(this).remove()}),gigaom.events.$balloon.promise().done(function(){a(this).remove(),delete gigaom.events.$balloon}),amplify.unsubscribe("go-resize-execute",gigaom.events.balloon.resize)},gigaom.events.balloon.show=function(){var a=gigaom.events.balloon.find_event();return a.length?!0:!1},gigaom.events.balloon.finish=function(){if(gigaom.events.balloon.timer.pause(),"undefined"!=typeof gigaom.events.$balloon){var b="conference-"+gigaom.events.$balloon.data("id"),c=gigaom.events.get_cookie(gigaom.events.balloon.cookie_id)||{};c[b]=gigaom.events.data[b].state;for(var d in c){var e=a("."+d);e.length&&e.hasClass("new")||delete c[d]}gigaom.events.set_cookie(gigaom.events.balloon.cookie_id,c),gigaom.events.balloon.pop()}}}(jQuery),amplify.subscribe("go-event-navigation-events-loaded",gigaom.events.balloon.init);;
jQuery(function(a){"use strict";amplify.subscribe("go-auth-success",function(b){if("undefined"!=typeof b.role){{var c=a("#go-theme-nav .nav-subscribe .research .subscription"),d=a("#go-theme-nav .nav-subscribe .research .individual"),e=a("#go-theme-nav .nav-subscribe .research .advisory"),f=a("#go-theme-nav .nav-subscribe .research .enterprise");c.find("header")}if("guest-prospect"===b.role)c.addClass("hide"),d.removeClass("hide"),c.find(".prompt").addClass("hide"),c.find(".subscribed").show();else if("subscriber"===b.role)c.addClass("hide"),d.removeClass("hide"),d.find(".prompt").addClass("hide"),d.find(".subscribed").show();else if("User-Enterprise"===b.type){var g=a();if("undefined"!=typeof b.enterprise_cta){g=a(b.enterprise_cta).find("#go-marketing-cta p");var h=f.find(".prompt"),i=a();g.unwrap()}b.is_advisory?(c.addClass("hide"),g.length?(e.removeClass("hide"),i=e.find(".subscribed"),i.html(g)):d.removeClass("hide")):(c.addClass("hide"),g.length?(i=f.find(".subscribed"),i.html(g),h.addClass("hide")):d.removeClass("hide")),i.show()}}})});;
if ( 'undefined' === typeof bsocial_comments ) {
	var bsocial_comments = {};
}//end if

if ( 'undefined' === typeof bsocial_comments.event ) {
	bsocial_comments.event = {};
}//end if

( function( $ ) {
	'use strict';

	/**
	 * initializes the bsocial_comments features
	 */
	bsocial_comments.init = function() {
		if ( ! $( '#comment_post_ID' ).length ) {
			return;
		}//end if

		this.states_requested = false;
		this.authenticated_request_filters = [];
		this.authenticated = $( 'body' ).hasClass( 'logged-in' );
		this.post_id = $( '#comment_post_ID' ).val();

		if ( this.authenticated ) {
			this.request_comment_states();
		}

		$( document ).on( 'click', '.comment-fave a', this.event.fave_comment );
		$( document ).on( 'click', '.comment-flag a', this.event.flag_comment );
		$( document ).on( 'click', '.comment-flag-confirm', this.event.confirm_flag_comment );
		$( document ).on( 'submit', '.flag-logged-in form', this.event.confirm_flag_comment );
		$( document ).on( 'click', '.flag-logged-in .cancel', this.event.cancel_confirm_flag_comment );
		$( document ).on( 'change', '.reason', this.event.select_reason );
		$( document ).on( 'keyup', '.reason-description', this.event.select_reason );
	};

	/**
	 * retrieves comment states via Ajax
	 */
	bsocial_comments.request_comment_states = function() {
		// track that states have been requested
		this.states_requested = true;

		var args = {
			dataType: 'json',
			url: this.endpoint,
			data: {
				action: 'bsocial_comments_feedback_states_for_user',
				post_id: this.post_id,
				user: {
					user_id: this.logged_in_as
				},
				nonce: this.nonce
			},
			success: function( response ) {
				if ( ! response.success ) {
					return;
				}//end if

				bsocial_comments.parse_comment_states( response.data );
			}
		};

		this.authenticated_request( args );
	};

	/**
	 * parses comment state JSON and assigns classes to comments where appropriate
	 */
	bsocial_comments.parse_comment_states = function( states ) {
		for ( var comment_id in states ) {
			var $comment = $( '.comment[data-comment-id="' + comment_id + '"]' );

			// if there is comment data for a comment that doesn't exist on the page, don't bother attempting to set the flag/fave states
			if ( ! $comment.length ) {
				continue;
			}//end if

			if ( 'undefined' !== typeof states[ comment_id ].flagged && states[ comment_id ].flagged ) {
				this.set_flag_state( comment_id, 'flag' );
			}//end if

			if ( 'undefined' !== typeof states[ comment_id ].faved && states[ comment_id ].faved ) {
				this.set_fave_state( comment_id, 'fave' );
			}//end if
		}//end for

		$( document ).trigger( 'bsocial-comments-parsed-comment-states' );
	};

	/**
	 * sets a comments fave state
	 */
	bsocial_comments.set_fave_state = function( comment_id, state ) {
		var $comment = $( '.comment[data-comment-id="' + comment_id + '"]' );

		if ( ! $comment.length ) {
			return;
		}//end if

		var $fave_link = $comment.find( ' > .div-comment .comment-fave a' );
		var href = $fave_link.attr( 'href' );

		$comment.attr( 'data-comment-fave', state );
		$comment.removeClass( 'faving' );

		if ( 'fave' === state ) {
			$fave_link.attr( 'title', 'Unfave this comment' );
			$fave_link.attr( 'href', href.replace( 'direction=fave', 'direction=unfave' ) );
		} else {
			$fave_link.attr( 'title', 'Fave this comment' );
			$fave_link.attr( 'href', href.replace( 'direction=unfave', 'direction=fave' ) );
		}//end else
	};

	/**
	 * sets a comments flag state
	 */
	bsocial_comments.set_flag_state = function( comment_id, state ) {
		var $comment = $( '.comment[data-comment-id="' + comment_id + '"]' );

		if ( ! $comment.length ) {
			return;
		}//end if

		var $flag_link = $comment.children( '.div-comment' ).find( '.comment-flag a' );
		var href = $flag_link.attr( 'href' );

		$comment.attr( 'data-comment-flag', state );
		$comment.removeClass( 'flagging' );

		if ( 'flag' === state ) {
			$flag_link.attr( 'title', 'Unflag this comment' );
			$flag_link.attr( 'href', href.replace( 'direction=flag', 'direction=unflag' ) );
		} else {
			$flag_link.attr( 'title', 'Flag this comment' );
			$flag_link.attr( 'href', href.replace( 'direction=unflag', 'direction=flag' ) );
		}//end else
	};

	/**
	 * handles the interaction with a comment fave link
	 */
	bsocial_comments.fave_comment = function( $link ) {
		var $comment = $link.closest( '.comment' );
		var $feedback_box = $comment.find( '.feedback-box .fave-logged-out' ).filter( ':visible' );

		if ( $feedback_box.length ) {
			$comment.removeClass( 'faving flagging' );
			$comment.find( '.feedback-box' ).slideUp( 'fast' );
			return;
		}//end if

		var args = this.generate_ajax_args( $comment, $link, 'fave' );

		if ( ! this.authenticated ) {
			$comment.addClass( 'faving' ).removeClass( 'flagging' );
			$comment.find( '.feedback-box:first' ).attr( 'data-type', 'fave-logged-out' ).slideDown( 'fast' );
			$( document ).trigger( 'bsocial-comments-defer-action-for-auth', [ args, 'fave' ] );
			$( document ).trigger( 'bsocial-comments-fave-not-authenticated', [ $comment ] );
			return;
		}//end if

		$comment.removeClass( 'faving flagging' );
		this.authenticated_request( args );

		// let's give immediate feedback so we don't have to wait for the ajax round-trip
		this.adjust_fave_count( $comment, 'fave' === $comment.attr( 'data-comment-fave' ) ? 'decrement' : 'increment' );
	};

	/**
	 * increment/decrement fave count
	 */
	bsocial_comments.adjust_fave_count = function( $comment, which ) {
		which = 'decrement' === which ? 'decrement' : 'increment';

		var $fave_count = $comment.find( '.fave-count:first' );
		var count = parseInt( $fave_count.attr( 'data-count' ), 10 );

		if ( 'decrement' === which && count > 0 ) {
			count--;
		} else {
			count++;
		}//end if

		$fave_count.html( count ).attr( 'data-count', count );

		if ( 'fave' === $comment.attr( 'data-comment-fave' ) ) {
			this.set_fave_state( $comment.data( 'comment-id' ), 'unfave' );
		} else {
			this.set_fave_state( $comment.data( 'comment-id' ), 'fave' );
		}//end else
	};

	/**
	 * handles the interaction with a comment flag link
	 */
	bsocial_comments.flag_comment = function( $link ) {
		var $comment = $link.closest( '.comment' );
		var $feedback_box = $comment.find( '.feedback-box' ).filter( ':visible' );

		if ( $feedback_box.find( '.flag-logged-in' ).filter( ':visible' ).length ) {
			$feedback_box.find( '.flag-logged-in .cancel' ).click();
			return;
		}//end if
		else if ( $feedback_box.find( '.flag-logged-out' ).filter( ':visible' ).length ) {
			$comment.removeClass( 'faving flagging' );
			$feedback_box.slideUp( 'fast' );
			return;
		}//end else if

		if ( ! this.authenticated ) {
			$comment.addClass( 'flagging' ).removeClass( 'faving' );
			$comment.find( '.feedback-box:first' ).attr( 'data-type', 'flag-logged-out' ).slideDown( 'fast' );
			var args = this.generate_ajax_args( $comment, $link, 'flag' );
			$( document ).trigger( 'bsocial-comments-defer-action-for-auth', [ args, 'flag' ] );
			$( document ).trigger( 'bsocial-comments-flag-not-authenticated', [ $comment ] );
			return;
		}//end if
		else {
			if ( 'flag' !== $comment.attr( 'data-comment-flag' ) ) {
				$comment.addClass( 'flagging' ).removeClass( 'faving' );
				$comment.find( '.feedback-box:first' ).attr( 'data-type', 'flag-logged-in' ).slideDown( 'fast' );
				$( document ).trigger( 'bsocial-comments-flag-is-authenticated', [ $comment ] );
			} else {
				this.confirm_flag_comment( $link );
			}//end else
		}//end else
	};

	/**
	 * handles the interaction with a comment flag confirmation link
	 */
	bsocial_comments.confirm_flag_comment = function( $link ) {
		var $comment = $link.closest( '.comment' );
		var $form = $comment.find( '> .feedback-box .flag-logged-in' );
		if( 'other' !== $form.find( '.reason:checked' ).data( 'reason-type' ) ) {
			//clear the textarea if we're not submitting "other"
			$form.find( 'textarea' ).val( '' );
		}//end if

		var args = this.generate_ajax_args( $comment, $link, 'flag' );

		if ( ! this.authenticated ) {
			return;
		}//end if

		// if we are flagging a comment AND it is the "Other" option, make sure a description has been entered
		if ( 'flag' !== $comment.attr( 'data-comment-flag' ) && $form.filter( '[data-selected-reason="other"]' ).length ) {
			if ( '' === $.trim( $form.find( '.reason-description' ).val() ) ) {
				$form.find( '.required' ).show();
				return;
			}//end if
		}//end if

		$comment.removeClass( 'faving flagging' );

		this.authenticated_request( args );

		$form.find( '.reason:checked' ).prop( false );
		$form.find( '.reason-description' ).val( '' );

		// let's give immediate feedback so we don't have to wait for the ajax round-trip
		$comment.find( '.feedback-box:first' ).attr( 'data-type', '' ).slideUp( 'fast' );
		if ( 'flag' === $comment.attr( 'data-comment-flag' ) ) {
			this.set_flag_state( $comment.attr( 'data-comment-id' ), 'unflag' );
		} else {
			this.set_flag_state( $comment.attr( 'data-comment-id' ), 'flag' );
		}//end else
		bsocial_comments.form_reset( $form );

		$( document ).trigger( 'bsocial-comments-flag-confirmed', [ $comment ] );
	};

	bsocial_comments.form_reset = function( $form ) {
		//reset the form ( deselect radio and clear textarea )
		$form.find( 'form' )[0].reset();
		//have to hide the text area - and that is based on the data-selected-reason atribute
		$form.find( 'form' ).attr( 'data-selected-reason', '' );
		//re-disable the button see https://github.com/GigaOM/gigaom/issues/5267
		$form.find( '.comment-flag-confirm' ).prop( { 'disabled': true } );
	};

	/**
	 * generates feedback ajax args
	 */
	bsocial_comments.generate_ajax_args = function( $comment, $trigger, type ) {
		if ( $trigger.is( 'button' ) ) {
			var url = $trigger.closest( 'form' ).attr( 'action' );
		} else {
			var url = $trigger.attr( 'href' );
		}

		var type_inverse = null;

		if ( 'flag' === type ) {
			type_inverse = 'unflag';
		} else {
			type_inverse = 'unfave';
		}//end else

		var has_state = false;

		if ( 'undefined' !== typeof $comment.attr( 'data-comment-' + type ) ) {
			has_state = type === $comment.attr( 'data-comment-' + type );
		}//end else

		var args = {
			dataType: 'json',
			url: url,
			data: {
				action: 'bsocial_comments_comment_feedback',
				comment_id: $comment.data( 'comment-id' ),
				post_id: this.post_id,
				direction: has_state ? type_inverse : type,
				user: {}
			}
		};

		if ( 'flag' === type && 'flag' === args.data.direction ) {
			args.data.flag_type = $comment.find( '> .feedback-box .reason:checked' ).val();
			args.data.flag_text = $comment.find( '> .feedback-box .reason-description' ).val();
		}//end if

		return args;
	};

	bsocial_comments.filter_authenticated_request_args = function( filter, priority ) {
		if ( 'undefined' === typeof this.authenticated_request_filters[ priority ] ) {
			this.authenticated_request_filters[ priority ] = [];
		}//end if

		this.authenticated_request_filters[ priority ].push( filter );
	};

	bsocial_comments.authenticated_request = function( args ) {
		// this.logged_in_as comes from wp_localize_script
		if ( this.logged_in_as ) {
			args.data.user = {
				user_id: parseInt( this.logged_in_as, 10 )
			};
		}//end else

		for ( var priority in this.authenticated_request_filters ) {
			for ( var i in this.authenticated_request_filters[ priority ] ) {
				args = this.authenticated_request_filters[ priority ][ i ]( args );
			}//end for
		}//end for

		$.ajax( args );
	};

	bsocial_comments.event.select_reason = function( e ) {
		e.preventDefault();
		var $el = $( this );

		var $flag_button = $el.closest( 'form' ).find( '.comment-flag-confirm' );

		if ( $el.is( ':radio' ) ) {
			if ( 'other' === $el.data( 'reason-type' ) && 0 >= $el.closest( 'form' ).find( '.reason-description' ).val().length ) {
				$flag_button.prop( { 'disabled': true } );
			}else {
				$flag_button.prop( { 'disabled': false } );
			}

			$el.closest( 'form' ).attr( 'data-selected-reason', $el.data( 'reason-type' ) );
		} else {
			//if they've typed in the reason textarea, let them pass
			if ( $.trim( $el.val() ).length ) {
				$flag_button.prop( { 'disabled': false } );
			} else {
				$flag_button.prop( { 'disabled': true } );
			}
		}
	};

	bsocial_comments.event.fave_comment = function( e ) {
		e.preventDefault();

		bsocial_comments.fave_comment( $( this ) );
	};

	bsocial_comments.event.flag_comment = function( e ) {
		e.preventDefault();

		bsocial_comments.flag_comment( $( this ) );
	};

	bsocial_comments.event.confirm_flag_comment = function( e ) {
		e.preventDefault();

		bsocial_comments.confirm_flag_comment( $( this ) );
	};

	bsocial_comments.event.cancel_confirm_flag_comment = function( e ) {
		e.preventDefault();

		var $el = $( this );
		var $form = $( this ).closest( '.feedback-box .flag-logged-in' );

		bsocial_comments.form_reset( $form );

		$el.closest( '.comment' ).removeClass( 'faving flagging' );
		$el.closest( '.feedback-box' ).slideUp( 'fast' );
	};

	$( function() {
		bsocial_comments.init();
	});
})( jQuery );
;
jQuery(function(a){a(document).on("click",".comment-sharing-icons",function(b){b.preventDefault();var c=a(this).closest(".comment"),d=c.find(".social:first");d.is(":visible")?d.slideUp("fast"):d.slideDown("fast")})});;
var go_local_bsocial_cta={just_subscribed:!1,$form:null,identity_check_sent:!1,identity_received:!1,form_hidden:!1};!function(a){"use strict";go_local_bsocial_cta.init=function(){amplify.subscribe("go-local-bsocial-cta-loaded",this.identity_check),amplify.subscribe("go-auth-success",this.auth_success),amplify.subscribe("go-inject-finished",this.inject_finished),a(document).on("submit",".go-local-bsocial-newsletter-form",this.submit)},go_local_bsocial_cta.identity_check=function(){go_local_bsocial_cta.identity_check_sent||(go_local_bsocial_cta.$subscribe=a(".go-local-bsocial-newsletter-form").closest(".cta-section-newsletter"),a(document).GoIdentity("check_identity"),go_local_bsocial_cta.identity_check_sent=!0)},go_local_bsocial_cta.submit=function(b){var c=a(this);if(!c.data("identity-server"))return!0;if(b.preventDefault(),a.trim(c.find('input[name="email"]').val())){var d=c.closest(".cta-section-newsletter").parent();c.closest(".cta-section-newsletter").block({message:"Subscribing...",css:{border:"none",padding:"15px",backgroundColor:"#000","-webkit-border-radius":"4px","-moz-border-radius":"4px",opacity:d.data("blockui-opacity")||.5,color:"#fff",top:"20px",width:"70%"},overlayCSS:{background:d.data("blockui-overlay-bg")||"#fff"}});var e=c.data("identity-server")+"/wp-admin/admin-ajax.php?action=go_newsletter_subscriptions_subscribe";e+="&callback=?",a.ajax({dataType:"json",url:e,data:c.serialize(),success:function(b){var d=c.closest(".cta-section-newsletter"),e=d.find(".subscribed");e.html("undefined"!=typeof b.message.text?"<p>"+b.message.text+"</p>":"<p>Oops! We're having troubles subscribing you from here. Head on over to our <a href=\""+c.data("identity-server")+'/newsletters/">newsletter form</a> to subscribe!'),e.show(),"success"===b.message.type&&c.hide(),"undefined"!=typeof b.message.id&&a(document).trigger("new-subscribe-success"===b.message.id||"subscribe-success"===b.message.id||"update-success"===b.message.id?"go-newsletter-subscription-subscribe-success":"unsubscribe-success"===b.message.id?"go-newsletter-subscription-unsubscribe-success":"go-newsletter-subscription-subscribe-fail"),d.unblock()}})}},go_local_bsocial_cta.inject_finished=function(){if(!go_local_bsocial_cta.form_hidden)if(document.cookie.indexOf("go_local_bsocial_page_view")>=0)0!==a(".go-inject-content").next().length&&a(".cta-section-newsletter.injected-form").show();else{var b=new Date;b.setTime(b.getTime()+2592e6);var c=b.toGMTString();document.cookie="go_local_bsocial_page_view=yes; path=/; expires="+c}},go_local_bsocial_cta.auth_success=function(b){if(!go_local_bsocial_cta.identity_received){go_local_bsocial_cta.identity_received=!0;var c=b.go_newsletter_subscriptions||{},d=0,e=a(".go-local-bsocial-newsletter-form");""!==b.user_email&&e.find('input[name="email"]').attr("value",b.user_email);for(var f in c)"email"!==f&&"messageType"!==f&&d++;d&&"undefined"!=typeof go_local_bsocial_cta.$subscribe?(go_local_bsocial_cta.maybe_just_subscribed&&(e.closest(".cta-section-newsletter").unblock(),go_local_bsocial_cta.$subscribe.find(".subscribed").html("<p>Thanks for subscribing! You will receive your first newsletter as soon as it's published.</p>")),e.each(function(){var b=a(this),d=b.find('input[ name^="lists" ]'),e=!1;d.each(function(){var b=a(this).val();if("undefined"!=typeof b){var d=a(this).attr("name").replace(/^lists\[(.*)\]\[\]/,"$1");return c.hasOwnProperty(d)&&c[d].hasOwnProperty(b)?void(e=!0):void 0}}),e&&(go_local_bsocial_cta.form_hidden=!0,b.hide(),b.parent().hasClass("injected-form")&&b.parent().hide(),b.addClass("already-subscribed"),b.closest(".cta-section-newsletter").find(".subscribed").show())})):go_local_bsocial_cta.maybe_just_subscribed&&(window.location=e.attr("action")),a(document).trigger("go-local-bsocial-auth-processed")}}}(jQuery),go_local_bsocial_cta.init();;
gigaom.gravatar={},function(a){"use strict";gigaom.gravatar.init=function(){this.init_waypoints(),a(document).on("wijax-loaded",function(){gigaom.gravatar.init_waypoints()})},gigaom.gravatar.init_waypoints=function(){a(".avatar-placeholder:not(.avatar-loaded)").waypoint({offset:"110%",triggerOnce:!0,handler:function(){var b=a(this).attr("href"),c=a('<img class="avatar avatar-55 photo avatar-default" height="55" width="55">');c.attr("src",b),c.closest("a").addClass("avatar-loaded"),a(this).replaceWith(c)}})},a(function(){gigaom.gravatar.init()})}(jQuery);;
!function(a){function b(b,e){var f,g,h,i=this,j=b.add(i),k=a(window),l=a.tools.expose&&(e.mask||e.expose),m=Math.random().toString().slice(10);l&&("string"==typeof l&&(l={color:l}),l.closeOnClick=l.closeOnEsc=!1);var n=e.target||b.attr("rel");if(g=n?a(n):null||b,!g.length)throw"Could not find Overlay: "+n;b&&-1==b.index(g)&&b.click(function(a){return i.load(a),a.preventDefault()}),a.extend(i,{load:function(b){if(i.isOpened())return i;var f=d[e.effect];if(!f)throw'Overlay: cannot find effect : "'+e.effect+'"';if(e.oneInstance&&a.each(c,function(){this.close(b)}),b=b||a.Event(),b.type="onBeforeLoad",j.trigger(b),b.isDefaultPrevented())return i;h=!0,l&&a(g).expose(l);var n=e.top,o=e.left,p=g.outerWidth({margin:!0}),q=g.outerHeight({margin:!0});return"string"==typeof n&&(n="center"==n?Math.max((k.height()-q)/2,0):parseInt(n,10)/100*k.height()),"center"==o&&(o=Math.max((k.width()-p)/2,0)),f[0].call(i,{top:n,left:o},function(){h&&(b.type="onLoad",j.trigger(b))}),l&&e.closeOnClick&&a.mask.getMask().one("click",i.close),e.closeOnClick&&a(document).bind("click."+m,function(b){a(b.target).parents(g).length||i.close(b)}),e.closeOnEsc&&a(document).bind("keydown."+m,function(a){27==a.keyCode&&i.close(a)}),i},close:function(b){return i.isOpened()?(b=b||a.Event(),b.type="onBeforeClose",j.trigger(b),b.isDefaultPrevented()?void 0:(h=!1,d[e.effect][1].call(i,function(){b.type="onClose",j.trigger(b)}),a(document).unbind("click."+m).unbind("keydown."+m),l&&a.mask.close(),i)):i},getOverlay:function(){return g},getTrigger:function(){return b},getClosers:function(){return f},isOpened:function(){return h},getConf:function(){return e}}),a.each("onBeforeLoad,onStart,onLoad,onBeforeClose,onClose".split(","),function(b,c){a.isFunction(e[c])&&a(i).bind(c,e[c]),i[c]=function(b){return b&&a(i).bind(c,b),i}}),f=g.find(e.close||".close"),!f.length&&!e.close&&(f=a('<a class="close"></a>'),g.prepend(f)),f.click(function(a){i.close(a)}),e.load&&i.load()}a.tools=a.tools||{version:"v1.2.5"},a.tools.overlay={addEffect:function(a,b,c){d[a]=[b,c]},conf:{close:null,closeOnClick:!0,closeOnEsc:!0,closeSpeed:"fast",effect:"default",fixed:!a.browser.msie||a.browser.version>6,left:"center",load:!1,mask:null,oneInstance:!0,speed:"normal",target:null,top:"10%"}};var c=[],d={};a.tools.overlay.addEffect("default",function(b,c){var d=this.getConf(),e=a(window);d.fixed||(b.top+=e.scrollTop(),b.left+=e.scrollLeft()),b.position=d.fixed?"fixed":"absolute",this.getOverlay().css(b).fadeIn(d.speed,c)},function(a){this.getOverlay().fadeOut(this.getConf().closeSpeed,a)}),a.fn.overlay=function(d){var e=this.data("overlay");return e?e:(a.isFunction(d)&&(d={onBeforeLoad:d}),d=a.extend(!0,{},a.tools.overlay.conf,d),this.each(function(){e=new b(a(this),d),c.push(e),a(this).data("overlay",e)}),d.api?e:this)}}(jQuery),function(a){function b(){if(a.browser.msie){var b=a(document).height(),c=a(window).height();return[window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,20>b-c?c:b]}return[a(document).width(),a(document).height()]}function c(b){return b?b.call(a.mask):void 0}a.tools=a.tools||{version:"v1.2.5"};var d;d=a.tools.expose={conf:{maskId:"exposeMask",loadSpeed:"slow",closeSpeed:"fast",closeOnClick:!0,closeOnEsc:!0,zIndex:9998,opacity:.8,startOpacity:0,color:"#fff",onLoad:null,onClose:null}};var e,f,g,h,i;a.mask={load:function(j,k){if(g)return this;"string"==typeof j&&(j={color:j}),j=j||h,h=j=a.extend(a.extend({},d.conf),j),e=a("#"+j.maskId),e.length||(e=a("<div/>").attr("id",j.maskId),a("body").append(e));var l=b();return e.css({position:"absolute",top:0,left:0,width:l[0],height:l[1],display:"none",opacity:j.startOpacity,zIndex:j.zIndex}),j.color&&e.css("backgroundColor",j.color),c(j.onBeforeLoad)===!1?this:(j.closeOnEsc&&a(document).bind("keydown.mask",function(b){27==b.keyCode&&a.mask.close(b)}),j.closeOnClick&&e.bind("click.mask",function(b){a.mask.close(b)}),a(window).bind("resize.mask",function(){a.mask.fit()}),k&&k.length&&(i=k.eq(0).css("zIndex"),a.each(k,function(){var b=a(this);/relative|absolute|fixed/i.test(b.css("position"))||b.css("position","relative")}),f=k.css({zIndex:Math.max(j.zIndex+1,"auto"==i?0:i)})),e.css({display:"block"}).fadeTo(j.loadSpeed,j.opacity,function(){a.mask.fit(),c(j.onLoad),g="full"}),g=!0,this)},close:function(){if(g){if(c(h.onBeforeClose)===!1)return this;e.fadeOut(h.closeSpeed,function(){c(h.onClose),f&&f.css({zIndex:i}),g=!1}),a(document).unbind("keydown.mask"),e.unbind("click.mask"),a(window).unbind("resize.mask")}return this},fit:function(){if(g){var a=b();e.css({width:a[0],height:a[1]})}},getMask:function(){return e},isLoaded:function(a){return a?"full"==g:g},getConf:function(){return h},getExposed:function(){return f}},a.fn.mask=function(b){return a.mask.load(b),this},a.fn.expose=function(b){return a.mask.load(b,this),this}}(jQuery),function(a){function b(b,c,d){var e=d.relative?b.position().top:b.offset().top,f=d.relative?b.position().left:b.offset().left,g=d.position[0];e-=c.outerHeight()-d.offset[0],f+=b.outerWidth()+d.offset[1],/iPad/i.test(navigator.userAgent)&&(e-=a(window).scrollTop());var h=c.outerHeight()+b.outerHeight();"center"==g&&(e+=h/2),"bottom"==g&&(e+=h),g=d.position[1];var i=c.outerWidth()+b.outerWidth();return"center"==g&&(f-=i/2),"left"==g&&(f-=i),{top:e,left:f}}function c(c,e){var f,g,h=this,i=c.add(h),j=0,k=0,l=c.attr("title"),m=c.attr("data-tooltip"),n=d[e.effect],o=c.is(":input"),p=o&&c.is(":checkbox, :radio, select, :button, :submit"),q=c.attr("type"),r=e.events[q]||e.events[o?p?"widget":"input":"def"];if(!n)throw'Nonexistent effect "'+e.effect+'"';if(r=r.split(/,\s*/),2!=r.length)throw"Tooltip: bad events configuration for "+q;c.bind(r[0],function(a){clearTimeout(j),e.predelay?k=setTimeout(function(){h.show(a)},e.predelay):h.show(a)}).bind(r[1],function(a){clearTimeout(k),e.delay?j=setTimeout(function(){h.hide(a)},e.delay):h.hide(a)}),l&&e.cancelDefault&&(c.removeAttr("title"),c.data("title",l)),a.extend(h,{show:function(d){if(!f&&(m?f=a(m):e.tip?f=a(e.tip).eq(0):l?f=a(e.layout).addClass(e.tipClass).appendTo(document.body).hide().append(l):(f=c.next(),f.length||(f=c.parent().next())),!f.length))throw"Cannot find tooltip for "+c;if(h.isShown())return h;f.stop(!0,!0);var o=b(c,f,e);if(e.tip&&f.html(c.data("title")),d=d||a.Event(),d.type="onBeforeShow",i.trigger(d,[o]),d.isDefaultPrevented())return h;o=b(c,f,e),f.css({position:"absolute",top:o.top,left:o.left}),g=!0,n[0].call(h,function(){d.type="onShow",g="full",i.trigger(d)});var p=e.events.tooltip.split(/,\s*/);return f.data("__set")||(f.bind(p[0],function(){clearTimeout(j),clearTimeout(k)}),p[1]&&!c.is("input:not(:checkbox, :radio), textarea")&&f.bind(p[1],function(a){a.relatedTarget!=c[0]&&c.trigger(r[1].split(" ")[0])}),f.data("__set",!0)),h},hide:function(b){return f&&h.isShown()?(b=b||a.Event(),b.type="onBeforeHide",i.trigger(b),b.isDefaultPrevented()?void 0:(g=!1,d[e.effect][1].call(h,function(){b.type="onHide",i.trigger(b)}),h)):h},isShown:function(a){return a?"full"==g:g},getConf:function(){return e},getTip:function(){return f},getTrigger:function(){return c}}),a.each("onHide,onBeforeShow,onShow,onBeforeHide".split(","),function(b,c){a.isFunction(e[c])&&a(h).bind(c,e[c]),h[c]=function(b){return b&&a(h).bind(c,b),h}})}a.tools=a.tools||{version:"v1.2.5"},a.tools.tooltip={conf:{effect:"toggle",fadeOutSpeed:"fast",predelay:0,delay:30,opacity:1,tip:0,position:["top","center"],offset:[0,0],relative:!1,cancelDefault:!0,events:{def:"mouseenter,mouseleave",input:"focus,blur",widget:"focus mouseenter,blur mouseleave",tooltip:"mouseenter,mouseleave"},layout:"<div/>",tipClass:"tooltip"},addEffect:function(a,b,c){d[a]=[b,c]}};var d={toggle:[function(a){var b=this.getConf(),c=this.getTip(),d=b.opacity;1>d&&c.css({opacity:d}),c.show(),a.call()},function(a){this.getTip().hide(),a.call()}],fade:[function(a){var b=this.getConf();this.getTip().fadeTo(b.fadeInSpeed,b.opacity,a)},function(a){this.getTip().fadeOut(this.getConf().fadeOutSpeed,a)}]};a.fn.tooltip=function(b){var d=this.data("tooltip");return d?d:(b=a.extend(!0,{},a.tools.tooltip.conf,b),"string"==typeof b.position&&(b.position=b.position.split(/,?\s/)),this.each(function(){d=new c(a(this),b),a(this).data("tooltip",d)}),b.api?d:this)}}(jQuery);;
if("undefined"==typeof go_socialcomments)var go_socialcomments={};go_socialcomments.event={},function(a){"use strict";go_socialcomments.init=function(){this.loaded_comments=!1,this.$comment_form=a("#commentform"),this.$wijax_container=a(document.getElementById("comments-list")).find(".wijax-container"),this.total_comments=parseInt(this.$wijax_container.data("total-comments")||0,10),this.wijax_page_varnames={},this.$wijax_page_varnames=a(".wijax-page-varnames"),this.$wijax_page_varnames.length&&(this.wijax_page_varnames=JSON.parse(this.$wijax_page_varnames.html())),a(document).on("wijax-loaded",function(){if(go_socialcomments.loaded_comments)return void a(document).trigger("go-socialcomments-batch-load");if(window.location.hash){var b=window.location.hash,c=b.replace("#","");a(document.getElementById(c)).length||(b="#comment-nav-below");var d=location.href;location.href=b,history.replaceState(null,null,d)}a(document.getElementById("comment-nav-below")).removeClass("hide"),go_socialcomments.loaded_comments=!0,a(document).trigger("go-socialcomments-initial-load")}),a(document).on("click","#comments-list nav button",this.lazyload_comments),0!==go_socialcomments.$comment_form.length&&(a("body").hasClass("logged-in")&&a.removeCookie("go-socialcomments-identity",{path:"/"}),-1<window.location.search.indexOf("go_commented")&&a.removeCookie("go-socialcomments-comment"),"undefined"!=typeof a.cookie("go-socialcomments-identity")&&(go_socialcomments.user=JSON.parse(a.cookie("go-socialcomments-identity"))),a(document).on("click",".credential-social li a:not(.goauth-wpdotcom)",go_socialcomments.social_popups),a(document).on("click",".featured-comment-reply-link",go_socialcomments.click_reply),a(document).on("go-auth-success",function(a,b){go_socialcomments.setup_identity(b),go_socialcomments.prep_form()}),this.prep_form(),a("#go-local-bsocial-key-question").prev(".widget-go-inject").before(a("#go-local-bsocial-key-question")),this.handle_logout(),this.watch_textarea(),this.watch_for_guest(),this.watch_guest_fields(),this.watch_for_submit(),this.twiddle_flags(),a(document).on("click",".cancel-reply",this.event.reply_cancel),a(document).on("click",".comment-reply-link",this.event.reply))},go_socialcomments.lazyload_comments=function(b){b.preventDefault();var c=a(this);if(!c.prop("disabled")){c.prop("disabled",!0);var d={source:go_socialcomments.$wijax_container.data("wijax-source"),varname:go_socialcomments.$wijax_container.data("wijax-varname"),page:go_socialcomments.$wijax_container.data("current-page")};a(this).after(go_socialcomments.throbber),a.ajax({url:d.source+"?cpage="+(d.page+1),dataType:"script",cache:!0,success:function(){var b=go_socialcomments.$wijax_container.find(".comments-list"),e=a(window[go_socialcomments.wijax_page_varnames[d.page+1]]);b.append(e.children("li")),a(".wijax-load").remove(),d.page+=1,go_socialcomments.$wijax_container.data("current-page",d.page);var f=a("#comment-list-inner .comment").length;f>=go_socialcomments.total_comments?c.remove():c.prop("disabled",!1),gigaom.gravatar.init_waypoints()}})}},go_socialcomments.twiddle_flags=function(){a(".comment-flags .flag-details").each(function(){var b=a(this),c=b.find("p:first"),d=/^([\w ]+\:)/,e=d.exec(c.html());return e?void c.html(c.html().replace(/^([\w ]+\:)/,"<span>$1</span>")):void c.html("<span>"+c.html()+"</span>")})},go_socialcomments.handle_logout=function(){a(document).on("click","#social-identity-logout a, .logout a",function(b){if(a.removeCookie("go-socialcomments-identity",{path:"/"}),"wordpress"!==go_socialcomments.user.service){b.preventDefault();var c=a("<iframe />");c.attr("id","goauth-logout").hide().appendTo("body"),c.attr("sandbox","allow-same-origin"),c.attr("src",a(this).attr("href")),a(this).replaceWith("<span>Please wait...</span>"),a("#goauth-logout").load(function(){window.location.reload()})}})},go_socialcomments.check_identity=function(a){""!==go_remote_identity.logged_in_as&&go_socialcomments.setup_identity(a)},go_socialcomments.setup_identity=function(b){a("body").hasClass("logged-in")||(go_socialcomments.user.service=go_remote_identity.auth_type,go_socialcomments.user.full_name=""!==go_remote_identity.user.display_name?go_remote_identity.user.display_name:go_remote_identity.logged_in_as,go_socialcomments.user.email=b.user_email,go_socialcomments.user.avatar=b.avatar,go_socialcomments.user.logout=social_identity_server+"/wp-admin/admin-ajax.php?action=logout&redirect_to="+escape(go_theme.wp_url+"/wp-admin/admin-ajax.php"),"twitter"===go_socialcomments.user.service&&(go_socialcomments.user.twitter_id=b.go_remote_identity.twitter,go_socialcomments.user.service_email=go_socialcomments.user.twitter_id+"@twitter.id"),"linkedin"===go_socialcomments.user.service&&(go_socialcomments.user.linkedin_id=b.go_remote_identity.linkedin,go_socialcomments.user.service_email=go_socialcomments.user.linkedin_id+"@linkedin.id"),"facebook"===go_socialcomments.user.service&&(go_socialcomments.user.facebook_id=b.go_remote_identity.facebook,go_socialcomments.user.service_email=go_socialcomments.user.facebook_id+"@facebook.id"),"undefined"!=typeof go_socialcomments.user.service_email&&(go_socialcomments.user.email=go_socialcomments.user.service_email),a.cookie("go-socialcomments-identity",JSON.stringify(go_socialcomments.user),{expires:60,path:"/"}))},go_socialcomments.social_popups=function(b){b.preventDefault();var c=null,d=a(this),e=d.attr("href"),f=480;d.hasClass("goauth-facebook")&&(f=880),c=window.open(e,"","resizable=1,width="+f+",height=480");var g=setInterval(function(){c&&c.closed&&(window.focus(),clearInterval(g),a(document).GoIdentity("check_identity","go_socialcomments.check_identity",!0))},1e3)},go_socialcomments.click_reply=function(b){b.preventDefault();var c=a(this).closest(".li-comment").data("comment-id");a("#div-comment-"+c+" .comment-reply-link").click(),a("html, body").animate({scrollTop:a(".comment-reply-form").offset().top})},go_socialcomments.watch_textarea=function(){var b=a("#commentform-elements");a("#commentform textarea").keyup(function(){var c=go_socialcomments.$comment_form.closest(".comment-reply-form").length;""!==a(this).val().trim()||c?""===a(this).val().trim()?a("#comment-submit").prop("disabled",!0):(go_socialcomments.$comment_form.addClass("active"),!1===b.is(":visible")&&b.slideDown("fast"),go_socialcomments.check_comment_fields()&&a("#comment-submit").prop("disabled",!1)):(go_socialcomments.$comment_form.removeClass("active"),b.hide())}),a("#commentform textarea").change(function(){a.removeCookie("go-socialcomments-comment"),a.cookie("go-socialcomments-comment",a(this).val(),{expires:60})})},go_socialcomments.watch_for_guest=function(){a("#credential-wp a").click(function(b){b.preventDefault(),a("#credential-fields").slideToggle("fast")})},go_socialcomments.watch_for_submit=function(b){a("#commentform").submit(function(){go_socialcomments.check_comment_fields()||b.preventDefault()})},go_socialcomments.watch_guest_fields=function(){a("#commentform input").keyup(function(){go_socialcomments.check_comment_fields()?a("#comment-submit").prop("disabled",!1):a("#comment-submit").prop("disabled",!0)})},go_socialcomments.check_comment_fields=function(){return""===a("#commentform #author").attr("value").trim()?!1:""===a("#commentform #email").attr("value").trim()?!1:""===a("#commentform #comment").attr("value").trim()?!1:!0},go_socialcomments.is_logged_in=function(){return""!==go_socialcomments.user.service?!0:!1},go_socialcomments.prep_form=function(){a("#commentform-elements").show(),"undefined"!=typeof a.cookie("go-socialcomments-comment")&&(a("#commentform textarea").val(a.cookie("go-socialcomments-comment")),a("#commentform textarea").keyup());var b=go_socialcomments.$comment_form.closest(".comment-reply-form").length;""!==go_socialcomments.$comment_form.find("textarea").val().trim()||b||a("#commentform-elements, #credential-fields").hide(),go_socialcomments.is_logged_in()?(a("body").addClass("logged-in-socialcomments"),"undefined"!=typeof go_remote_identity.auth_type&&go_remote_identity.auth_type&&a("body").addClass("logged-in-social"),a("#comment-submit").prop("disabled",!1),go_socialcomments.set_auth_values(),b&&(go_socialcomments.check_comment_fields()||a("#comment-submit").prop("disabled",!0),a("#commentform textarea").focus())):a("#comment-submit").prop("disabled",!0),go_socialcomments.is_logged_in&&a("#comment-textarea").after('<input type="hidden" name="goauth" id="goauth" value="1" />')},go_socialcomments.set_auth_values=function(){var b=go_socialcomments.auth_types[go_socialcomments.user.service];"research"===go_socialcomments.property&&"wordpress"===go_socialcomments.user.service&&(b="Gigaom"),a("#shared-auth-reply .social-identity-pic img, #shared-auth img").attr("src",go_socialcomments.user.avatar),a("#social-identity").text(go_socialcomments.user.full_name+","),a("#shared-auth-reply .social-identity").text(go_socialcomments.user.full_name),a("#social-identity-service").text(b),"wordpress"!==go_socialcomments.user.service&&a("#social-identity-logout a").attr("href",go_socialcomments.user.logout),a("#author").val(go_socialcomments.user.full_name),a("#email").val(go_socialcomments.user.email)},go_socialcomments.remove_empty_reply_form_containers=function(){var b=a(".comment-reply-form");b.each(function(){var b=a(this),c=b.closest(".children");b.is(":empty")&&b.remove(),c.is(":empty")&&c.remove()})},go_socialcomments.event.reply=function(b){b.preventDefault();var c=a(this),d=c.closest(".comment").data("comment-id"),e=a("#div-comment-"+d+" .comment-author").text(),f=go_socialcomments.$comment_form.find("#comment_parent"),g=c.closest(".comment").children(".children");"undefined"==typeof go_socialcomments.event.form_position&&(go_socialcomments.event.form_position=go_socialcomments.$comment_form.closest("#comment-form-top, #comment-form-bottom")),a("#div-comment-"+d+" .social-identity-replyee").text(e),a(".comment-reply-form").remove(),g.length||(c.closest(".comment").append('<ol class="children" />'),g=c.closest(".comment").children(".children")),g.prepend('<li class="comment-reply-form" />'),go_socialcomments.$comment_form.find(".social-identity-replyee").text(e),go_socialcomments.$comment_form.detach().appendTo(g.find(".comment-reply-form")),f.val(d),gigaom.single.pause_comment_waypoints=!0,a("#commentform").addClass("active div-comment"),go_socialcomments.remove_empty_reply_form_containers(),go_socialcomments.prep_form()},go_socialcomments.event.reply_cancel=function(b){b.preventDefault();var c=a(this).closest(".comment-reply-form");c.children().prependTo(go_socialcomments.event.form_position),delete go_socialcomments.event.form_position,gigaom.single.pause_comment_waypoints=!1,go_socialcomments.$comment_form.removeClass("active div-comment"),go_socialcomments.remove_empty_reply_form_containers(),go_socialcomments.prep_form()},a(function(){go_socialcomments.init()})}(jQuery);;
var addComment={moveForm:function(a,b,c,d){var e,f=this,g=f.I(a),h=f.I(c),i=f.I("cancel-comment-reply-link"),j=f.I("comment_parent"),k=f.I("comment_post_ID");if(g&&h&&i&&j){f.respondId=c,d=d||!1,f.I("wp-temp-form-div")||(e=document.createElement("div"),e.id="wp-temp-form-div",e.style.display="none",h.parentNode.insertBefore(e,h)),g.parentNode.insertBefore(h,g.nextSibling),k&&d&&(k.value=d),j.value=b,i.style.display="",i.onclick=function(){var a=addComment,b=a.I("wp-temp-form-div"),c=a.I(a.respondId);if(b&&c)return a.I("comment_parent").value="0",b.parentNode.insertBefore(c,b),b.parentNode.removeChild(b),this.style.display="none",this.onclick=null,!1};try{f.I("comment").focus()}catch(l){}return!1}},I:function(a){return document.getElementById(a)}};;
if("undefined"==typeof go_local_bsocial_comments)var go_local_bsocial_comments={};"undefined"==typeof go_local_bsocial_comments.event&&(go_local_bsocial_comments.event={}),function(a){"use strict";go_local_bsocial_comments.init=function(){a("#comment_post_ID").length&&(this.$flagging_comment=a(),bsocial_comments.authenticated=!1,this.deferred_action={},this.deferred_action_type=null,a(document).on("bsocial-comments-defer-action-for-auth",this.event.request_auth),a(document).on("go-auth-success",this.event.auth_success),a(document).on("bsocial-comments-flag-not-authenticated",function(a,b){go_local_bsocial_comments.$flagging_comment=b}),bsocial_comments.filter_authenticated_request_args(this.filter_authenticated_request_args,10))},go_local_bsocial_comments.filter_authenticated_request_args=function(a){return"undefined"!=typeof a.data.user.user_id&&parseInt(a.data.user.user_id,10)||(a.data.user=go_local_bsocial_comments.fill_user_data(a.data.user)),a},go_local_bsocial_comments.fill_user_data=function(a){return a.user_id?a:"undefined"==typeof go_socialcomments.user.service?a:"undefined"==typeof go_remote_identity.user.display_name?a:(a.comment_author=go_remote_identity.user.display_name,a.comment_author_email="twitter"===go_socialcomments.user.service?go_socialcomments.user.twitter_id+"@twitter.id":"linkedin"===go_socialcomments.user.service?go_socialcomments.user.linkedin_id+"@linkedin.id":go_socialcomments.user.email,a)},go_local_bsocial_comments.auth_on_comment=function(b){var c=a(".credentials.credential-popup-logins:first").clone(),d=a('<div class="feedback-box credential-social feedback-credentials" />');d.append(c),d.hide(),b.after(d),d.slideDown("fast")},go_local_bsocial_comments.defer_action_for_auth=function(a,b){this.deferred_action=a,this.deferred_action_type=b},go_local_bsocial_comments.run_delayed_action=function(){var b=this.deferred_action.data.comment_id,c=a('.comment[data-comment-id="'+b+'"]'),d=this.deferred_action.data.check_if;return"true"===c.data("comment-"+d)?void(this.deferred_action={}):(this.deferred_action.data.user=this.fill_user_data({user_id:parseInt(bsocial_comments.logged_in_as,10)}),"flag"===this.deferred_action.data.direction&&"flag"===c.attr("data-comment-flag")?(this.$flagging_comment.find(".feedback-box:first").attr("data-type","flag-submitted").slideUp("fast"),void(this.deferred_action={})):"flag"===this.deferred_action.data.direction?(this.$flagging_comment.find(".feedback-box:first").attr("data-type","flag-logged-in").slideDown("fast"),void(this.deferred_action={})):(this.$flagging_comment=a(),this.deferred_action.success=function(){var b=go_local_bsocial_comments.deferred_action.data.comment_id,c=a('.comment[data-comment-id="'+b+'"]');c.removeClass("faving");var d=c.find(".feedback-box:first");d.find(".fave-logged-out").is(":visible")&&("fave"!==c.first().attr("data-comment-fave")&&bsocial_comments.adjust_fave_count(c,"increment"),bsocial_comments.set_fave_state(b,"fave"),d.slideUp("fast"))},void a.ajax(this.deferred_action)))},go_local_bsocial_comments.event.request_auth=function(a,b,c){go_local_bsocial_comments.defer_action_for_auth(b,c)},go_local_bsocial_comments.event.auth_success=function(b,c){bsocial_comments.authenticated=!0,bsocial_comments.request_comment_states(c),"undefined"!=typeof go_local_bsocial_comments.deferred_action.url&&a(document).on("bsocial-comments-parsed-comment-states",function(){go_local_bsocial_comments.run_delayed_action()})},a(function(){go_local_bsocial_comments.init()})}(jQuery);;
!function(a){"use strict";go_ads.init=function(){this.$ads=a(".go-ad"),googletag.cmd.push(function(){for(var a in go_ads.dfp_targeting)googletag.pubads().setTargeting(go_ads.dfp_targeting[a][0],go_ads.dfp_targeting[a][1]),go_ads.debug&&console.log("go-ads setTargeting",go_ads.dfp_targeting[a][0],go_ads.dfp_targeting[a][1]);googletag.pubads().enableSingleRequest(),googletag.enableServices(),go_ads.debug&&console.log("go-ads enabling services")}),go_ads.$ads.each(function(){go_ads.define_slot(a(this),!0)})},go_ads.find_and_define=function(b,c){b.find(".go-ad").each(function(){go_ads.define_slot(a(this),c)})},go_ads.define_slot=function(a,b){var c=a.find(".ad-container"),d=c.data("ad-slot")||"",e=c.attr("id");if(!c.find("div").length&&d&&a.is(":visible")){var f=c.data("ad-dfp"),g=[c.data("ad-width"),c.data("ad-height")];a.is(":visible")&&googletag.cmd.push(function(){googletag.defineSlot(f,g,e).addService(googletag.pubads()),go_ads.defined_slots.push(d),go_ads.debug&&console.log("go-ads defining slot: "+d,f,g,e),b&&googletag.display(e)})}},amplify.subscribe("go-init",function(){go_ads.init()})}(jQuery);;
(function() {
	var ajaxurl = window.ajaxurl || '/wp-admin/admin-ajax.php',
		data = window.wpcomVipAnalytics,
		dataQs, percent;

	if ( typeof XMLHttpRequest === 'undefined' ) {
		return;
	}

	if ( ! data ) {
		return;
	}

	percent = ~~data.percentToTrack;
	if ( percent && percent < 100 && ( ~~( ( Math.random() * 100 ) + 1 ) > percent ) ) {
		return;
	}

	dataQs = 'action=wpcom_vip_analytics';

	for ( var key in data ) {
		if ( key === 'percentToTrack' ) {
			continue;
		}
		if ( data.hasOwnProperty( key ) ) {
			dataQs += '&' +
				encodeURIComponent( key ).replace(/%20/g, '+' ) + '=' +
				encodeURIComponent( data[key] ).replace(/%20/g, '+' );
		}
	}

	function sendInfo() {
		var xhr = new XMLHttpRequest();
		xhr.open( 'POST', ajaxurl, true );
		xhr.setRequestHeader( 'Content-type', 'application/x-www-form-urlencoded' );
		xhr.send( dataQs );
	}

	// Delay for some time after the document is ready to ping
	function docReady() {
		setTimeout( function() {
			sendInfo();
		}, 1500 );
	}

	if ( document.readyState === 'complete' ) {
		docReady.apply();
	}
	else if ( document.addEventListener ) {
		document.addEventListener( 'DOMContentLoaded', docReady, false );
	}
	else if ( document.attachEvent ) {
		document.attachEvent( 'onreadystatechange', docReady );
	}
})();
;
if("undefined"==typeof go_contentwidgets)var go_contentwidgets={layout_preferences:{},single_use_gap_per_pass:!1};!function(a){"use strict";go_contentwidgets.full_inject_complete=!1,go_contentwidgets.current=Date.now(),go_contentwidgets.blackout_selector="> *:not(p,blockquote:not(.twitter-tweet),h1,h2,h3,h4,h5,h6,ol,ul,script,address)",go_contentwidgets.log=function(){go_contentwidgets.current=Date.now(),go_contentwidgets.last=go_contentwidgets.current},go_contentwidgets.events=function(){a(document).on("wijax-loaded",function(b,c){var d=a(document.getElementById(c));d.closest("#hidden-sidebar").length>0&&go_contentwidgets.single_widget_inject(d)}),a(document).on("go-resize",function(b,c){if("full"===c.to)go_contentwidgets.unbookmark_ads(),!1===go_contentwidgets.full_inject_complete&&go_contentwidgets.auto_inject();else{var d=a(document.getElementById("ad-b-bookmark"));if(d.length)return;go_contentwidgets.inject_small()}})},go_contentwidgets.init=function(){this.loading=!0,this.start=Date.now(),this.last=this.start,this.log("begin init"),this.shortest_widget_height=1e4,this.tallest_widget_height=0,this.insert=[],this.inventory={blackouts:[],gaps:[]},this.$body=a(document.getElementById("body")),this.$content=this.$body.find(".post section.body.entry-content > div"),this.$first_element=this.$content.find(":first"),this.$images=this.$content.find("img"),this.$ad_b=a(document.getElementById("ad-b")),this.$ad_c=a(document.getElementById("ad-c")),this.$post=this.$content.closest(".post"),this.suppress_house_ctas=this.$post.hasClass("suppress-house-ctas"),this.suppress_ads=this.$post.hasClass("suppress-ads"),a(".alignleft").each(function(){var b=a(this),c=a();b.closest(".aligncenter").length||b.parents(".alignleft").length||(c=b.closest("picture").length?b.closest("picture"):b,c.wrap('<div class="go-contentwidgets-align-container go-contentwidgets-alignleft"/>'),b.css("height","auto"))}),a(".alignright").each(function(){var b=a(this),c=a();b.closest(".aligncenter").length||b.parents(".alignright").length||(c=b.closest("picture").length?b.closest("picture"):b,c.wrap('<div class="go-contentwidgets-align-container go-contentwidgets-alignright"/>'),b.css("height","auto"))}),this.collect_widgets(),a("body").outerWidth()>=960?this.auto_inject():this.inject_small(),this.$content.find(".layout-box-thing").remove(),this.$body.addClass("rendered"),go_contentwidgets.current=Date.now(),a(document).trigger("go-contentwidgets-complete"),this.loading=!1},go_contentwidgets.inject_small=function(){if(!this.suppress_ads){var b=a(".entry-content > .container > *:not(.layout-box-insert,.go-contentwidgets-spacer,.bookmarked-widget)"),c=this.$ad_b.closest(".widget-go-ads"),d=this.$ad_c.closest(".widget-go-ads");c.removeClass("small-inject"),d.removeClass("small-inject");var e=a('<span id="ad-b-bookmark"/>'),f=a('<span id="ad-c-bookmark"/>');c.before(e),d.before(f);var g=0;b.each(function(){var b=a(this);b.find(".go-contentwidgets-alignright,.go-contentwidgets-alignleft").length&&g++});var h=g;b.length>=3&&(h+=1,b.length<h&&h--),(b.eq(h).prev().find(".go-contentwidgets-aligright,.go-contentwidgets-alignleft").length||b.eq(h).prev().prev().find(".go-contentwidgets-aligright,.go-contentwidgets-alignleft").length)&&h++,h<b.length&&(b.eq(h).after(c),c.addClass("small-inject")),a(".post-page-tags > .sorted_tags").after(d),d.addClass("small-inject")}},go_contentwidgets.unbookmark_ads=function(){var b=a(document.getElementById("ad-b-bookmark")),c=a(document.getElementById("ad-c-bookmark"));b.length&&b.replaceWith(this.$ad_b.closest(".widget-go-ads")),c.length&&c.replaceWith(this.$ad_c.closest(".widget-go-ads"))},go_contentwidgets.collect_widgets=function(){go_contentwidgets.log("collecting widgets");var b=".widget_wijax";this.suppress_house_ctas&&(b+=",.go-thisorthat-widget"),this.suppress_ads&&a(".widget-go-ads").remove(),this.$widgets=a(document.getElementById("hidden-sidebar")).find("> div:not( "+b+" )"),this.$widgets.each(function(){var b=a(this);go_contentwidgets.add_widget(b)}),go_contentwidgets.log("finished collecting widgets")},go_contentwidgets.add_widget=function(a){var b=a.attr("id");a.addClass("layout-box-insert");var c={name:b,$el:a,height:parseInt(a.outerHeight(!0),10)+16,location:"right",preferbottom:!1};return c.height<this.shortest_widget_height&&(this.shortest_widget_height=c.height),c.height>this.tallest_widget_height&&(this.tallest_widget_height=c.height),"undefined"!=typeof this.layout_preferences[b]&&("undefined"!=typeof this.layout_preferences[b].direction&&"bottom"===this.layout_preferences[b].direction&&(c.preferbottom=!0),"undefined"!=typeof this.layout_preferences[b].location&&"any"!==this.layout_preferences[b].location&&(c.location=this.layout_preferences[b].location)),c.location&&a.addClass("layout-box-insert-".concat(c.location)),this.insert.push(c),c},go_contentwidgets.single_widget_inject=function(b){this.loading&&setTimeout(function(){go_contentwidgets.single_widget_inject(b)},10),this.loading=!0,this.reset(),this.identify_blackouts();var c=a(window).scrollTop()+a(window).height(),d=this.$content.offset().top,e=c-d,f={$el:this.$first_element,start:0,end:e,height:e},g=[f];for(var h in this.inventory.blackouts)this.inventory.blackouts[h].end>f.end&&(g.push(this.inventory.blackouts[h]),f.end>this.inventory.blackouts[h].start&&(f.end=this.inventory.blackouts[h].start,f.height=f.end));this.inventory.blackouts=g,this.identify_gaps();var i=this.add_widget(b);this.inject_item(i),this.loading=!1},go_contentwidgets.auto_inject=function(){this.$images.each(function(){var b=a(this),c=b.attr("style");if("undefined"!=typeof c&&c&&(c.match(/float/)&&(c=c.replace(/float\:[ \t]*(right|left);?/,"")),c.match(/clear/)&&(c=c.replace(/clear\:[ \t]*(right|left|both);?/,"")),b.attr("style",c)),b.attr("width")<b.closest(".entry-content").width()){var d=b.attr("height");"undefined"!=typeof d&&d&&b.css("height",b.attr("height").concat("px"))}else b.css("height","auto")});for(var b=0,c=go_contentwidgets.insert.length;c>b;b++)go_contentwidgets.calc(),go_contentwidgets.inject_item(go_contentwidgets.insert[b]);this.$images.css("height","");var d=go_contentwidgets.$content.find(".layout-box-insert");d.each(function(b){var c=a(this);if(0!==b){var d=go_contentwidgets.blackout_selector.replace("> ","");d=d.replace(/\)$/,',span:not([class^="embed-"]),a,.go-contentwidgets-spacer,.layout-box-thing)'),c.is(".layout-box-insert-left")&&(d=d.replace(",blockquote",""),d=d.replace(",ul",""),d=d.replace(",ol",""));var e=c.prevAll("*"),f=c.nextAll("*"),g=a(),h=a();if(e.each(function(){var b=a(this);b.is(d)?g=g.add(b):b.is("p,ul,ol,blockquote")&&(g=g.add(b.find(d)))}),f.each(function(){var b=a(this);b.is(d)?h=h.add(b):b.is("p,ul,ol,blockquote")&&(h=h.add(b.find(d)))}),g.length){g=a(g.get().reverse());var i,j=parseInt(c.outerHeight(!0),10),k=c.get(0).offsetTop-(g.get(0).offsetTop+parseInt(g.outerHeight(!0),10));i=h.length?h.get(0).offsetTop-(c.get(0).offsetTop+j):parseInt(go_contentwidgets.$content.outerHeight(!0),10)-(c.get(0).offsetTop+j),i>k&&go_contentwidgets.adjust_down(c,(k+i)/2-k)}}}),this.full_inject_complete=!0},go_contentwidgets.attributes=function(a){var b,c=a.css("margin-top");c=parseInt(c.replace("px",""),10);var d=a.closest("li");b=d.length?d.get(0).offsetTop:a.get(0).offsetTop,b-=c;var e=parseInt(a.outerHeight(!0),10),f=b+e,g={$el:a,start:b,end:f,height:e};return g},go_contentwidgets.overlay=function(b,c,d,e){var f=a('<div class="layout-box-thing" style="top:'+c+"px;height:"+d+'px;"></div>');return"gap"===e?b.before(f):"solo-gap"===e?b.append(f):b.after(f),f},go_contentwidgets.reset=function(){this.$content.find(".layout-box-thing, .go-contentwidgets-spacer").remove(),this.inventory={blackouts:[],gaps:[]}},go_contentwidgets.calc=function(){go_contentwidgets.log("begin calc and reset"),this.reset(),go_contentwidgets.log("end reset/begin identify blackouts"),this.identify_blackouts(),go_contentwidgets.log("end identify blackouts/begin identify gaps"),this.identify_gaps(),go_contentwidgets.log("end identify gaps and calc")},go_contentwidgets.identify_blackouts=function(){go_contentwidgets.log("before find :visible"),this.$content.find(this.blackout_selector).filter(":visible").each(function(){var b=a(this),c=go_contentwidgets.attributes(b);go_contentwidgets.inventory.blackouts.push(c)}),go_contentwidgets.log("after find :visible / before find children"),this.$content.find("> p *, > ol *, > ul *").filter("img,iframe,.layout-box-insert").each(function(){var b=a(this),c=go_contentwidgets.attributes(b);c.$el=b.closest("p,li"),go_contentwidgets.inventory.blackouts.push(c)}),this.inventory.blackouts.sort(this.sort_by_start),go_contentwidgets.log("after find children / before blackout overlay generation")},go_contentwidgets.sort_by_start=function(a,b){var c=a.start,d=b.start;return d>c?-1:c>d?1:0},go_contentwidgets.adjust_down=function(b,c){var d="layout-box-insert-right";c=27*Math.round(c/27),b.hasClass(d)||(d="layout-box-insert-left"),b.before(a('<div class="go-contentwidgets-spacer '+d+'" style="height:'+c+'px"/>'))},go_contentwidgets.identify_gaps=function(){var a,b,c,d,e,f=0;if(0===this.inventory.blackouts.length)a={},a.$overlay=this.overlay(this.$content,f,this.$content.outerHeight(),"solo-gap"),a.$first_el=this.$first_element,this.inventory.gaps.push(a);else{var g,h=null;for(b=0,d=this.inventory.blackouts.length;d>b;b++){var i=this.inventory.blackouts[b];if(i.start>f){if(c=i.start-f,0===c||c<this.shortest_widget_height){null!==h&&h.$el.hasClass("layout-box-insert")&&(h.$el.hasClass("layout-box-insert-right")||!this.left_blocker_in_gap(h.$el.next(),i.start))&&(this.adjust_down(h.$el,c/2),i.start=i.$el.position().top,i.end=i.start+i.height),f=i.end,h=i;continue}if(a={},a.$overlay=this.overlay(i.$el,f,c,"gap"),a.$first_el=[],a.height=c,0===f)g=this.attributes(this.$first_element),g.end<=i.start&&(a.$first_el=this.$first_element);else{g=this.attributes(h.$el.next());for(var j=!1;g.start<h.end;)if(j=!1,g.$el.is("li")&&!g.$el.next().length&&(g.$el=g.$el.closest("ol,ul"),j=!0),g.$el=g.$el.next(),g.$el.is("ul,ol")&&!j&&(g.$el=g.$el.find("li:first")),!g.$el.is(".layout-box-thing")){if(!g.$el.length)break;g=this.attributes(g.$el)}g.start>=h.end&&g.end<i.start&&(a.$first_el=g.$el)}a.$first_el.length&&("undefined"!=typeof h&&h&&(e=a.$first_el.position().top,a.height=a.height-(e-h.end),a.start=e),a.height>this.shortest_widget_height&&this.inventory.gaps.push(a))}f=i.end,h=i}if(h&&h.end<this.$content.outerHeight()&&(c=this.$content.outerHeight()-h.end,c>this.shortest_widget_height)){for(a={},a.$overlay=this.overlay(h.$el,f,this.$content.outerHeight()-f,"last-gap"),a.$first_el=a.$overlay.next(),a.height=c;a.$first_el.length&&"undefined"!=typeof a.$first_el.get(0).offsetTop&&a.$first_el.get(0).offsetTop<h.end;)a.$first_el=a.$first_el.next();a.$first_el.length&&a.$first_el.get(0).offsetTop&&(e=a.$first_el.position().top,a.height=a.height-(e-h.end),a.start=e,a.height>this.shortest_widget_height&&this.inventory.gaps.push(a))}}},go_contentwidgets.inject_item=function(b){var c,d,e=0,f=null,g=null,h=null;go_contentwidgets.log("injecting injectable");var i=0,j=null;for(c=0,e=this.inventory.gaps.length;e>c;c++){g=this.inventory.gaps[c];var k=g.$overlay.outerHeight();k<this.shortest_widget_height||((null===j||k>this.inventory.gaps[j].$overlay.outerHeight())&&(j=c),i+=k)}for(c=0,e=this.inventory.gaps.length;e>c;c++)if(g=this.attributes(this.inventory.gaps[c].$overlay),g.$overlay=this.inventory.gaps[c].$overlay,g.$first_el=this.inventory.gaps[c].$first_el,(b.height!==this.tallest_widget_height||c===j)&&g.height>b.height){f=g.$first_el;var l=a(document.getElementById("hidden-sidebar")).find("> div:not(.widget_wijax)").filter(":not(:first-child)"),m=0;l.each(function(){m+=a(this).outerHeight()});var n=f.next(":not(.layout-box-insert,.layout-box-thing)"),o=i-g.height,p=m-o;for(0>=p&&(p=0);g.start>0&&g.height-b.height>p&&n.length&&n.position().top-g.start<g.end-n.position().top-p&&n.position().top+b.height<g.end;)f=n,n=f.next(":not(.layout-box-insert,.layout-box-thing)");if(!b.preferbottom){h=g;break}for(var q=this.attributes(f);q.end<=g.end&&g.end-q.start>b.height&&(f=q.$el,d=f.next(":not(.layout-box-thing)"),d.length);)q=this.attributes(d);h=g}if(!f)return!1;if(f.is("li")?(f.before('<li class="injection-list-item"/>'),f.prev().append(b.$el)):f.before(b.$el),!b.$el.hasClass("layout-box-insert-left")||b.$el.position().top&&b.$el.prev().length||b.$el.removeClass("layout-box-insert-left").addClass("layout-box-insert-right"),b.$el.hasClass("layout-box-insert-left")){var r=this.attributes(b.$el),s=h.end<r.end?h.end:r.end;this.left_blocker_in_gap(f,s)&&b.$el.removeClass("layout-box-insert-left").addClass("layout-box-insert-right")}a(document).trigger("go-contentwidgets-injected",{injected:b}),go_contentwidgets.log("end injecting injectable")},go_contentwidgets.left_blocker_in_gap=function(b,c){for(var d,e=this.attributes(b),f=["OL","UL","LI","BLOCKQUOTE"];e.end<=c&&e.start<c;){if(d=e.$el.prop("tagName"),-1!==a.inArray(d,f))return!0;e=this.attributes(e.$el.next())}return d=e.$el.prop("tagName"),-1!==a.inArray(d,f)?!0:!1},a(function(){go_contentwidgets.init(),go_contentwidgets.events()})}(jQuery);;
!function(a){"use strict";var b=function(b){var c=this;b=b||{},"string"==typeof b&&(b={elements:b}),this.sel=null,this.textSelection="",this.htmlSelection="",this.getSelectionText=function(a){var b="",d="";if(a=a||window.getSelection(),a.rangeCount){for(var e=document.createElement("div"),f=0,g=a.rangeCount;g>f;++f)e.appendChild(a.getRangeAt(f).cloneContents());d=e.textContent,b=e.innerHTML}return c.textSelection=d,c.htmlSelection=b||d,d},this.show=function(){setTimeout(function(){var b=window.getSelection();if(null!==b.anchorNode&&a(b.anchorNode).parents(".selectionShareable").length){var d=c.getSelectionText(b);if(!b.isCollapsed&&d&&d.length>10&&d.match(/ /)){var e=c.getSelectionRect(),f=e.top-5+window.pageYOffset-c.$popover.height(),g=0,h=b.anchorNode.parentNode,i=parseInt(a(h).css("line-height").replace("px",""),10),j=Math.max(Math.min(c.mousedown_page_x,c.mouseup_page_x),a(h).offset().left),k=Math.min(Math.max(c.mousedown_page_x,c.mouseup_page_x),a(h).offset().left+a(h).width()),l=Math.min(c.mousedown_page_y,c.mouseup_page_y),m=Math.max(c.mousedown_page_y,c.mouseup_page_y);l-=(l-a(h).offset().top)%i,g+=!isNaN(i)&&m-l>i?a(h).offset().left+a(h).width()/2:j+(k-j)/2,g-=c.$popover.width()/2,c.$popover.removeClass("anim").css("top",f+10).css("left",g).removeClass("hide"),setTimeout(function(){c.$popover.addClass("anim").css("top",f)},0),d=c.smart_truncate(d,102),d=encodeURIComponent(d),c.$popover.find("a").each(function(){a(this).attr("href",a(this).attr("href").replace(/(text|description|summary|body)(=)(\S*?)(&|$)(\S*?$)/,"$1$2"+d.replace(/\s/g,"+")+"$4$5"))})}}},10)},this.getSelectionRect=function(){var a,b,c,d=document.selection;if(window.getSelection){if(d=window.getSelection(),d.rangeCount&&(a=d.getRangeAt(0).cloneRange(),a.getClientRects()&&(b=a.getClientRects(),b.length>0&&(c=a.getClientRects()[0])),"undefined"==typeof c)){var e=document.createElement("span");if(e.getClientRects){e.appendChild(document.createTextNode("​")),a.insertNode(e),c=e.getClientRects()[0];var f=e.parentNode;f.removeChild(e),f.normalize()}}return c}},this.hide=function(){c.$popover.addClass("hide")},this.smart_truncate=function(a,b){if(!a||!a.length)return a;var c=a.length>b,d=c?a.substr(0,b-1):a;return d=c?d.substr(0,d.lastIndexOf(" ")):d,c?d+"...":d},this.render=function(){c.$popover=a('<div class="selection-sharer hide" id="selection-sharer-popover" style="position:absolute;"><div id="selection-sharer-popover-inner"><ul id="selection-sharer-popover-list"></ul></div><div class="selection-sharer-popover-clip"><span class="selection-sharer-popover-arrow"></span></div></div>'),document.body.appendChild(c.$popover[0]);var b=document.getElementById("selection-sharer-popover-list");if(share_links.twitter){var d=document.createElement("li"),e=a(document.createElement("a")).attr({"class":"goicon icon-twitter-circled",title:"Share this selection on Twitter",href:share_links.twitter});d.appendChild(e[0]),b.appendChild(d)}if(share_links.facebook){var f=document.createElement("li"),g=a(document.createElement("a")).attr({"class":"goicon icon-facebook-circled",title:"Share this selection on Facebook",href:share_links.facebook});f.appendChild(g[0]),b.appendChild(f)}if(share_links.googleplus){var h=document.createElement("li"),i=a(document.createElement("a")).attr({"class":"goicon icon-googleplus-circled",title:"Share this selection on Google+",href:share_links.facebook});h.appendChild(i[0]),b.appendChild(h)}if(share_links.linkedin){var j=document.createElement("li"),k=a(document.createElement("a")).attr({"class":"goicon icon-linkedin-circled",title:"Share this selection on LinkedIn",href:share_links.linkedin});j.appendChild(k[0]),b.appendChild(j)}if(share_links.reddit){var l=document.createElement("li"),m=a(document.createElement("a")).attr({"class":"goicon icon-reddit-circled",title:"Share this selection on Reddit",href:share_links.reddit});l.appendChild(m[0]),b.appendChild(l)}if(share_links.email){var n=document.createElement("li"),o=a(document.createElement("a")).attr({"class":"goicon icon-email-circled",title:"Share this selection via email",href:share_links.email});n.appendChild(o[0]),b.appendChild(n)}},this.setElements=function(b){"string"==typeof b&&(b=a(b)),c.$elements=b instanceof a?b:a(b),c.$elements.addClass("selectionShareable"),a(document).mouseup(function(a){c.mouseup_page_y=a.pageY,c.mouseup_page_x=a.pageX,c.show()}),a(document).mousedown(function(b){("a"!==b.target.nodeName.toLowerCase()||1!==a(b.target).closest("#selection-sharer-popover-list").length)&&(c.mousedown_page_y=b.pageY,c.mousedown_page_x=b.pageX,c.hide())})},this.render(),b.elements&&this.setElements(b.elements)};a.fn.selectionSharer=function(){var a=new b;return a.setElements(this),this},"function"==typeof define?define(function(){return b.load=function(a,c,d){var e=new b;e.setElements(".entry-content > .container > p"),d()},b}):window.SelectionSharer=b;var c=document.createElement("script");c.innerHTML='var sharer = new SelectionSharer( ".entry-content > .container > p" );',document.body.appendChild(c)}(jQuery);;
/*!
 * ScribAuthority jQuery plugin
 * Author: Matthew Batchelder
 * Author URI: http://borkweb.com
 *
 * USAGE:
 *
 * Initialization:
 * $('#element').ScribAuthority({ taxonomies: [ 'something', 'tag' ] });
 *
 * Adding default items:
 * $('#element').ScribAuthority( 'items', [
 *   {
 *     taxonomy: 'something',
 *     term: 'some-term',
 *     data: {
 *       term: 'something:some-term'
 *     }
 *   },
 *   ...
 * ] );
 *
 * Adding results:
 * $('#element').ScribAuthority( 'results', [
 *   {
 *     taxonomy: 'something',
 *     term: 'some-term',
 *     data: {
 *       term: 'something:some-term'
 *     }
 *   },
 *   ...
 * ] );
 *
 */
(function( $ ) {
	'use strict';

	var defaults = {
		id: null,
		classes: null,
		custom_enabled: true,
		replace_field: true,
		labels: {
			results: 'Results'
		}
	};

	var selector = 'scrib-authority-box';
	var options = {};
	var html = {};
	var selectors = {};
	var timeout_handler = null;

	var methods = {
		init: function( params ) {

			if ( 'undefined' !== typeof params && 'undefined' !== typeof params.url ) {
				scrib_authority_suggest.url = params.url;
			}

			// fix the ajax url
			if ( 'https:' === window.location.protocol ) {
				scrib_authority_suggest.url = scrib_authority_suggest.url.replace( 'http:', 'https:' );
			} else {
				scrib_authority_suggest.url = scrib_authority_suggest.url.replace( 'https:', 'http:' );
			}//end if

			options = $.extend( defaults, params );

			var type = 'undefined' !== typeof this.attr( 'type' ) ? this.attr( 'type' ) : 'text';

			// set up the html injection variables
			html = {
				$wrapper : $( '<div/>', { class: selector } ),
				$item    : $( '<li/>', { class: selector + '-item' } ),
				$items   : $( '<ul/>', { class: selector + '-items' } ),
				$entry   : $( '<input/>', {
					type: type,
					class: selector + '-entry ' + selector + '-input'
				} )
			};

			// initilaize the common selectors that we'll be using
			selectors.wrapper   = '.' + selector;
			selectors.category  = selectors.wrapper + '-result-category';
			selectors.category_results  = selectors.wrapper + '-result-category-results';
			selectors.category_custom  = selectors.wrapper + '-result-category-custom';
			selectors.entry     = selectors.wrapper + '-entry';
			selectors.item      = selectors.wrapper + '-item';
			selectors.items     = selectors.wrapper + '-items';
			selectors.newitem   = selectors.wrapper + '-new';
			selectors.noresults = selectors.wrapper + '-no-results';
			selectors.results   = selectors.wrapper + '-results';
			selectors.close     = selectors.item + ' .close';

			var $results = $( '<ul/>', {
				class: selector +'-results'
			} );

			// create the <li> that'll hold the header and record <ul>
			var $results_li = $( '<li/>', {
				class: selector + '-result-category ' + selector + '-result-category-results'
			} );

			// add a header for the result li
			$results_li.append( $( '<header/>', {
				text: options.labels.results
			} ) );

			// add a container for result records
			$results_li.append( '<ul/>' );

			// add the result li
			$results.append( $results_li );

			if ( options.custom_enabled ) {
				var $custom_results_li = $( '<li/>', {
					class: selector + '-result-category ' + selector + '-result-category-custom'
				} );

				$custom_results_li.append( $( '<header/>', {
					text: 'Custom'
				} ) );

				$custom_results_li.append( '<ul/>' );

				$results.append( $custom_results_li );
			}//end if

			$results.find('.' + selector + '-result-category-results ul').append( $( '<li/>', {
				class: selector + '-no-results',
				text: 'No terms were found matching your search.'
			} ) );

			var $entry_container = $( '<div/>', {
				class: selector + '-entry-container'
			} );

			$entry_container.append( html.$entry );

			if ( ! options.replace_field ) {
				$entry_container.find( selectors.wrapper + '-input' ).removeClass( selectors.entry.substr( 1 ) );
			}//end if

			$entry_container.append( $results );

			return this.each( function() {
				var $orig;
				var $root;
				var $entry;

				// wrap and hide the original bound element
				$orig = $( this );
				$orig.wrap( html.$wrapper );

				if ( options.replace_field ) {
					$orig.hide();
				} else {
					$orig.addClass( selectors.entry.substr( 1 ) );
				}//end else

				// identify the root element for the Authority UI
				$root = $orig.closest( selectors.wrapper );

				// archive off the ID of the original bound element
				$root.data('target', $orig.attr('id'));

				// if there was an id attribute passed along in the options, set the id element of the root
				if( null !== options.id ) {
					$root.attr('id', options.id);
					options.id = null;
				}//end if

				// if there were some classes passed in the options, add those to the root
				if( null !== options.classes ) {
					if( options.classes instanceof Array ) {
						$.each( options.classes, function( index, value ) {
							$root.addClass( value );
						});
					} else {
						$root.addClass( options.classes );
					}//end else

					options.classes = null;
				}//end if

				// add the items container
				$root.append( html.$items );

				// add the entry/results container
				$root.append( $entry_container );

				//set top to the inverse of search-box margin to ensure it snugs up to the search box
				$entry_container.css('top', function() {
					var margin = $( selectors.entry ).css( 'margin-bottom' ).replace( 'px', '' );

					return parseInt( margin, 10 ) * -1;
				});

				$root.append( $( '<div/>', {
					class: selector + '-clearfix'
				} ) );

				if ( options.replace_field ) {
					$entry = $root.find( selectors.entry );
					for ( var attr, i = 0, attrs = $orig.get(0).attributes, length = attrs.length; i < length; i++ ) {
						attr = attrs.item( i );

						if ( 'name' !== attr.nodeName && 'class' !== attr.nodeName && 'id' !== attr.nodeName && 'type' !== attr.nodeName && 'style' !== attr.nodeName ) {
							$entry.attr( attr.nodeName, attr.nodeValue );
						}//end if
					}//end for
				}//end if

				methods.taxonomies( $(this), options.taxonomies );

				// click event: result item
				$root.on( 'click.scrib-authority-box MSPointerDown.scrib-authority-box', selectors.results + ' ' + selectors.item, function( e ) {
					e.preventDefault();

					methods.select_item( $(this), $root );
					methods.update_target( $root );
				});

				$root.$current_touch_item = null;
				$root.current_touch_y_pos = null;

				$root.on( 'touchstart.scrib-authority-box', selectors.results + ' ' + selectors.item, function( e ) {
					$root.$current_touch_item = $( this );
					$root.current_touch_y_pos = e.changedTouches[0].pageY;
				});

				$root.on( 'touchend.scrib-authority-box', selectors.results + ' ' + selectors.item, function( e ) {
					e.preventDefault();

					// if there isn't a touch start item, bail
					if ( ! $root.$current_touch_item ) {
						$root.$current_touch_item = null;
						$root.current_touch_y_pos = null;
						return;
					}//end if

					var original_item = $root.$current_touch_item.find( '.taxonomy' ).html();
					original_item = original_item + ':' + $root.$current_touch_item.find( '.term' ).html();

					var current_item = $( this ).find( '.taxonomy' ).html();
					current_item = current_item + ':' + $( this ).find( '.term' ).html();

					// if the end item is not the start item, bail
					if ( original_item !== current_item ) {
						$root.$current_touch_item = null;
						$root.current_touch_y_pos = null;
						return;
					}//end if

					// if there are no changedTouches, bail
					if ( 'undefined' === typeof e.changedTouches || 0 === e.changedTouches.length ) {
						$root.$current_touch_item = null;
						$root.current_touch_y_pos = null;
						return;
					}

					// if the changed touches moved more than 10 pixels in any direction, bail (we're probably scrolling)
					if ( ( $root.current_touch_y_pos + 10 ) < e.changedTouches[0].pageY || ( $root.current_touch_y_pos - 10 ) > e.changedTouches[0].pageY ) {
						$root.$current_touch_item = null;
						$root.current_touch_y_pos = null;
						return;
					}//end if

					$root.$current_touch_item = null;
					$root.current_touch_y_pos = null;

					methods.select_item( $(this), $root );
					methods.update_target( $root );
				});

				// click event: root element
				$root.on( 'click.scrib-authority-box touchstart.scrib-authority-box MSPointerDown.scrib-authority-box', function() {
					var $entry = $( this ).find( selectors.entry );
					var $results = $entry.closest( '.scrib-authority-box' ).find( '.scrib-authority-box-results.has-results' );

					// if the root element is clicked, focus the entry
					$entry.focus();

					// when focusing, if the input box already has content in it that returned results, show them
					if ( $entry.val() && $results.length ) {
						$results.addClass( 'show' );
					}//end if
				});

				// click event: handles dismissing the results box if clicking off of the box or search
				$( document ).on( 'click.scrib-authority-box-cancel touchstart.scrib-authority-box-cancel MSPointerDown.scrib-authority-box-cancel', function( e ) {
					var $el = $( e.target );

					if ( $el.is( '.scrib-authority-box' ) || 0 !== $el.closest( '.scrib-authority-box').length ) {
						return;
					}//end if

					methods.hide_results( $root );
				});

				// click event: base item
				$root.on( 'click.scrib-authority-box touchstart.scrib-authority-box MSPointerDown.scrib-authority-box', selectors.item, function( e ) {
					// all we want to do is stop propagation so the entry isn't auto-focused
					e.stopPropagation();
				});

				// click event: item close
				$root.on( 'click.scrib-authority-box touchstart.scrib-authority-box MSPointerDown.scrib-authority-box', selectors.close, function( e ) {
					// an item is being x-ed out.  remove it
					e.stopPropagation();

					methods.remove_item( $(this).closest( selectors.item ), $root );
					methods.update_target( $root );
				});

				$root.on( 'keydown.scrib-authority-box-down', selectors.entry, function( e ) {
					// the keys that are handled in here: navigation and selection
					var code = (e.keyCode ? e.keyCode : e.which);

					if ( 40 === code ) {
						// if DOWN arrow is pressed
						var $focused = methods.focused_result( $root );

						if ( ! $focused.length ) {
							$root.find( selectors.results + ' ' + selectors.item + ':first' ).addClass('focus');
						} else {
							if ( 0 === $focused.nextAll( selectors.item ).length ) {
								$focused.closest( selectors.category ).nextAll( selectors.category ).find( selectors.item + ':first' ).addClass('focus');
							} else {
								$focused.nextAll( selectors.item ).first().addClass('focus');
							}//end else

							$focused.removeClass('focus');
						}//end else
					}//end if
				});

				$root.on( 'keydown.scrib-authority-box-up', selectors.entry, function( e ) {
					// the keys that are handled in here: navigation and selection
					var code = (e.keyCode ? e.keyCode : e.which);

					if ( 38 === code ) {
						// if UP arrow is pressed
						var $focused = methods.focused_result( $root );

						if ( ! $focused.length ) {
							$root.find( selectors.results + ' ' + selectors.item + ':last' ).addClass('focus');
						} else {
							if ( 0 === $focused.prevAll( selectors.item ).length ) {
								$focused.closest( selectors.category ).prevAll( selectors.category ).find( selectors.item + ':first' ).addClass('focus');
							} else {
								$focused.prevAll( selectors.item ).first().addClass('focus');
							}//end else

							$focused.removeClass('focus');
						}//end else
					}//end if
				});

				// keydown event: entry field
				$root.on( 'keydown.scrib-authority-box-enter', selectors.entry, function( e ) {
					// the keys that are handled in here: navigation and selection
					var code = (e.keyCode ? e.keyCode : e.which);

					if( 13 === code ) {
						var $focused = methods.focused_result( $root );

						if ( $focused.length && methods.is_results_visible( $root ) ) {
							// if ENTER is pressed
							e.preventDefault();
							$focused.removeClass('focus').click();
							$root.find( selectors.entry ).val('');
							methods.hide_results( $root );
						} else if ( $.trim( $(this).val() ).length ){
							var val = $.trim( $(this).val() );
							$orig.val( val );

							$(this).trigger( 'scriblio-authority-enter', {
								value: val
							});
						}//end else
					}//end if
				});

				// keydown event: entry field
				$root.on( 'keydown.scrib-authority-box-esc', selectors.entry, function( e ) {
					// the keys that are handled in here: navigation and selection
					var code = (e.keyCode ? e.keyCode : e.which);

					if ( 27 === code ) {
						var $focused = methods.focused_result( $root );

						// if ESC is pressed
						$focused.removeClass('focus');
						methods.hide_results( $root );
					}//end if
				});

				// keyup event: entry field
				$root.on( 'keyup.scrib-authority-box', selectors.entry, function( e ) {
					// the keys that are handled in here: backspace, delete, and regular characters
					var code = (e.keyCode ? e.keyCode : e.which);
					var val = $(this).val();

					// disallow < and >
					if ( 188 === code || 190 === code ) {
						$(this).val( val.replace( '>', '' ).replace( '<', '' ) );
						return false;
					}//end if

					// if a valid char is pressed
					if ( 48 <= code || 8 === code || 46 === code ) {
						var $custom = $root.find( selectors.newitem );

						// loop over the custom "results" and set their term values and associated data attributes
						$custom.each( function() {
							var $el = $( this );

							// make a slug-friendly version of the value entered by the user
							var clean_val = val.toLowerCase();
							clean_val = clean_val.replace( /[^a-z0-9\-\_ ]/g, ' ' );
							clean_val = clean_val.replace( / +/g, '-' );

							$el.find( '.term' ).html( val );
							$el.attr( 'data-term', $el.find( '.taxonomy' ).data( 'taxonomy' ) + ':' + clean_val );
							$el.attr( 'data-slug', clean_val );
						});

						if( 0 === $.trim( $(this).val() ).length ) {
							$root.closest( 'form' ).removeClass( 'has-text' );
							$root.find( selectors.results ).removeClass( 'has-results no-results' );
							methods.hide_results( $root );
						} else {
							$root.closest( 'form' ).addClass( 'has-text' );
							if ( timeout_handler ) {
								window.clearTimeout( timeout_handler );
							}//end if

							timeout_handler = window.setTimeout( function() {
								methods.search( $root, $root.find( selectors.entry ) );
							}, 300 );
						}//end else
					}//end if
				});
			});
		},
		/**
		 * This method generates a data string based on the currently selected items
		 *
		 * @param string which The data element to retrieve
		 */
		data_string: function() {
			var $el = methods.root( $(this) );
			var serialized = $el.ScribAuthority('serialize');

			var terms = [];

			$.each( serialized, function( index, value ) {
				terms.push( value.taxonomy + ':' + value.term );
			});

			return terms.join(',');
		},
		/**
		 * returns a focused result
		 *
		 * @param jQueryObject $root Root element for this UI widget
		 */
		focused_result: function( $root ) {
			return $root.find( selectors.results + ' .focus' );
		},
		/**
		 * generate item HTML based on an object.
		 *
		 * @param object data Object representing an item
		 */
		generate_item: function( data ) {
			var $item = html.$item.clone();

			// let's store the object that is used to generate this item.
			$item.data( 'origin-data', data );

			// loop over the properties in the item and add them to the HTML
			$.each( data, function( key, data_value ) {
				if ( ! data_value ) {
					return;
				}//end if

				// the only exception are the data elements.  Add them to the item's data storage
				if( 'data' === key ) {
					$.each( data_value, function( data_key, key_value ) {
						$item.data( data_key, key_value );

						// We need the slug available to us later on.
						if ( 'term' === data_key ) {
							$item.attr( 'data-' + data_key, key_value );
							var tax_term = key_value.split( ':' );
							$item.attr( 'data-slug', tax_term[1] );
						}
					});
				} else if ( 'taxonomy' === key ) {
					var $taxonomy = $( '<span/>', {
						class: key,
						text: data_value.labels.singular_name
					} );

					$item.append( $taxonomy );

					$taxonomy.attr( 'data-taxonomy', data_value.name );
				} else {
					var $inject = $( '<span/>', {
						class: key
					} );

					$inject.html( data_value );
					$item.prepend( $inject );
				}//end else
			});

			// gotta add the close box!
			$item.append( '<span class="close">x</span>' );

			return $item;
		},
		/**
		 * hide the results box
		 *
		 * @param jQueryObject $root Root element for this UI widget
		 */
		hide_results: function( $root ) {
			$root.find( selectors.results + '.show' ).removeClass('show');
		},
		/**
		 * add an item to either the results or the items HTML area
		 *
		 * @param jQueryObject $el Element for finding the root element
		 * @param String container Area the elements will be added to ( results or items )
		 * @param Object data Item definition object
		 */
		inject_item: function( $el, container, data ) {
			$el = methods.root( $el );
			var $item = methods.generate_item( data );

			if ( 0 !== $el.find( selectors[container] + ' ' + selectors.category ).length ) {
				$el.find( selectors[container] + ' ' + selectors.category + '-results ul' ).append( $item );
			} else {
				$el.find( selectors[container] ).append( $item );
			}//end else
		},
		/**
		 * determines if results are visible
		 *
		 * @param jQueryObject $root Root element for this UI widget
		 */
		is_results_visible: function( $root ) {
			return $root.find( selectors.results ).hasClass('show');
		},
		/**
		 * inject an item into the 'items' HTML area
		 *
		 * @param Object data Item definition object
		 */
		item: function( data ) {
			methods.inject_item( this, 'items', data );
		},
		/**
		 * populate the 'items' HTML area
		 *
		 * @param Array data Array of item definition objects to insert
		 */
		items: function( data ) {
			return this.each( function() {
				var $el = $(this);
				var $root = methods.root( $(this) );
				$root.data( 'items', data );

				$.each( data, function( i, value ) {
					$el.ScribAuthority('item', value);
				});
			});
		},
		/**
		 * Remove an item from the 'items' HTML area
		 *
		 * @param jQueryObject $item Item to remove
		 * @param jQueryObject $root Root html element for authority UI
		 */
		remove_item: function( $item, $root ) {
			var items = $root.data( 'items' ) || [];
			var new_items = [];
			var origin = $item.data( 'origin-data' );

			$.each( items, function( i, value ) {
				var temp_combo = value.taxonomy.name + ':' + value.term;
				var temp_origin_combo = origin.taxonomy.name + ':' + origin.term;
				if ( temp_combo !== temp_origin_combo ) {
					new_items.push( value );
				}//end if
			});

			$root.data( 'items', new_items );

			$item.remove();
		},
		/**
		 * inject an item into the 'results' HTML area
		 *
		 * @param Object data Item definition object
		 */
		result: function( data ) {
			methods.inject_item( this, 'results', data );
		},
		/**
		 * populate the 'results' HTML area
		 *
		 * @param Array data Array of item definition objects to insert
		 */
		results: function( data ) {
			return this.each( function() {
				var $el = $(this);
				var items = $el.data('items');

				if ( ! items ) {
					items = [];
				}//end if

				$el.find( selectors.results + ' ' + selectors.item + ':not(' + selectors.newitem + ')' ).remove();

				if ( data.length > 0 ) {
					$.each( data, function( i, value ) {
						// if the results item DOES NOT exist in the set of elements already selected,
						//   add it to the result area
						if ( 0 === $.grep( items, function( element ) { return element.data.term === value.data.term; }).length ) {
							$el.ScribAuthority('result', value);
						}//end if
					});
				}//end if
			});
		},
		/**
		 * locate the root Authority UI element
		 *
		 * @param jQueryObject $el Child element of root used to find root.
		 */
		root: function( $el ) {
			if( ! $el.hasClass( selector ) ) {
				$el = $el.closest( selectors.wrapper );
			}//end if

			return $el;
		},
		search: function( $root, $entry ) {
			var params = {
				s: $.trim( $entry.val() ),
				threshold: scrib_authority_suggest.threshold
			};

			if ( 0 === params.s.length ) {
				return;
			}//end if

			var url = scrib_authority_suggest.url;

			// we need to handle both pretty and admin-ajax URLs - so ? may or may not be present
			if ( -1 !== url.indexOf( '?' ) ) {
				url += '&callback=?';
			} else {
				url += '?callback=?';
			}//end else

			var xhr = $.getJSON( url, params );

			xhr.done( function( data ) {
				if ( typeof data !== 'undefined' ) {
					$root.ScribAuthority('results', data);
					methods.show_results( $root );
				}//end if
			});
		},
		/**
		 * Select an item from the 'results' HTML area and move it to the 'items area'
		 *
		 * @param jQueryObject $item Selected item
		 * @param jQueryObject $root Root Authority UI element
		 */
		select_item: function( $item, $root ) {
			var $newitem;
			// get the cached items object from the root element
			var items = $root.data('items') || [];

			// add the selected item's object data into the items object
			$root.data( 'items', items );

			if( $item.is( selectors.newitem ) ) {
				$newitem = $item.clone();
				$newitem.data('origin-data', {
					taxonomy: $item.find('.taxonomy').data('taxonomy'),
					term: $item.find('.term').html()
				});

				$newitem.find('.taxonomy').data('taxonomy', $item.find('.taxonomy').data('taxonomy'));

				$newitem.removeClass( selectors.newitem.substring( 1 ) ).appendTo( $root.find( selectors.items ) );
				items.push( $newitem.data( 'origin-data' ) );
			} else {
				$newitem = $item.clone();

				$root.find( selectors.items ).append( $newitem );
				items.push( $item.data( 'origin-data' ) );
			}//end else

			$root.find( selectors.entry ).focus();

			if( $root.find( selectors.items ).find( selectors.item ).length === 0 ) {
				$root.find( selectors.noitems ).show();
			}//end if

			// advertise that an item has been selected
			$item.trigger( 'scriblio-authority-item-selected', { item: $item });

			methods.hide_results( $root );
		},
		/**
		 * serialize the selected items into an array
		 */
		serialize: function() {
			var $el = methods.root( $(this) );
			var data = [];
			$el.find( selectors.items + ' ' + selectors.item ).each( function() {
				var $term = $(this);

				var row = {
					taxonomy: $term.find('.taxonomy').data('taxonomy'),
					term: $term.data('slug')
				};

				data.push( row );
			});

			return data;
		},
		/**
		 * display the results drop-down auto-completer
		 *
		 * @param jQueryObject $root Root Authority UI HTML element
		 */
		show_results: function( $root ) {
			var $results = $root.find( selectors.results );

			if( $results.find( '.scrib-authority-box-result-category-results ' + selectors.item ).length > 0 ) {
				$results.addClass( 'has-results' ).removeClass( 'no-results' );
				$results.find( selectors.noresults ).hide();
			} else {
				$results.removeClass( 'has-results' ).addClass( 'no-results' );
				$results.find( selectors.noresults ).show();
			}//end else

			if ( 0 !== $.trim( $root.find( selectors.entry ).val() ).length ) {
				$results.addClass('show');
			}//end if
		},
		taxonomies: function( $el, taxonomies ) {
			var $root = methods.root( $el );
			options.taxonomies = taxonomies;

			var $categories = $root.find( selectors.category + '-custom' ).find('ul');

			if ( options.taxonomies ) {
				$.each( options.taxonomies, function( i, value ) {
					var $item = $( '<li/>', {
						class: selector + '-item ' + selector + '-new'
					} );

					var $taxonomy = $( '<span/>', {
						class: 'taxonomy',
						text: value.labels.singular_name
					} );

					$item.append( $taxonomy );
					$item.prepend( '<span class="term"></span>' );
					$item.append( '<span class="close">x</span>' );
					$categories.append( $item );

					$taxonomy.attr( 'data-taxonomy', value.name );
				});
			}//end else
	  },
		/**
		 * update the target UI element (textarea or input, typically) with the serialized/converted
		 * selected items
		 *
		 * @param jQueryObject $root Root Authority UI element
		 */
		update_target: function( $root ) {
			var $target = $root.find( '#' + $root.data('target') );
			$target.val( $target.ScribAuthority('data_string', 'term') );
		}
	};

	$.fn.ScribAuthority = function( method ) {
    // Method calling logic
    if ( methods[method] ) {
      return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));
    } else if ( typeof method === 'object' || ! method ) {
      return methods.init.apply( this, arguments );
    } else {
      $.error( 'Method ' +  method + ' does not exist on jQuery.ScribAuthority' );
    }
	};

})( jQuery );
;
function metaphone(a,b){function c(a){return-1!=="AEIOU".indexOf(a)}function d(a){for(var b,c=a.length,d=a.charAt(0),e=d,f=1;c>f;f++)b=a.charAt(f),(b!==d||"C"===b||"G"===b)&&(e+=b),d=b;return e}a=(null==a?"":a+"").toUpperCase(),a=d(a);var e=a.length,f=0,g="";"WH"===a.substr(0,2)&&(a="W"+a.substr(2));var h=a.charAt(0),i="",j=a.charAt(1),k="";if(e>=1)switch(h){case"A":g+="E"===j?"E":"A",f+=1;break;case"E":case"I":case"O":case"U":g+=h,f+=1;break;case"G":case"K":case"P":"N"===j&&(f+=1);break;case"W":"R"===j&&(f+=1)}for(;e>f;f++)if(h=a.charAt(f),i=a.charAt(f-1),j=a.charAt(f+1),k=a.charAt(f+2),!c(h))switch(h){case"B":"M"!==i&&(g+="B");break;case"C":e>=f+1?"SCH"!==a.substr(f-1,3)?g+=0===f&&e>=f+2&&c(k)?"K":"X":"IA"===a.substr(f+1,2)?g+="X":-1!=="IEY".indexOf(j)?f>0?"S"!==i&&(g+="S"):g+="S":g+="K":g+="K";break;case"D":e>=f+2&&"G"===j&&-1!=="EIY".indexOf(k)?(g+="J",f+=2):g+="T";break;case"F":g+="F";break;case"G":if(e>f){if("N"===j&&f+1===e-1||"N"===j&&"S"===k&&f+2===e-1)break;if("NED"===a.substr(f+1,3)&&f+3===e-1)break;if("ING"===a.substr(f-2,3)&&f===e-1)break;if(e-1>=f+1&&"OUGH"===a.substr(f-2,4)){g+="F";break}"H"===j&&e>=f+2?c(k)&&(g+="K"):f+1===e?"N"!==j&&(g+="K"):f+3===e?"NED"!==a.substr(f+1,3)&&(g+="K"):e>=f+1?-1!=="EIY".indexOf(j)?"G"!==i&&(g+="J"):(0===f||"D"!==i||-1==="EIY".indexOf(j))&&(g+="K"):g+="K"}else g+="K";break;case"M":case"J":case"N":case"R":case"L":g+=h;break;case"Q":g+="K";break;case"V":g+="F";break;case"Z":g+="S";break;case"X":g+=0===f?"S":"KS";break;case"K":(0===f||"C"!==i)&&(g+="K");break;case"P":g+=e>=f+1&&"H"===j?"F":"P";break;case"Y":(f+1>e||c(j))&&(g+="Y");break;case"H":(0===f||-1==="CSPTG".indexOf(i))&&c(j)===!0&&(g+="H");break;case"S":g+=e>=f+1?"H"===j?"X":e>=f+2&&"I"===j&&-1!=="AO".indexOf(k)?"X":"S":"S";break;case"T":g+=e>=f+1?"H"===j?"0":e>=f+2&&"I"===j&&-1!=="AO".indexOf(k)?"X":"T":"T";break;case"W":e>=f+1&&c(j)&&(g+="W")}return b=parseInt(b,10),g.length>b?g.substr(0,b):g}function similar_text(a,b,c){if(null===a||null===b||"undefined"==typeof a||"undefined"==typeof b)return 0;a+="",b+="";var d,e,f,g,h=0,i=0,j=0,k=a.length,l=b.length;for(j=0,d=0;k>d;d++)for(e=0;l>e;e++){for(f=0;k>d+f&&l>e+f&&a.charAt(d+f)===b.charAt(e+f);f++);f>j&&(j=f,h=d,i=e)}return g=j,g&&(h&&i&&(g+=this.similar_text(a.substr(0,i),b.substr(0,i))),k>h+j&&l>i+j&&(g+=this.similar_text(a.substr(h+j,k-h-j),b.substr(i+j,l-i-j)))),c?200*g/(k+l):g}function soundex(a){if(a=(a+"").toUpperCase(),!a)return"";for(var b,c,d,e=[0,0,0,0],f={B:1,F:1,P:1,V:1,C:2,G:2,J:2,K:2,Q:2,S:2,X:2,Z:2,D:3,T:3,L:4,M:5,N:5,R:6},g=0,h=0;(c=a.charAt(g++))&&4>h;)(b=f[c])?b!==d&&(e[h++]=d=b):(h+=1===g,d=0);return e[0]=a.charAt(0),e.join("")};
if("undefined"==typeof go_search_suggest)var go_search_suggest={};!function(a){"use strict";go_search_suggest.init=function(){if("undefined"!=typeof scrib_authority_data){this.timer=null;var b=a('.search-box, .nav-search input[name="s"]');b.each(function(){var c=a(this),d={custom_support:!1,labels:{results:c.data("go-search-suggest-label")||"Search for:"},replace_field:!1,taxonomies:scrib_authority_taxonomies};c.attr("autocomplete","off");var e=c.closest("form").attr("action");if("/"!==e.substr(-1)&&(e+="/"),d.url=e+"scriblio-authority-suggest/",c.ScribAuthority(d),"undefined"!=typeof go_search_suggest.terms&&go_search_suggest.terms.length){var f=c.ScribAuthority("root",c);c.ScribAuthority("results",go_search_suggest.terms);var g=f.find(".scrib-authority-box-results");c.on("focus",function(){window.clearTimeout(go_search_suggest.timer),c.ScribAuthority("show_results",f),g.addClass("show")}),c.on("blur",function(){go_search_suggest.timer=setTimeout(function(){c.ScribAuthority("hide_results",f)},300)}),f.on("keyup.go-search-suggest",".search-box",function(d){(8===d.keyCode||46===d.keyCode)&&""===a.trim(b.val())&&go_search_suggest.terms.length>0&&(g.find(".scrib-authority-box-result-category-results ul").html(""),c.ScribAuthority("results",go_search_suggest.terms))})}}),a(document).on("submit","form.search",function(a){a.preventDefault()}),a(document).on("scriblio-authority-enter","form.search",function(b,c){var d=a(this),e=d.attr("action");d.hasClass("prevent-keyword-search")||(e+=-1===e.indexOf("?")?"?":"&",e+="s="+escape(c.value),document.location=e)}),a(document).on("scriblio-authority-item-selected","form.search",function(b,c){if("undefined"!=typeof c.item&&0!==c.item.length){var d=c.item.data("origin-data");if("undefined"!=typeof d.taxonomy){var e=a(this),f=e.attr("action"),g=d.taxonomy,h="post_tag"===g.name?"tag":g.name;f+=-1===f.indexOf("?")?"?":"&",f+=h+"="+c.item.data("slug"),e.find(".scrib-authority-box-entry").hide(),a(document).trigger("go_search_suggest.item.click",[h,c.item.data("slug"),c.item]),document.location=f}}});var c=a('<div class="suggest-message">For better results, try a Tag filter instead:</div>'),d=a('<div class="suggest-message">Were you looking for this?</div>');a(".selected-facets").before('<div class="facet-suggestions"><ul class="facets"/></div>');var e=a(".facet-suggestions"),f=e.find(".facets"),g="",h="";a(".widget_scrib_searcheditor .selected-facets .facets .facet-container.first label").each(function(){var b=a(this);if("Search Keyword"===a.trim(b.html())){var i=null,j=null,k=null;if(i=b.closest(".facet-container").find(".facet .term"),j=a.trim(i.html()),0===j.length)return;if(j=j.replace(/^("|'|“|‘)*|("|'|”|’)*$/g,""),0===j.length)return;k=metaphone(j);var l=soundex(j),m=j.toLowerCase(),n=null,o='<li class="facet-container %%FACET_CLASS%%"><label class="%%EXACT_MATCH_CLASS%%">%%TAXONOMY_LABEL%%</label><span class="separator %%EXACT_MATCH_CLASS%%">:</span><span class="facet"><a href="%%TERM_URL%%" class="term">%%TERM%%</a><span class="inline-icon"><a href="%%TERM_URL%%" class="goicon icon-search"></a></span></span></li>';a(document).on("wijax-loaded",function(b,i){if("widget-go-widget-areas-2"===i){a(".widget_scriblio_facets .term-link").each(function(){var b=a(this).clone();b.find(".count").remove();var c=a(this).closest("li").data("term"),d=a(this).closest("li").data("taxonomy"),e=a.trim(a(this).closest(".widget_scriblio_facets").find(".widget-title").html()),f=a(this).closest("li").data("term-url");if("string"!=typeof c&&(c=new String(c)),c.toLowerCase()===m||metaphone(c)===k||soundex(c)===l||similar_text(j,c,1)>61){var i="";d!==n&&(n=d,i="first");var p=o.replace(/%%TAXONOMY_LABEL%%/g,e).replace(/%%FACET_CLASS%%/g,i).replace(/%%TERM%%/g,c).replace(/%%TERM_URL%%/g,f);c.toLowerCase()===m?h+=p.replace(/%%EXACT_MATCH_CLASS%%/g,"exact-match"):g+=p.replace(/%%EXACT_MATCH_CLASS%%/g,"")}}),h.length>0&&(g=h),f.append(g);var p=g.match(/li class="facet-container/g),q=null===p?0:p.length;q>0&&(e.prepend(1===q?d:c),e.show())}})}})}}}(jQuery),jQuery(function(){"use strict";go_search_suggest.init()});;
